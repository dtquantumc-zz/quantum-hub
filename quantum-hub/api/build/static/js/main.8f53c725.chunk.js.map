{"version":3,"sources":["images/DTQC_Logo0.svg","images/ubc-logo-2018-crest-blue-rgb72.svg","images/DTS_Dark_00.svg","images/GU_Icon_Blue.svg","images/msft.svg","images/dwave.svg","images/RedMarker.png","images/BlueMarker.png","images/anneal_schedule.png","components/Widget/LongRequest.js","components/Widget/Sudoku/SudokuVariables.js","components/Widget/Sudoku/sudokuHelpers.js","components/Widget/Sudoku/sudokuSolveRequest.js","components/Widget/Sudoku/randSolvableBoard.js","assets/jss/material-kit-react.js","assets/jss/material-kit-react/components/buttonStyle.js","components/CustomButtons/Button.js","components/Widget/Sudoku/GridSquare.js","components/utils.js","components/Widget/Sudoku/SudokuValidationUtils.js","assets/jss/material-kit-react/components/sudokuStyle.js","components/Widget/Sudoku/Sudoku.js","components/Widget/Nurse/NurseVariables.js","components/Widget/Nurse/nurseSolveRequest.js","components/Dialog/NursesOnDayDialog.js","assets/jss/material-kit-react/components/nurseScheduleStyle.js","components/DatePicker/NurseSchedule.js","assets/jss/material-kit-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-kit-react/components/nurseSchedulingInputStyle.js","components/Inputs/NurseSchedulingInput.js","assets/jss/material-kit-react/components/nurseDetailTableStyle.js","components/Table/NurseDetailTable.js","assets/jss/material-kit-react/components/nurseStyle.js","components/Widget/Nurse/NurseScheduler.js","components/Widget/Lattice/latticeVars.js","components/Widget/Lattice/latticeSolveRequest.js","components/Widget/Lattice/HexGrid.js","assets/jss/material-kit-react/components/latticeStyle.js","components/Widget/Lattice/LatticeColourer.js","assets/jss/material-kit-react/components/isingStyle.js","components/Widget/Ising/IsingModel.js","components/Widget/TSP/Keys.js","components/Widget/TSP/GraphComponents.js","components/Widget/TSP/Graph.js","components/Widget/TSP/tspSolveRequest.js","components/Widget/TSP/TSPutils.js","components/Widget/TSP/TSPstate.js","components/Widget/TSP/PersistentGraph.js","components/Widget/TSP/RoutingMachine.js","assets/jss/material-kit-react/components/travellingSalespersonStyle.js","components/Widget/TSP/Map.js","components/Widget/TSP/TravellingSalesperson.js","components/Widget/EmptyWidget/EmptyWidget.js","components/Typography/NurseBriefDescriptionText.js","components/Typography/NurseReadMoreDescriptionText.js","components/Typography/SudokuBriefDescriptionText.js","components/Typography/SudokuReadMoreDescriptionText.js","components/Typography/LatticeBriefDescriptionText.js","components/Typography/LatticeReadMoreDescriptionText.js","components/Typography/TSPbriefDescriptionText.js","components/Typography/TSPreadMoreDescriptionText.js","components/Typography/IsingBriefDescriptionText.js","components/Typography/IsingReadMoreDescriptionText.js","components/Widget/widgetList.js","assets/jss/material-kit-react/components/buttonGroupStyle.js","components/ButtonGroup/ButtonGroup.js","assets/jss/material-kit-react/components/consoleStyle.js","components/CustomOutput/console.js","assets/jss/material-kit-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-kit-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-kit-react/components/descriptionCardStyle.js","components/Card/DescriptionCard.js","assets/jss/material-kit-react/components/headerStyle.js","components/Header/Header.js","assets/jss/material-kit-react/tooltipsStyle.js","assets/jss/material-kit-react/components/headerLinksStyle.js","components/Header/RightHeaderLinks.js","components/Header/LeftHeaderLinks.js","components/Grid/GridContainer.js","assets/jss/material-kit-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-kit-react/components/footerLinksStyle.js","components/Footer/FooterLinks.js","assets/jss/material-kit-react/views/app.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","updateRequest","onQueue","onUpdate","onComplete","onFail","outputFunc","job","xhr","XMLHttpRequest","params","jobID","open","responseType","onload","onLoad","setRequestHeader","console","log","send","JSON","stringify","status","response","jobStatus","newjob","setTimeout","statusText","makeLongRequest","SudokuVariables","newXHR","newState","state","isGridAllZeros","grid","every","gridItem","emptySudokuGrid","empty","setSudokuGrid","setBold","newGrid","Array","fill","newBold","resetSudokuGrid","setGrid","setCur","setEmpty","boldify","i","sudokuSolveRequest","sudokuGrid","setEnabled","outputToConsole","appendToConsole","getAPIKey","gridValidator","setLoading","sudokuVars","sudokuArray","y","push","x","map","row","join","typeOfProblem","setState","solvedBoard","solved_board","flattenedBoard","concat","solution_message","error","setXHR","postSolve","checkSolvable","gridmask","Num","j","rand","block","Math","floor","masks","vals","shuffle","val","valM","makeGridMask","mask","arr","a","length","b","random","getRandSolvableBoard","makeFullGrid","toTry","fails","oldvals","newgrid","flatGrid","container","paddingRight","paddingLeft","marginRight","marginLeft","width","maxWidth","defaultFont","fontFamily","fontWeight","lineHeight","title","color","background","boxShadow","margin","paddingTop","borderTop","height","textDecoration","cardTitle","marginTop","buttonStyle","button","minHeight","minWidth","backgroundColor","border","borderRadius","position","padding","fontSize","textTransform","letterSpacing","willChange","transition","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","transform","left","fullWidth","primary","info","success","warning","danger","rose","white","twitter","facebook","google","github","geeringupPrimary","geeringupSecondary","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","link","justIcon","makeComponentStyles","makeStyles","RegularButton","React","forwardRef","props","ref","children","size","className","rest","classes","btnClasses","classNames","Button","GridSquare","focused","bolded","rowInvalid","colnInvalid","blockInvalid","validValue","value","String","invalidValue","type","id","onClick","enabled","invalid","Utils","key","object","SudokuValidationUtils","sudokuValidationResults","areRowsValid","areColnsValid","areBlocksValid","isEmptyObject","duplicatesInRow","duplicatesInColn","duplicatesInBlock","isKeyLengthZero","isObjectConstructor","Object","keys","constructor","setters","getSudokuValidationResults","isValidSudokuGrid","resetInvalidStates","updateInvalidStates","seenInRow","seenInColn","seenInBlock","sudokuBoard","getUnflattenedSudokuBoard","current","inRow","inColn","inBlock","addKeyValToObject","getDuplicatesInRow","getDuplicatesInColn","getDuplicatesInBlock","forEach","hasDuplicates","coord","coln","flattenedSudokuBoard","unflattenedSudokuBoard","isRowFilled","lastFilledIndex","newGridInvalid","getEmptyGrid","handleInvalidRow","handleInvalidColn","handleInvalidBlock","setGridInvalid","gridInvalid","resetRowInvalid","setRowInvalid","updateInvalidRowCoordinatesInGrid","column","resetColnInvalid","setColnInvalid","updateInvalidColnCoordinatesInGrid","resetBlockInvalid","setBlockInvalid","updateInvalidBlockCoordinatesInGrid","getEmptyColn","getEmptyRow","resetGridInvalid","getEmptyBlock","sudokuStyle","theme","sudokuRoot","spacing","sudokuInput","justifyContent","sudokuProgress","randBoard","randBold","SudokuGame","coords","useState","gridBold","setGridBold","currentSquare","setCurrentSquare","loading","sudokuState","bold","cur","invalidStateSetters","styles","useStyles","tabIndex","onKeyDown","event","keyPressValidator","backspaces","keyCode","isNumpadPress","includes","preventDefault","numRes","from","boldRes","gridState","updateEmptyState","isArrowKeyPress","newCur","handleKeyPress","validateKeyPress","shaded","blockKey","makeSudokuGrid","CircularProgress","newRand","newRandBold","NurseVariables","num","errorSetters","isEmptyInput","setNumNursesError","numNurses","defaultNumNurses","isNumInNursesRange","setNumDaysError","numDays","defaultNumDays","isNumInDaysRange","setNumNursesPerDayError","nursesPerDay","defaultNursesPerDay","isNumInNursesPerDayRange","input","trim","nursesLowerBound","nursesUpperBound","daysLowerBound","daysUpperBound","nPDLowerBound","nPDUpperBound","nurseSolveRequest","setSchedule","nurseVars","n_nurses","n_days","nurses_per_day","newsched","col","schedule","avatar","NursesOnDayDialog","onClose","selectedValue","nurseIndices","Dialog","aria-labelledby","DialogTitle","List","nurseIndex","ListItem","ListItemAvatar","Avatar","ListItemText","nurseScheduleStyle","badge","geeringupTheme","overrides","MuiPickersCalendarHeader","transitionContainer","MuiPickersStaticWrapper","staticWrapperRoot","MuiPickersToolbar","toolbar","MuiPickersToolbarButton","toolbarBtn","MuiPickersDay","day","daySelected","dayDisabled","NurseSchedule","createMuiTheme","Date","date","changeDate","setOpen","nurses","setNurses","setSelectedValue","scheduleInfo","daysWithNurses","Set","daysToNurses","has","add","getScheduleInfo","utils","DateFnsUtils","ThemeProvider","DatePicker","autoOk","orientation","variant","openTo","onChange","renderDay","selectedDate","isInCurrentMonth","dayComponent","dayIndex","getDate","getIndexFromDay","isNurseScheduledOnDay","onDoubleClick","Badge","dot","overlap","badgeContent","getDayWithBadge","newNurses","handleClickOpen","customInputStyle","borderColor","underline","borderWidth","underlineError","underlineSuccess","whiteUnderline","labelRoot","labelRootError","dangerColor","labelRootSuccess","successColor","formControl","whiteInput","CustomInput","formControlClasses","formControlProps","labelText","labelProps","inputProps","inputRootCustomClasses","formHelperTextProps","helperText","labelClasses","underlineClasses","undefined","inputClasses","FormControl","InputLabel","htmlFor","Input","root","FormHelperText","nurseSchedulingInputStyle","gridContainer","zIndex","paddingBottom","nurseSchedulingInput","pageHeader","alignItems","content","bottom","form","cardHeader","marginBottom","socialIcons","divider","cardFooter","socialLine","inputIconsColor","NurseSchedulingInput","numNursesError","numDaysError","numNursesPerDayError","Grid","item","xs","min","NurseVars","max","e","setNumNurses","target","setNumDays","setNursesPerDay","onSolve","nurseDetailTableStyle","table","borderLeft","rowFilled","lastRowFilled","borderBottom","NurseDetailTable","getDayTableCell","dayNo","TableCell","align","getNurseTableRow","nurseNo","rowCells","TableRow","getNurseRowHeader","nurseTitle","component","scope","getRowClassKey","isNurseScheduled","rowClassKey","getRowMarking","getScheduledDayCell","classKey","marking","getTableRowCells","isScheduled","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","tableCells","getTableHeadCells","TableBody","tableRows","getTableBodyRows","nurseStyle","nurseRoot","nurseInput","nurseProgress","buttonContainer","detailButton","instructions","dialogContent","NurseScheduler","scroll","setScroll","descriptionElementRef","useRef","useEffect","descriptionElement","focus","scrollType","handleClose","nC","nR","document","documentElement","style","setProperty","clsx","aria-describedby","DialogContent","dividers","DialogActions","LatticeVars","lattice","conflicts","bestLattice","quantumLattice","dict","LatticeDict","GraphDict","latticeSolveRequest","setLattice","conns","index","neighbours","n","ii","jj","n_vertices","newLattice","solution","ind","setGraph","fillColours","marbleColours","Hexagon","h","w","isOn","fillC","points","strokeWidth","stroke","strokeOpacity","Hexagons","mode","hexWidth","hexHeight","MarblesAndLines","ci","lineEnds","Fragment","x2","y2","x1","y1","cx","cy","r","HexGrid","maxW","latticeStyle","latticeRoot","latticeInput","latticeProgress","calculateConflicts","getRandomLattice","LatticeColourer","setMode","isQuantum","lattice1","lattice2","latticeSame","setBest","modeText","isBest","instructionText","bestText","qText","setQuantum","IsingStyle","isingRoot","isingInput","isingProgress","IsingModelCurve","leftHeight","rightHeight","time","w2","w4","w7","w8","w24","h2","h34","bly","bry","midH","d","Ket","isSelected","s","s2","s3","s4","s8","s16","p1","p2","p3","strokeLinecap","rx","ry","IsingModel","sliderVal","setSliderVal","stateWeight","setStateWeight","pow","abs","HVal","setHVal","annealTime","setAnnealTime","result","setResult","simulating","setSimulating","interVal","timeSliderVal","leftH","rightH","runSim","timeStep","clearInterval","weight","setAns","log2","doSim","setInterval","Slider","defaultValue","upH","log10","step","newHVal","Keys","CITIES","VANCOUVER","FLOWERS","GraphComponents","Albuquerque","Boston","Detroit","0","1","2","3","4","5","6","7","8","9","10","11","12","Graph","edgeList","getCitiesEdgeList","latLong","getCitiesLatLong","idMapping","getCitiesIdMapping","nameMapping","getCitiesNameMapping","getVanEdgeList","getVanLatLong","getVanIdMapping","getVanNameMapping","getFlowersEdgeList","tspSolveRequest","graphParams","consoleFns","selectedEdges","tspState","TSPstate","getInstance","setSolvingState","getSolvingState","functions","responseRoute","route","output_message","waypoints","TSPutils","getWaypointsSinglePath","graphLines","getLines","fire","firstNode","firstNodeName","currentRoute","solutionString","setIsPathSolved","setIsLoading","tspSetters","setKey","setWaypoints","getCitiesWaypoints","loadCitiesGraph","setCurrentGraph","updatePosForCities","setPosition","getVancouverWaypoints","loadVanCityGraph","updatePosForVancouver","lat","lng","zoom","citiesState","getCitiesDefaultState","updateCitiesState","vancouverState","getVancouverDefaultState","updateVancouverState","getGraphWaypoints","graph","sourceId","destId","sourceName","destName","sourceLatLong","destLatLong","waypointData","waypoint","getWaypointsfromCoords","names","sourceLat","sourceLong","destLat","destLong","L","latLng","nodes","sourceLatLng","destLatLng","currentGraph","getEdgesToSolve","outputSendingToSolveToConsole","graphKey","edgesToSolve","getSelectedEdges","getAllEdges","edge","isEdgeSelected","allEdges","bothNodesInEdgeAreTheSame","isValInSelectedNodes","getSelectedNodeIds","selectedNodes","outputNamesToConsole","selectedNodesArray","outputSelectedNodesToConsole","nodeId","consoleParams","isMarkerDeselect","nodeName","delete","isCitiesMainGraph","isVancouverMainGraph","isCitiesGraph","getFullScreen","isVancouverGraph","pane","getMapState","maxBounds","getCitiesMaxBounds","getVancouverMaxBounds","southWestBound","northEastBound","latLngBounds","icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","popup","getMarker","getRedIcon","getBlueIcon","marker","keyboard","draggable","bindPopup","on","getIsLoading","openPopup","closePopup","closeOnClick","closeButton","setContent","leafletElement","createPane","test","lineWaypoints","startWaypoint","endWaypoint","doesStartWaypointMatch","doesEndWaypointMatch","lineStartWaypoint","lineStartLat","lineStartLong","lineEndWaypoint","lineEndLat","lineEndLong","startLat","startLong","endLat","endLong","isCitiesFirstRoundRoutingCall","isVancouverFirstRoundRoutingCall","isLoading","isCitiesPathSolved","isVancouverPathSolved","solvingState","citiesCallsPending","vancouverCallsPending","citiesMainMapMarkers","vancouverMainMapMarkers","citiesMap","vancouverMap","citiesRoute","vancouverRoute","citiesLineRoute","vancouverLineRoute","citiesLines","vancouverLines","citiesSelectedNodeIds","vancouverSelectedNodeIds","citiesSelectedMarkers","vancouverSelectedMarkers","citiesMainMapMarkerSourceKeys","vancouverMainMapMarkerSourceKeys","fullScreenCitiesMarkerSourceKeys","fullScreenVancouverMarkerSourceKeys","fullScreen","citiesSolvedRouteIndexes","vancouverSolvedRouteIndexes","componentsUpdated","componentsThatNeedUpdating","isFirstRoundRoutingCall","this","getIsCitiesFirstRoundRoutingCall","getIsVancouverFirstRoundRoutingCall","isPathSolved","getIsCitiesPathSolved","getIsVancouverPathSolved","callsPending","getCitiesCallsPending","getVancouverCallsPending","mainMapMarkers","getCitiesMainMapMarkers","getVancouverMainMapMarkers","mapState","getCitiesState","getVancouverState","getCitiesRoute","getVancouverRoute","lineRoute","getCitiesLineRoute","getVancouverLineRoute","lines","getCitiesLines","getVancouverLines","getCitiesSelectedNodeIds","getVancouverSelectedNodeIds","selectedMarkers","getCitiesSelectedMarkers","getVancouverSelectedMarkers","getFullScreenMarkerSourceKeys","getMainMapMarkerSourceKeys","markerSourceKeys","getCitiesMainMapMarkerSourceKeys","getVancouverMainMapMarkerSourceKeys","fullScreenMarkerSourceKeys","getFullScreenCitiesMarkerSourceKeys","getFullScreenVancouverMarkerSourceKeys","solvedRouteIndexes","getCitiesSolvedRouteIndexes","getVancouverSolvedRouteIndexes","firstRoute","getCitiesFirstRoute","getVancouverFirstRoute","firstKey","setIsCitiesFirstRoundRoutingCall","setIsVancouverFirstRoundRoutingCall","setIsCitiesPathSolved","setIsVancouverPathSolved","setCitiesCallsPending","setVancouverCallsPending","setCitiesMap","setVancouverMap","setCitiesSelectedNodeIds","setVancouverSelectedNodeIds","setCitiesSelectedMarkers","setVancouverSelectedMarkers","setFullScreenCitiesMarkerSourceKeys","setFullScreenVancouverMarkerSourceKeys","setCitiesSolvedRouteIndexes","setVancouverSolvedRouteIndexes","lineInfo","tspSolvedEventListenerInfo","oldLine","routes","removeLayer","newLine","Routing","line","getLineRoute","getRoutingLineStyles","getGeeringupPrimaryColor","addEventListener","waypointsInSolution","onTSPsolved","addTo","isNonNegNumber","doStartAndEndWaypointsMatch","getSolvedRouteIndexes","getGeeringupSecondaryColor","onReset","setSelectedNodeIds","setSelectedMarkers","setSolvedRouteIndexes","instance","PersistentGraph","isLoaded","router","requestDictionary","requests","handled","handleRoutes","myCallback","waypointSource","waypointDest","res","getRoute","osrmv1","err","simplifyRoute","requestRoute","rt","name","summary","coordinates","LatLng","inputWaypoints","options","lastLat","lastLng","resetFullScreenMarkerSourceKeys","checkToLoadNewGraph","setFullScreenMarkerSourceKeys","Key","graphTabIsBeingSwitched","switchToNewGraph","resetSwitchingGraphsProp","createLeafletElement","setSwitchingGraphs","isGraphSwitch","switchingGraphs","setFullScreen","isFirstRoundRoutingCallForMainGraph","fetchPath","getFirstRoute","getIsFirstRoundRoutingCall","initPanes","loadGraph","setCallsPending","getPopup","waypointKey","sourceKey","routingPlanOptions","getRoutingPlanOptionsOptions","routingPlan","plan","isMainGraph","isLineRoutePresent","hasOwnProperty","getCallsPending","lineRoutes","getLineStyles","setIsFirstRoundRoutingCall","blueLineStyles","callbackParams","lineParams","getRoutingCallback","getPane","initBluePane","initRedPane","initMarkerPane","initPopupPane","createBluePane","createRedPane","createMarkerPane","createPopupPane","addWaypoints","draggableWaypoints","fitSelectedRoutes","createMarker","wp","markerParams","routingMachineParams","isInvalidCreateMarkerCall","getAppropriateColoredMarker","onMarkerClick","setIcon","getMainMapMarkers","sourceKeyIsForCurrentGraph","markerAlreadyCreated","updateMarkerSourceKeys","getSelectedMarkers","getRedMarker","getBlueMarker","markerLatLon","getMarkerSourceKeys","setNumSelectedNodes","checkToHandleInvalidClick","getAppropriateColoredIcon","updateSelectedMarkers","updateCorrespondingMarkerOnMainMap","handledInvalidClick","getIsMainMapLoading","handleMainMapLoading","getIsPathSolved","handlePathAlreadySolved","message","MapLayer","withLeaflet","travellingSalespersonStyle","buttonGroup","flexDirection","mapContainer","loadingContainer","mapProgress","hidingContainer","expandedMap","tspInput","overflowY","MapComponent","setMap","getMapHandlersToToggle","leafletElem","mapHandlersToToggle","boxZoom","dragging","scrollWheelZoom","zoomControl","touchZoom","tap","invalidateSize","handler","disable","enable","getZoom","getMaxBounds","Map","center","minZoom","doubleClickZoom","TileLayer","attribution","url","TravellingSalesperson","numSelectedCitiesNodes","setNumSelectedCitiesNodes","numSelectedVancouverNodes","setNumSelectedVancouverNodes","loadingContainerClasses","prevKey","usePrevious","prevWaypoints","setComponentsUpdated","getComponentsUpdated","allComponentsAreUpdated","onAllComponentsUpdated","openDescriptionElement","getComponentsThatNeedUpdating","getNumSelectedNodes","href","ButtonGroup","onCitiesButtonClick","onVanButtonClick","isFlowersGraph","toUpperCase","updateMainMapMarkers","resetGraphLines","resetGraphStates","handleClickSolve","Widget","toHash","hash","charCodeAt","hashString","newChar","fromCharCode","Promise","resolve","Component","NurseBriefDescriptionText","Typography","paragraph","NurseReadMoreDescriptionText","Link","SudokuBriefDescriptionText","SudokuReadMoreDescriptionText","LatticeBriefDescriptionText","LatticeReadMoreDescriptionText","TSPbriefDescriptionText","TSPreadMoreDescriptionText","src","math","widgetList","nurse","enabler","briefDescriptionText","readMoreDescriptionText","brand","visible","sudoku","ising","tsp","TSP","default","buttonGroupStyle","menuItem","GameMenu","setWidget","Box","widget","consoleStyle","consoleButton","consoleTitle","flexGrow","Console","divBotRef","scrollRef","IP","setIP","getIP","ip","textLines","scrollTop","scrollHeight","Toolbar","IconButton","cardStyle","card","wordWrap","cardPlain","cardCarousel","overflow","Card","plain","carousel","cardClasses","cardBodyStyle","cardBody","flex","CardBody","cardBodyClasses","descriptionCardStyle","descriptionCard","DescriptionCard","widgetInfo","justify","DialogContentText","headerStyle","appBar","flexFlow","absolute","fixed","flexWrap","appResponsive","dark","drawerPaper","transitionProperty","transitionDuration","transitionTimingFunction","right","visibility","leftLinks","rightLinks","menu","lPad","Header","mobileOpen","setMobileOpen","appMenuAnchor","setAppMenuAnchor","changeColorOnScroll","window","headerColorChange","removeEventListener","handleDrawerToggle","handleAppMenuClose","pageYOffset","body","getElementsByTagName","classList","remove","appBarClasses","brandComponent","currentTarget","Menu","anchorEl","Boolean","keepMounted","MenuItem","leftLinksComponent","Hidden","smDown","implementation","AppBar","mdUp","Drawer","anchor","paper","defaultProp","tooltipsStyle","tooltip","fontStyle","textShadow","wordBreak","wordSpacing","lineBreak","headerLinksStyle","list","listStyle","listItem","float","breakpoints","down","listItemText","navLink","leftNavLink","notificationNavLink","registerNavLink","navLinkActive","icons","dropdownLink","marginRight5","RightHeaderLinks","Tooltip","placement","innerWidth","LeftHeaderLinks","dtqcLogo","GridContainer","defaultProps","footerStyle","footer","footerWhiteFont","inlineBlock","Footer","whiteFont","footerClasses","footerLinksStyle","FooterLinks","UBC","alt","supercluster","geeringupLogo","dwaveLogo","microsoftLogo","appStyle","subtitle","main","mainRaised","rightColumn","up","nurseSwitchButton","sudokuSwitchButton","latticeSwitchButton","App","widgetOverride","overrideWidget","setTextLines","wid","history","replaceState","app","appBrand","word","gridContainerChildren","WidC","live","location","hostname","match","GenericApp","pathname","startsWith","substr","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8f53c725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DTQC_Logo0.f5c48d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubc-logo-2018-crest-blue-rgb72.d24d1512.svg\";","module.exports = __webpack_public_path__ + \"static/media/DTS_Dark_00.8112b2ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/GU_Icon_Blue.d16934a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/msft.5f1735b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/dwave.2deb2253.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedMarker.222ff890.png\";","module.exports = __webpack_public_path__ + \"static/media/BlueMarker.a8c6e5ae.png\";","module.exports = __webpack_public_path__ + \"static/media/anneal_schedule.87593a55.png\";","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport XMLHttpRequest from 'xhr2'\n\n/**\n * XHRCallbackFunction\n * @function XHRCallbackFunction\n * @param {XMLHTTPRequest} xhr - It will be passed the entire request that\n * it is supposed to be able to handle. This is to offer maximum flexibility\n * of the LongRequest interface.\n */\n\n/**\n * This fields requests for long processes. It automatically handles the\n * resending of requests until the process is done, and calls the hooks\n * provided by the caller when needed. It is a fancy and useful interface\n * for interacting with the background processing Redis server.\n * @param {JSON} params - This is the params JSON object to be sent to the\n * server describin the process request. PLEASE DO NOT stringify this before\n * passing it or it WILL get restringified, and that causes server-side errors.\n * @param {XHRCallbackFunction} onQueue - Callback for initial queue placement.\n * Returns jobID.\n * @param {XHRCallbackFunction} onUpdate - Callback for any updates.\n * xhr.meta should be a dictionary that contains any meta information usable for\n * the update.\n * @param {XHRCallbackFunction} onComplete - Callback for when the worker returns\n * successful results.\n * @param {XHRCallbackFunction} onFail - Callback for when the worker or a request fails.\n * @param {Function} outputFunc - Anything that can accept a string. This is meant\n * to output errors as well as standard messages.\n */\nfunction makeLongRequest (params, onQueue, onUpdate, onComplete, onFail, outputFunc) {\n  var xhr = new XMLHttpRequest()\n  const url = '/make_worker'\n  const async = true\n  xhr.open('POST', url, async)\n  xhr.responseType = 'json'\n\n  xhr.onload = () => {\n    onLoad(xhr, onQueue, onUpdate, onComplete, onFail, outputFunc)\n  }\n  xhr.setRequestHeader('Content-type', 'application/json')\n  xhr.send(JSON.stringify(params))\n}\n\n/**\n * This asks the server for an update on the job as stored in job. The function\n * callbacks are necessary because this loops back into onLoad.\n * @param {XHRCallbackFunction} onQueue - Callback for initial queue placement.\n * Returns jobID.\n * @param {XHRCallbackFunction} onUpdate - Callback for any updates.\n * xhr.meta should be a dictionary that contains any meta information usable for\n * the update.\n * @param {XHRCallbackFunction} onComplete - Callback for when the worker returns\n * successful results.\n * @param {XHRCallbackFunction} onFail - Callback for when the worker or a request fails.\n * @param {Function} outputFunc - Anything that can accept a string. This is meant\n * to output errors as well as standard messages.\n * @param {String} job - The job ID, to be given to the server to complete the request\n * for an update.\n */\nfunction updateRequest (onQueue, onUpdate, onComplete, onFail, outputFunc, job) {\n  var xhr = new XMLHttpRequest()\n  const url = '/check_worker'\n  const params = {\n    jobID: job\n  }\n  const async = true\n  xhr.open('POST', url, async)\n\n  xhr.responseType = 'json'\n\n  xhr.onload = () => {\n    onLoad(xhr, onQueue, onUpdate, onComplete, onFail, outputFunc)\n  }\n  xhr.setRequestHeader('Content-type', 'application/json')\n  console.log(params)\n  xhr.send(JSON.stringify(params))\n}\n\n/**\n * This handles any responses from the server relating to one of either makeLongRequest\n * or updateRequest's calls.\n *\n * - If the jobStatus of the response is 'finished', onComplete is called.\n *\n * - If jobStatus is 'queued' or 'started', onUpdate is called, and another\n * updateRequest is scheduled.\n *\n * - If jobStatus is 'enqueued', onQueue is called and an updateRequest is scheduled.\n *\n * - If jobStatus is anything else, a failure somewhere along the line is suspected,\n * and error messages are outputted. onFail is also called, in case the caller needs\n * to know to reset and try again.\n *\n * - If the XML request status is not 200, a failure is detected, and onFail is called.\n *\n * @param {XMLHTTPRequest} xhr - The latest XML Http Request as stored in an Object.\n * Used to retrieve all the information about the loaded request.\n * @param {XHRCallbackFunction} onQueue - Callback for initial queue placement.\n * Returns jobID.\n * @param {XHRCallbackFunction} onUpdate - Callback for any updates.\n * xhr.meta should be a dictionary that contains any meta information usable for\n * the update.\n * @param {XHRCallbackFunction} onComplete - Callback for when the worker returns\n * successful results.\n * @param {XHRCallbackFunction} onFail - Callback for when the worker or a request fails.\n * @param {Function} outputFunc - Anything that can accept a string. This is meant\n * to output errors as well as standard messages.\n * @param {String} job - The job ID, to be given to the server to complete the request\n * for an update.\n */\nfunction onLoad (xhr, onQueue, onUpdate, onComplete, onFail, outputFunc, job = null) {\n  if (xhr.status === 200) {\n    // queued, started, deferred, finished, and failed\n    if (xhr.response.jobStatus === 'finished') {\n      onComplete(xhr)\n    } else if (xhr.response.jobStatus === 'queued' || xhr.response.jobStatus === 'started') {\n      // Job is queued or running\n      if (job && job !== xhr.response.jobID) {\n        outputFunc('Error, job ID of update didn\\'t match with existing one.')\n        onFail(xhr)\n        return\n      }\n      const newjob = xhr.response.jobID\n      setTimeout(() => {\n        updateRequest(onQueue, onUpdate, onComplete, onFail, outputFunc, newjob)\n      }, 1000)\n      onUpdate(xhr)\n    } else if (xhr.response.jobStatus === 'enqueued') {\n      // Job just got queued\n      const newjob = xhr.response.jobID\n      setTimeout(() => {\n        updateRequest(onQueue, onUpdate, onComplete, onFail, outputFunc, newjob)\n      }, 1000)\n      onQueue(xhr)\n    } else {\n      outputFunc('Job failed')\n      onFail(xhr)\n    }\n  } else if (xhr.status === 400) {\n    // outputFunc(xhr.response.error)\n    onFail(xhr)\n  } else {\n    outputFunc(xhr.status + ' ' + xhr.statusText)\n    outputFunc('Your request may have timed out.')\n    outputFunc('Please save any logs and report them.')\n    onFail(xhr)\n  }\n}\n\nexport default makeLongRequest\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n/**\n * Static SudokuVariables class\n * Reason for this is to provide static variables that don't\n * refresh React.\n * It has two static variables, xhr and state, and the ability\n * to set each.\n */\nclass SudokuVariables {\n  /**\n   * Stores the latest XML Http Request. THis is unused as of now,\n   * due to LongRequest\n   */\n  static xhr = null\n\n  /**\n   * Stores the latest state of the sudoku\n   * solve request. Used in the LongRequest callbacks\n   * of sudokuSolveRequest\n   */\n  static state = ''\n\n  /**\n   * sets xhr\n   */\n  static setXHR (newXHR) {\n    SudokuVariables.xhr = newXHR\n  }\n\n  /**\n   * Sets state\n   */\n  static setState (newState) {\n    SudokuVariables.state = newState\n  }\n}\n\nexport default SudokuVariables\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nfunction isNumberPress (keyCode) {\n  return (keyCode >= 48 && keyCode <= 57)\n}\n\nfunction isNumpadPress (keyCode) {\n  return (keyCode >= 96 && keyCode <= 105)\n}\n\nfunction isArrowKeyPress (keyCode) {\n  return (keyCode >= 37 && keyCode <= 40)\n}\n\nfunction updateEmptyState (state) {\n  const gridState = isGridAllZeros(state.grid)\n  state.setEmpty(gridState)\n}\n\nfunction isGridAllZeros (grid) {\n  return grid.every(gridItem => gridItem === 0)\n}\n\nfunction flatten (coords) {\n  return coords[0] + 9 * coords[1]\n}\n\nfunction emptySudokuGrid (state) {\n  if (!state.empty) {\n    resetSudokuGrid(state.setGrid, state.setBold)\n    state.setCur([0, 0])\n    state.setEmpty(true)\n  }\n}\n\n/**\n * Fills the Sudoku grid with 0s\n * Sets the grid state using setSudokuGrid\n * @param {Function} setSudokuGrid - Sets an external Sudoku Grid variable\n * @param {Function} setBold - Sets a grid variable indicating boldness of square\n*/\nfunction resetSudokuGrid (setSudokuGrid, setBold) {\n  const newGrid = Array(81).fill(0)\n  setSudokuGrid(newGrid)\n  const newBold = Array(81).fill(false)\n  setBold(newBold)\n}\n\nfunction boldify (grid) {\n  var newBold = Array(81)\n  for (var i = 0; i < 81; ++i) {\n    if (grid[i] !== 0) newBold[i] = true\n    else newBold[i] = false\n  }\n  // console.log(newBold)\n  return newBold\n}\n\nexport {\n  isNumberPress,\n  isNumpadPress,\n  isArrowKeyPress,\n  updateEmptyState,\n  isGridAllZeros,\n  flatten,\n  emptySudokuGrid,\n  resetSudokuGrid,\n  boldify\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n// import XMLHttpRequest from 'xhr2'\nimport makeLongRequest from '../LongRequest'\nimport sudokuVars from './SudokuVariables'\nimport {\n  isGridAllZeros\n} from './sudokuHelpers'\n\n/**\n * This function does the XML HTTP request for the Sudoku Widget. It calls the\n * backend, and once the data is returned, postSolve is called. This handles\n * request creation, console logging, and some state validation.\n * @param {Array(81)} sudokuGrid - This is the current Sudoku GameState grid\n * @param {Function} setSudokuGrid - Hook to update Sudoku Grid\n * @param {Function} setEnabled - Hook to update Enabled status of the whole widget\n * @param {Function} outputToConsole - Hook to add a line of text to the Console (output)\n * @param {Function} appendToConsole - Append to Console\n * @param {Function} getAPIKey - Returns the user's current API Key. If empty, assume\n * a simulation is wanted.\n * @param {Function} setEmpty - Hook to update the Sudoku Grid's empty state\n * @param {Function} gridValidator - Function to validate the Sudoku Grid's state\n * @param {Function} setLoading - Hook to update the Sudoku Grid's loading state\n */\nfunction sudokuSolveRequest (sudokuGrid, setSudokuGrid, setEnabled, outputToConsole, appendToConsole, getAPIKey, setEmpty, gridValidator, setLoading) {\n  if (sudokuVars.xhr) return\n  var sudokuArray = []\n  for (var y = 0; y < 9; y++) {\n    sudokuArray.push([])\n    for (var x = 0; x < 9; x++) {\n      sudokuArray[y].push(sudokuGrid[x + y * 9])\n    }\n  }\n  setEnabled(false)\n  setLoading(true)\n  outputToConsole('Sending in this grid:')\n  sudokuArray.map((row) => outputToConsole(row.join(' ')))\n\n  // Set the parameters to send to the server\n  const params = {\n    // token: getAPIKey(),\n    typeOfProblem: 'sudokuSolving',\n    sudokuArray: sudokuArray\n  }\n\n  // Make the request for a solve to be queued up\n  // makeLongRequest is a powerful function, please\n  // use it wisely\n  makeLongRequest(\n    params,\n    (xhr) => {\n      outputToConsole('The sudoku has been queued for solving!')\n      sudokuVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      if (xhr.response.jobStatus === sudokuVars.state) {\n        appendToConsole('.')\n      } else if (xhr.response.jobStatus === 'queued') {\n        outputToConsole('In Queue')\n      } else if (xhr.response.jobStatus === 'started') {\n        outputToConsole('Quantum Computing in Progress!')\n        outputToConsole('Solving')\n      } else {\n        outputToConsole(xhr.response.jobStatus)\n      }\n      sudokuVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      postSolve(xhr, setSudokuGrid, setEnabled, outputToConsole, setEmpty, setLoading, gridValidator)\n    },\n    (xhr) => {\n      outputToConsole('Something went wrong')\n      console.log(xhr)\n      outputToConsole(JSON.stringify(xhr))\n      setEnabled(true)\n      setLoading(false)\n    },\n    outputToConsole\n  )\n}\n\n/**\n * postSolve is called after the call to the server is completed.\n * It will handle any (most) errors, set the grid to a solved state if solved,\n * and report back to the user through the console.\n *\n * @param {Function} setSudokuGrid - Hook to update the Sudoku Grid.\n * @param {Function} setEnabled - Hook to update enabled status of widget.\n * @param {Function} outputToConsole - Output a line of text to the console.\n * @param {Function} setEmpty - Hook to update the Sudoku Grid's empty state\n * @param {Function} setLoading - Hook to update the Sudoku Grid's loading state\n * @param {Function} gridValidator - Function to validate the Sudoku Grid's state\n */\nfunction postSolve (xhr, setSudokuGrid, setEnabled, outputToConsole, setEmpty, setLoading, gridValidator) {\n  // const xhr = sudokuVars.xhr\n\n  setEnabled(true)\n  setLoading(false)\n\n  if (xhr.status === 200) {\n    outputToConsole('Solved! This is the qpu\\'s answer:')\n    const solvedBoard = xhr.response.solved_board\n    if (solvedBoard) {\n      solvedBoard.map((row) => outputToConsole(row.join(' ')))\n      // const flattenedBoard = solvedBoard.flat()\n      // Sad, have to get rid of flat() for old Edge support.\n      // Many people haven't updated Edge to Jan 2020 version yet\n      const flattenedBoard = [].concat(...solvedBoard)\n\n      setSudokuGrid(flattenedBoard)\n      setEmpty(isGridAllZeros(flattenedBoard))\n      gridValidator(flattenedBoard)\n    } else {\n      outputToConsole(JSON.stringify(xhr.response))\n    }\n    if (xhr.response.solution_message === 'The solution is correct') {\n      outputToConsole('The sudoku was solved correctly!')\n    } else {\n      outputToConsole('Unfortunately, the QPU did not find an optimal solution')\n    }\n    // outputToConsole(xhr.response.timing.stringify())\n  } else if (xhr.status === 400) {\n    outputToConsole(xhr.response.error)\n  } else {\n    outputToConsole(xhr.status, xhr.statusText)\n    outputToConsole('Your Sudoku may have been too difficult and timed out.')\n    outputToConsole('Please save the Sudoku you were trying to solve and report the problem')\n  }\n  sudokuVars.setXHR(null)\n}\n\nexport default sudokuSolveRequest\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n/**\n * This checks if a grid is solvable\n * @param {Array(Array(Int))} grid - This is the grid to try to solve, 0 means empty space\n * @param {Int} n - The number of different ways we're trying to solve the grid\n */\nfunction checkSolvable (grid, gridmask, Num, i, j, rand) {\n  i += 1\n  if (i === 9) {\n    j += 1\n    i = 0\n    if (j === 9) {\n      Num[0] -= 1\n      // console.log(grid)\n      return Num[0] === 0\n    }\n  }\n  if (grid[i][j] !== 0) {\n    return checkSolvable(grid, gridmask, Num, i, j, rand)\n  }\n\n  const block = 3 * Math.floor(i / 3) + Math.floor(j / 3)\n\n  const masks = [\n    gridmask[block],\n    gridmask[i + 9],\n    gridmask[j + 18]\n  ]\n\n  var vals = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n  if (rand) {\n    shuffle(vals)\n  }\n\n  for (var val of vals) {\n    const valM = (1 << val)\n    if ((valM & masks[0]) && (valM & masks[1]) && (valM & masks[2])) {\n      gridmask[block] = ~valM & masks[0]\n      gridmask[i + 9] = ~valM & masks[1]\n      gridmask[j + 18] = ~valM & masks[2]\n      if (rand) grid[i][j] = val\n      if (checkSolvable(grid, gridmask, Num, i, j, rand)) {\n        return true\n      }\n    }\n  }\n  gridmask[block] = masks[0]\n  gridmask[i + 9] = masks[1]\n  gridmask[j + 18] = masks[2]\n  if (rand) grid[i][j] = 0\n  return false\n}\n\n/**\n * Someone on stackoverflow once asked why anyone would be using bitmasks\n * in JS. I don't know. I actually don't know why I am doing this\n * This makes a gridmask, where each bit corresponds to the availability\n * of that number.\n *\n * entries 0-8 are the 3x3 blocks\n * 9 - 17 are the rows\n * 18 - 26 are the columns\n *\n * In each mask, you can check if a number is available using:\n * avail = gridmask[i] & (1 << num)\n * @param {Array(Array(Int))} grid - Grid type\n */\nfunction makeGridMask (grid) {\n  var gridmask = []\n  for (var i = 0; i < 9; ++i) {\n    gridmask[i] = 1022\n    gridmask[i + 9] = 1022\n    gridmask[i + 18] = 1022\n  }\n  for (i = 0; i < 9; ++i) {\n    for (var j = 0; j < 9; ++j) {\n      if (!grid[i][j]) continue\n      const mask = ~(1 << grid[i][j])\n      gridmask[i + 9] &= mask // Rowmask\n      gridmask[j + 18] &= mask // Colmask\n      gridmask[3 * Math.floor(i / 3) + Math.floor(j / 3)] &= mask // Blockmask\n    }\n  }\n  return gridmask\n}\n\nfunction makeFullGrid () {\n  var grid = []\n  for (var i = 0; i < 9; ++i) {\n    grid[i] = []\n    for (var j = 0; j < 9; ++j) {\n      grid[i][j] = 0\n    }\n  }\n  var Num = [1]\n  if (checkSolvable(grid, makeGridMask(grid), Num, -1, 0, true)) {\n    return grid\n  }\n  // console.log(grid)\n  return false\n}\n\nfunction getRandSolvableBoard () {\n  var grid = makeFullGrid()\n  // return flatGrid(grid)\n  var Num = [2]\n  // var tries = 100\n  // var tried = new Set()\n  var toTry = []\n  for (var i = 0; i < 9; ++i) {\n    for (var j = 0; j <= i; ++j) {\n      toTry.push([i, j])\n    }\n  }\n\n  shuffle(toTry)\n\n  var fails = 3\n\n  for (const [x, y] of toTry) {\n    // const x = box[0]\n    // const y = box[1]\n\n    const oldvals = [grid[x][y], grid[8 - x][8 - y]]\n    grid[x][y] = grid[8 - x][8 - y] = 0\n\n    Num[0] = 2\n    if (checkSolvable(grid, makeGridMask(grid), Num, -1, 0, false)) {\n      grid[x][y] = oldvals[0]\n      grid[8 - x][8 - y] = oldvals[1]\n      if (fails-- === 0) break\n    }\n  }\n  // console.log(fails)\n  // console.log('made new sudoku:')\n  // console.log(grid)\n  // console.log((flatGrid(grid).map((e) => { return (e === 0 ? ' ' : e) })).join(''))\n  return flatGrid(grid)\n}\n\nfunction flatGrid (grid) {\n  var newgrid = []\n  for (var i = 0; i < 81; ++i) {\n    newgrid[i] = grid[i % 9][Math.floor(i / 9)]\n  }\n  return newgrid\n}\n\nfunction shuffle (arr) {\n  for (var a = arr.length - 1; a > 0; a--) {\n    const b = Math.floor(Math.random() * arr.length);\n    [arr[a], arr[b]] = [arr[b], arr[a]]\n  }\n}\n\nexport default getRandSolvableBoard\n","\n/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260\n\nconst transition = {\n  transition: 'all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)'\n}\n\nconst conatinerFluid = {\n  paddingRight: '15px',\n  paddingLeft: '15px',\n  marginRight: 'auto',\n  marginLeft: 'auto',\n  width: '100%'\n}\nconst container = {\n  ...conatinerFluid,\n  '@media (min-width: 576px)': {\n    maxWidth: '540px'\n  },\n  '@media (min-width: 768px)': {\n    maxWidth: '720px'\n  },\n  '@media (min-width: 992px)': {\n    maxWidth: '960px'\n  },\n  '@media (min-width: 1200px)': {\n    maxWidth: '1300px'\n  }\n}\n\nconst boxShadow = {\n  boxShadow:\n    '0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)'\n}\n\nconst card = {\n  display: 'inline-block',\n  position: 'relative',\n  width: '100%',\n  margin: '25px 0',\n  boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.14)',\n  borderRadius: '3px',\n  color: 'rgba(0, 0, 0, 0.87)',\n  background: '#fff'\n}\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: '300',\n  lineHeight: '1.5em'\n}\n\nconst primaryColor = '#9c27b0'\nconst warningColor = '#ff9800'\nconst dangerColor = '#f44336'\nconst successColor = '#4caf50'\nconst infoColor = '#00acc1'\nconst roseColor = '#e91e63'\nconst grayColor = '#999999'\nconst geeringupColor = '#d96262'\n\nconst primaryBoxShadow = {\n  boxShadow:\n    '0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)'\n}\nconst infoBoxShadow = {\n  boxShadow:\n    '0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)'\n}\nconst successBoxShadow = {\n  boxShadow:\n    '0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)'\n}\nconst warningBoxShadow = {\n  boxShadow:\n    '0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)'\n}\nconst dangerBoxShadow = {\n  boxShadow:\n    '0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)'\n}\nconst roseBoxShadow = {\n  boxShadow:\n    '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)'\n}\n\nconst geeringupBoxShadow = {\n  boxShadow:\n  '0 12px 20px -10px rgba(217, 98, 98, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(217, 98, 98, 0.2)'\n}\n\nconst warningCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #ffa726, #fb8c00)',\n  ...warningBoxShadow\n}\nconst successCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #66bb6a, #43a047)',\n  ...successBoxShadow\n}\nconst dangerCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #ef5350, #e53935)',\n  ...dangerBoxShadow\n}\nconst infoCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #26c6da, #00acc1)',\n  ...infoBoxShadow\n}\nconst primaryCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #ab47bc, #8e24aa)',\n  ...primaryBoxShadow\n}\nconst roseCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #ec407a, #d81b60)',\n  ...roseBoxShadow\n}\nconst geeringupCardHeader = {\n  color: '#fff',\n  background: 'linear-gradient(60deg, #de7777, #d44d4d)', // 'linear-gradient(60deg, #dc8479, #c85f5f)',\n  ...geeringupBoxShadow\n}\nconst cardActions = {\n  margin: '0 20px 10px',\n  paddingTop: '10px',\n  borderTop: '1px solid #eeeeee',\n  height: 'auto',\n  ...defaultFont\n}\n\nconst cardHeader = {\n  margin: '-30px 15px 0',\n  borderRadius: '3px',\n  padding: '15px'\n}\n\nconst defaultBoxShadow = {\n  border: '0',\n  borderRadius: '3px',\n  boxShadow:\n    '0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)',\n  padding: '10px 0',\n  transition: 'all 150ms ease 0s'\n}\n\nconst title = {\n  color: '#C3872B',\n  margin: '1.75rem 0 0.875rem',\n  textDecoration: 'none',\n  fontWeight: '700',\n  fontFamily: '\"Roboto Slab\", \"Times New Roman\", serif'\n}\n\nconst cardTitle = {\n  ...title,\n  marginTop: '.625rem'\n}\n\nconst cardLink = {\n  '& + $cardLink': {\n    marginLeft: '1.25rem'\n  }\n}\n\nconst cardSubtitle = {\n  marginBottom: '0',\n  marginTop: '-.375rem'\n}\n\nexport {\n  // variables\n  drawerWidth,\n  transition,\n  container,\n  conatinerFluid,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  geeringupColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  geeringupBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  geeringupCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardLink,\n  cardSubtitle\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport {\n  grayColor,\n  roseColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor\n} from '../../material-kit-react.js'\n\nconst buttonStyle = {\n  button: {\n    minHeight: 'auto',\n    minWidth: 'auto',\n    backgroundColor: grayColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 2px 2px 0 rgba(153, 153, 153, 0.14), 0 3px 1px -2px rgba(153, 153, 153, 0.2), 0 1px 5px 0 rgba(153, 153, 153, 0.12)',\n    border: 'none',\n    borderRadius: '3px',\n    position: 'relative',\n    padding: '12px 30px',\n    margin: '.3125rem 1px',\n    fontSize: '12px',\n    fontWeight: '400',\n    textTransform: 'uppercase',\n    letterSpacing: '0',\n    willChange: 'box-shadow, transform',\n    transition:\n      'box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n    lineHeight: '1.42857143',\n    textAlign: 'center',\n    whiteSpace: 'nowrap',\n    verticalAlign: 'middle',\n    touchAction: 'manipulation',\n    cursor: 'pointer',\n    '&:hover,&:focus': {\n      color: '#FFFFFF',\n      backgroundColor: grayColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(153, 153, 153, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(153, 153, 153, 0.2)'\n    },\n    '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n      position: 'relative',\n      display: 'inline-block',\n      top: '0',\n      fontSize: '1.1rem',\n      marginRight: '4px',\n      verticalAlign: 'middle'\n    },\n    '& svg': {\n      position: 'relative',\n      display: 'inline-block',\n      top: '0',\n      width: '18px',\n      height: '18px',\n      marginRight: '4px',\n      verticalAlign: 'middle'\n    },\n    '&$justIcon': {\n      '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n        marginRight: '0px',\n        position: 'absolute',\n        width: '100%',\n        transform: 'none',\n        left: '0px',\n        top: '0px',\n        height: '100%',\n        lineHeight: '41px',\n        fontSize: '20px'\n      }\n    }\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  primary: {\n    backgroundColor: primaryColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(156, 39, 176, 0.14), 0 3px 1px -2px rgba(156, 39, 176, 0.2), 0 1px 5px 0 rgba(156, 39, 176, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: primaryColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(156, 39, 176, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(156, 39, 176, 0.2)'\n    }\n  },\n  info: {\n    backgroundColor: infoColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(0, 188, 212, 0.14), 0 3px 1px -2px rgba(0, 188, 212, 0.2), 0 1px 5px 0 rgba(0, 188, 212, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: infoColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(0, 188, 212, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 188, 212, 0.2)'\n    }\n  },\n  success: {\n    backgroundColor: successColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(76, 175, 80, 0.14), 0 3px 1px -2px rgba(76, 175, 80, 0.2), 0 1px 5px 0 rgba(76, 175, 80, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: successColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(76, 175, 80, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(76, 175, 80, 0.2)'\n    }\n  },\n  warning: {\n    backgroundColor: warningColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(255, 152, 0, 0.14), 0 3px 1px -2px rgba(255, 152, 0, 0.2), 0 1px 5px 0 rgba(255, 152, 0, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: warningColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(255, 152, 0, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(255, 152, 0, 0.2)'\n    }\n  },\n  danger: {\n    backgroundColor: dangerColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(244, 67, 54, 0.14), 0 3px 1px -2px rgba(244, 67, 54, 0.2), 0 1px 5px 0 rgba(244, 67, 54, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: dangerColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(244, 67, 54, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(244, 67, 54, 0.2)'\n    }\n  },\n  rose: {\n    backgroundColor: roseColor,\n    boxShadow:\n      '0 2px 2px 0 rgba(233, 30, 99, 0.14), 0 3px 1px -2px rgba(233, 30, 99, 0.2), 0 1px 5px 0 rgba(233, 30, 99, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: roseColor,\n      boxShadow:\n        '0 14px 26px -12px rgba(233, 30, 99, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(233, 30, 99, 0.2)'\n    }\n  },\n  white: {\n    '&,&:focus,&:hover,&:visited': {\n      backgroundColor: '#FFFFFF',\n      color: grayColor\n    }\n  },\n  twitter: {\n    backgroundColor: '#55acee',\n    color: '#fff',\n    boxShadow:\n      '0 2px 2px 0 rgba(85, 172, 238, 0.14), 0 3px 1px -2px rgba(85, 172, 238, 0.2), 0 1px 5px 0 rgba(85, 172, 238, 0.12)',\n    '&:hover,&:focus,&:visited': {\n      backgroundColor: '#55acee',\n      color: '#fff',\n      boxShadow:\n        '0 14px 26px -12px rgba(85, 172, 238, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(85, 172, 238, 0.2)'\n    }\n  },\n  facebook: {\n    backgroundColor: '#3b5998',\n    color: '#fff',\n    boxShadow:\n      '0 2px 2px 0 rgba(59, 89, 152, 0.14), 0 3px 1px -2px rgba(59, 89, 152, 0.2), 0 1px 5px 0 rgba(59, 89, 152, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: '#3b5998',\n      color: '#fff',\n      boxShadow:\n        '0 14px 26px -12px rgba(59, 89, 152, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(59, 89, 152, 0.2)'\n    }\n  },\n  google: {\n    backgroundColor: '#dd4b39',\n    color: '#fff',\n    boxShadow:\n      '0 2px 2px 0 rgba(221, 75, 57, 0.14), 0 3px 1px -2px rgba(221, 75, 57, 0.2), 0 1px 5px 0 rgba(221, 75, 57, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: '#dd4b39',\n      color: '#fff',\n      boxShadow:\n        '0 14px 26px -12px rgba(221, 75, 57, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(221, 75, 57, 0.2)'\n    }\n  },\n  github: {\n    backgroundColor: '#333333',\n    color: '#fff',\n    boxShadow:\n      '0 2px 2px 0 rgba(51, 51, 51, 0.14), 0 3px 1px -2px rgba(51, 51, 51, 0.2), 0 1px 5px 0 rgba(51, 51, 51, 0.12)',\n    '&:hover,&:focus': {\n      backgroundColor: '#333333',\n      color: '#fff',\n      boxShadow:\n        '0 14px 26px -12px rgba(51, 51, 51, 0.42), 0 4px 23px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(51, 51, 51, 0.2)'\n    }\n  },\n  geeringupPrimary: {\n    color: '#1D5561',\n    border: '2px solid #1D5561',\n    backgroundColor: '#FFF',\n    '&:hover,&:focus': {\n      color: '#1D5561',\n      backgroundColor: 'rgba(29, 85, 97, 0.3)'\n    }\n  },\n  geeringupSecondary: {\n    color: '#1D5561',\n    border: '2px solid #1D5561',\n    backgroundColor: '#FFF',\n    '&:hover,&:focus': {\n      color: '#1D5561',\n      backgroundColor: 'rgba(29, 85, 97, 0.3)'\n    }\n  },\n  simple: {\n    '&,&:focus,&:hover,&:visited': {\n      color: '#FFFFFF',\n      background: 'transparent',\n      boxShadow: 'none'\n    },\n    '&$primary': {\n      '&,&:focus,&:hover,&:visited': {\n        color: primaryColor\n      }\n    },\n    '&$info': {\n      '&,&:focus,&:hover,&:visited': {\n        color: infoColor\n      }\n    },\n    '&$success': {\n      '&,&:focus,&:hover,&:visited': {\n        color: successColor\n      }\n    },\n    '&$warning': {\n      '&,&:focus,&:hover,&:visited': {\n        color: warningColor\n      }\n    },\n    '&$rose': {\n      '&,&:focus,&:hover,&:visited': {\n        color: roseColor\n      }\n    },\n    '&$danger': {\n      '&,&:focus,&:hover,&:visited': {\n        color: dangerColor\n      }\n    },\n    '&$twitter': {\n      '&,&:focus,&:hover,&:visited': {\n        color: '#55acee'\n      }\n    },\n    '&$facebook': {\n      '&,&:focus,&:hover,&:visited': {\n        color: '#3b5998'\n      }\n    },\n    '&$google': {\n      '&,&:focus,&:hover,&:visited': {\n        color: '#dd4b39'\n      }\n    },\n    '&$github': {\n      '&,&:focus,&:hover,&:visited': {\n        color: '#333333'\n      }\n    }\n  },\n  transparent: {\n    '&,&:focus,&:hover,&:visited': {\n      color: 'inherit',\n      background: 'transparent',\n      boxShadow: 'none'\n    }\n  },\n  disabled: {\n    opacity: '0.65',\n    pointerEvents: 'none'\n  },\n  lg: {\n    padding: '1.125rem 2.25rem',\n    fontSize: '0.875rem',\n    lineHeight: '1.333333',\n    borderRadius: '0.2rem'\n  },\n  sm: {\n    padding: '0.40625rem 1.25rem',\n    fontSize: '0.6875rem',\n    lineHeight: '1.5',\n    borderRadius: '0.2rem'\n  },\n  round: {\n    borderRadius: '30px'\n  },\n  block: {\n    width: '100% !important'\n  },\n  link: {\n    '&,&:hover,&:focus': {\n      backgroundColor: 'transparent',\n      color: '#999999',\n      boxShadow: 'none'\n    }\n  },\n  justIcon: {\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    fontSize: '20px',\n    height: '41px',\n    minWidth: '41px',\n    width: '41px',\n    '& .fab,& .fas,& .far,& .fal,& svg,& .material-icons': {\n      marginRight: '0px'\n    },\n    '&$lg': {\n      height: '57px',\n      minWidth: '57px',\n      width: '57px',\n      lineHeight: '56px',\n      '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n        fontSize: '32px',\n        lineHeight: '56px'\n      },\n      '& svg': {\n        width: '32px',\n        height: '32px'\n      }\n    },\n    '&$sm': {\n      height: '30px',\n      minWidth: '30px',\n      width: '30px',\n      '& .fab,& .fas,& .far,& .fal,& .material-icons': {\n        fontSize: '17px',\n        lineHeight: '29px'\n      },\n      '& svg': {\n        width: '17px',\n        height: '17px'\n      }\n    }\n  }\n}\n\nexport default buttonStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n\n// @material-ui/core components\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Button from '@material-ui/core/Button'\n\n// core components\n\nimport buttonStyle from '../../assets/jss/material-kit-react/components/buttonStyle.js'\n\nconst makeComponentStyles = makeStyles(() => ({\n  ...buttonStyle\n}))\n\nconst RegularButton = React.forwardRef((props, ref) => {\n  const {\n    color,\n    round,\n    children,\n    fullWidth,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    ...rest\n  } = props\n\n  const classes = makeComponentStyles()\n\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.fullWidth]: fullWidth,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className\n  })\n  return (\n    <Button {...rest} ref={ref} className={btnClasses}>\n      {children}\n    </Button>\n  )\n})\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger',\n    'rose',\n    'white',\n    'facebook',\n    'twitter',\n    'google',\n    'github',\n    'geeringupSecondary',\n    'geeringupPrimary',\n    'transparent'\n  ]),\n  size: PropTypes.oneOf(['sm', 'lg']),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nexport default RegularButton\n","import React from 'react'\nimport './sudoku.css'\n\n/**\n * Draws a singular sudoku square, like you see 81 of in the whole 9x9 grid.\n * Uses its x and y props to decide which of its grid borders should be bolded\n * and how bold they should be. This is what gives the board its Sudoku look.\n * @prop {Integer} x - The x position of the Square in its grid\n * @prop {Integer} y - The y position of the Square in its grid\n * @prop {Boolean} focused - Marks whether the square should be in focus\n * @prop {Function} onClick - Function to be called on button click\n * @prop {Integer} value - What will be displayed in the Square\n * @prop {Boolean} bolded - Whether the square's text should be bolded\n * @prop {Boolean} enabled - Whether the button should be enabled\n */\nfunction GridSquare (props) {\n  var classes = 'gridSquare'\n  if (props.x === 0) classes += ' gridLeftest'\n  else if (props.x % 3 === 0) classes += ' gridLeft'\n\n  if (props.x === 8) classes += ' gridRightest'\n  else if (props.x % 3 === 2) classes += ' gridRight'\n\n  if (props.y === 0) classes += ' gridToppest'\n  else if (props.y % 3 === 0) classes += ' gridTop'\n\n  if (props.y === 8) classes += ' gridBottomest'\n  else if (props.y % 3 === 2) classes += ' gridBottom'\n  if (props.focused) classes += ' focused'\n  if (props.bolded) classes += ' bolded'\n  if (props.rowInvalid) classes += ' rowInvalid'\n  if (props.colnInvalid) classes += ' colnInvalid'\n  if (props.blockInvalid) classes += ' blockInvalid'\n\n  const validValue = props.value === 0 ? '' : String(props.value)\n  const invalidValue = <div className='invalidOutline'>{validValue}</div>\n\n  return (\n    <button\n      type='button'\n      id={'button' + props.x + props.y}\n      className={classes}\n      onClick={props.onClick}\n      disabled={!props.enabled}\n    >\n      {props.invalid ? invalidValue : validValue}\n    </button>\n  )\n}\n\n/**\n * Returns a set of 81 GridSquares to make a Sudoku with.\n * @param {Array(81)} sudokuGrid - An array of 81 numbers, left-to-right, top-to-bottom\n * that make up the sudoku grid.\n * @param {Array(81)} gridBold - An array of 81 booleans, depicting if each square is\n * bolded or not.\n * @param {Array} shaded - An array of all the shaded buttons, in case more than one\n * is shaded at once.\n * @param {Boolean} enabled - Whether the whole board is enabled, or should be shaded\n * and disabled.\n * @param {Function} setCurrentSquare - A function to change the current selected\n * square to any clicked square.\n * @param {Array(Array(9))} gridInvalid - A 9x9 array with True indicating that sudoku\n * tile should be drawn as invalid.\n * @param {Array(9)} rowInvalid - An array of all the rows with errors in them marked by True\n * @param {Array(9)} colnInvalid - Same as rowInvalid, but columns.\n * @param {Object} blockInvalid - A JS object with keys [blockRow, blockColn] marking\n * blocks as errorred or error-free.\n */\nfunction makeSudokuGrid (sudokuGrid, gridBold, shaded, enabled, setCurrentSquare, gridInvalid, rowInvalid, colnInvalid, blockInvalid) {\n  return (\n    [0, 1, 2, 3, 4, 5, 6, 7, 8].map((y) => {\n      return [0, 1, 2, 3, 4, 5, 6, 7, 8].map((x) => {\n        const blockRow = Math.floor(y / 3)\n        const blockColn = Math.floor(x / 3)\n        const blockKey = [blockRow, blockColn]\n        return (\n          <GridSquare\n            x={x}\n            y={y}\n            key={x + 9 * y} // Keys should be unique for React rendered components on the same layer\n            value={sudokuGrid[x + 9 * y]}\n            bolded={gridBold[x + 9 * y]}\n            enabled={enabled}\n            invalid={gridInvalid[y][x]}\n            rowInvalid={!!rowInvalid[y]}\n            colnInvalid={!!colnInvalid[x]}\n            blockInvalid={!!blockInvalid[blockKey]}\n            onClick={() => setCurrentSquare([x, y])}\n            focused={shaded.includes(x + 9 * y)}\n          />\n        )\n      })\n    })\n  )\n}\n\nexport default GridSquare\nexport { makeSudokuGrid }\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\nexport default class Utils {\n  /**\n    * @param {string} key whose value will be updated\n    * @param {any} val value to add\n    * @param {object} object whose key-val pair will be updated\n    * @returns {object} updated object\n    */\n  static addKeyValToObject (key, val, object) {\n    if (!object[key]) {\n      object[key] = [val]\n    } else {\n      object[key].push(val)\n    }\n\n    return object\n  }\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\nimport Utils from '../../utils.js'\n\nexport default class SudokuValidationUtils {\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @returns true if the Sudoku Grid (rows, columns and block) are valid\n    */\n  static isValidSudokuGrid (sudokuValidationResults) {\n    return SudokuValidationUtils.areRowsValid(sudokuValidationResults) &&\n    SudokuValidationUtils.areColnsValid(sudokuValidationResults) &&\n    SudokuValidationUtils.areBlocksValid(sudokuValidationResults)\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @returns true if rows are valid\n    */\n  static areRowsValid (sudokuValidationResults) {\n    return SudokuValidationUtils.isEmptyObject(sudokuValidationResults.duplicatesInRow)\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @returns true if columns are valid\n    */\n  static areColnsValid (sudokuValidationResults) {\n    return SudokuValidationUtils.isEmptyObject(sudokuValidationResults.duplicatesInColn)\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @returns true if blocks are valid\n    */\n  static areBlocksValid (sudokuValidationResults) {\n    return SudokuValidationUtils.isEmptyObject(sudokuValidationResults.duplicatesInBlock)\n  }\n\n  /**\n    *\n    * @param {object} object\n    * @returns true if the param is an empty object\n    */\n  static isEmptyObject (object) {\n    return SudokuValidationUtils.isKeyLengthZero(object) &&\n        SudokuValidationUtils.isObjectConstructor(object)\n  }\n\n  /**\n    *\n    * @param {object} object\n    * @returns true if object has no keys\n    */\n  static isKeyLengthZero (object) {\n    return Object.keys(object).length === 0\n  }\n\n  /**\n    *\n    * @param {object} object\n    * @returns true if the param's constructor is Object\n    */\n  static isObjectConstructor (object) {\n    return object.constructor === Object\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    * @param {object} sudokuGrid array of arrays representing the\n    * Sudoku Grid\n    */\n  static validateKeyPress (setters, sudokuGrid) {\n    const sudokuValidationResults = SudokuValidationUtils.getSudokuValidationResults(sudokuGrid)\n\n    if (SudokuValidationUtils.isValidSudokuGrid(sudokuValidationResults)) {\n      SudokuValidationUtils.resetInvalidStates(setters)\n    } else {\n      SudokuValidationUtils.updateInvalidStates(setters, sudokuValidationResults)\n    }\n  }\n\n  /**\n    *\n    * @param {object} sudokuGrid array of arrays representing the\n    * Sudoku Grid\n    * @returns {object} validationResult of the Sudoku Grid's rows,\n    * columns and block\n    */\n  static getSudokuValidationResults (sudokuGrid) {\n    const N = 9\n    const M = 9\n\n    let seenInRow = {}\n    let seenInColn = {}\n    let seenInBlock = {}\n\n    const sudokuBoard = SudokuValidationUtils.getUnflattenedSudokuBoard(sudokuGrid)\n\n    for (let i = 0; i < M; i++) {\n      for (let j = 0; j < N; j++) {\n        const current = sudokuBoard[i][j]\n\n        if (current === 0) {\n          continue\n        }\n\n        const inRow = current + ' in row ' + i\n        const inColn = current + ' in coln ' + j\n\n        const blockRow = Math.floor(i / 3)\n        const blockColumn = Math.floor(j / 3)\n        const inBlock = current + ' in block ' + blockRow + ' - ' + blockColumn\n\n        seenInRow = Utils.addKeyValToObject(inRow, [i, j], seenInRow)\n        seenInColn = Utils.addKeyValToObject(inColn, [i, j], seenInColn)\n        seenInBlock = Utils.addKeyValToObject(inBlock, [i, j], seenInBlock)\n      }\n    }\n\n    const validationResult = {\n      duplicatesInRow: SudokuValidationUtils.getDuplicatesInRow(seenInRow),\n      duplicatesInColn: SudokuValidationUtils.getDuplicatesInColn(seenInColn),\n      duplicatesInBlock: SudokuValidationUtils.getDuplicatesInBlock(seenInBlock)\n    }\n\n    return validationResult\n  }\n\n  /**\n    *\n    * @param {object} seenInRow mapping numbers in rows to\n    * arrays filled with their coordinates\n    * @returns {object} duplicatesInRow mapping row coordinates to\n    * arrays filled with their column coordinates\n    */\n  static getDuplicatesInRow (seenInRow) {\n    let duplicatesInRow = {}\n\n    Object.keys(seenInRow).forEach(row => {\n      if (SudokuValidationUtils.hasDuplicates(seenInRow, row)) {\n        seenInRow[row].forEach((coord) => {\n          duplicatesInRow = Utils.addKeyValToObject(coord[0], coord[1], duplicatesInRow)\n        })\n      }\n    })\n\n    return duplicatesInRow\n  }\n\n  /**\n    *\n    * @param {object} seenInColn mapping numbers in columns to\n    * arrays filled with their coordinates\n    * @returns {object} duplicatesInColn mapping column coordinates to\n    * arrays filled with their row coordinates\n    */\n  static getDuplicatesInColn (seenInColn) {\n    let duplicatesInColn = {}\n\n    Object.keys(seenInColn).forEach(coln => {\n      if (SudokuValidationUtils.hasDuplicates(seenInColn, coln)) {\n        seenInColn[coln].forEach((coord) => {\n          duplicatesInColn = Utils.addKeyValToObject(coord[1], coord[0], duplicatesInColn)\n        })\n      }\n    })\n\n    return duplicatesInColn\n  }\n\n  /**\n    *\n    * @param {object} seenInBlock mapping numbers in blocks to\n    * arrays filled with their coordinates\n    * @returns {object} duplicatesInBlock mapping block coordinates to\n    * arrays filled with the grid coordinates of populated cells\n    */\n  static getDuplicatesInBlock (seenInBlock) {\n    let duplicatesInBlock = {}\n\n    Object.keys(seenInBlock).forEach(block => {\n      if (SudokuValidationUtils.hasDuplicates(seenInBlock, block)) {\n        seenInBlock[block].forEach((coord) => {\n          const key = [Math.floor(coord[0] / 3), Math.floor(coord[1] / 3)]\n          duplicatesInBlock = Utils.addKeyValToObject(key, coord, duplicatesInBlock)\n        })\n      }\n    })\n\n    return duplicatesInBlock\n  }\n\n  /**\n    *\n    * @param {object} object\n    * @param {string} key\n    * @returns true if key's value array\n    * has length greater than 1\n    */\n  static hasDuplicates (object, key) {\n    return object[key].length > 1\n  }\n\n  /**\n    *\n    * @param {object} flattenedSudokuBoard 1-D array representing\n    * the Sudoku Grid\n    * @returns 2-D array representing the Sudoku Grid\n    */\n  static getUnflattenedSudokuBoard (flattenedSudokuBoard) {\n    const unflattenedSudokuBoard = []\n    let row = []\n\n    for (let i = 0; i < flattenedSudokuBoard.length; i++) {\n      row.push(flattenedSudokuBoard[i])\n\n      if (SudokuValidationUtils.isRowFilled(i)) {\n        unflattenedSudokuBoard.push(row)\n        row = []\n      }\n    }\n\n    return unflattenedSudokuBoard\n  }\n\n  /**\n    *\n    * @param {number} lastFilledIndex\n    * @returns true if the row has 9 entries\n    * (indexing from 0)\n    */\n  static isRowFilled (lastFilledIndex) {\n    return (lastFilledIndex + 1) % 9 === 0\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    */\n  static updateInvalidStates (setters, sudokuValidationResults) {\n    let newGridInvalid = SudokuValidationUtils.getEmptyGrid()\n    newGridInvalid = SudokuValidationUtils.handleInvalidRow(sudokuValidationResults, newGridInvalid, setters)\n    newGridInvalid = SudokuValidationUtils.handleInvalidColn(sudokuValidationResults, newGridInvalid, setters)\n    newGridInvalid = SudokuValidationUtils.handleInvalidBlock(sudokuValidationResults, newGridInvalid, setters)\n\n    setters.setGridInvalid(newGridInvalid)\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @param {object} setters object containing setter hooks\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static handleInvalidRow (sudokuValidationResults, gridInvalid, setters) {\n    if (SudokuValidationUtils.areRowsValid(sudokuValidationResults)) {\n      SudokuValidationUtils.resetRowInvalid(setters)\n    } else {\n      const duplicatesInRow = sudokuValidationResults.duplicatesInRow\n      setters.setRowInvalid(duplicatesInRow)\n      gridInvalid = SudokuValidationUtils.updateInvalidRowCoordinatesInGrid(duplicatesInRow, gridInvalid)\n    }\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @param {object} duplicatesInRow mapping row coordinates to\n    * arrays filled with their column coordinates\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static updateInvalidRowCoordinatesInGrid (duplicatesInRow, gridInvalid) {\n    Object.keys(duplicatesInRow).forEach(row => {\n      const columns = duplicatesInRow[row]\n      columns.forEach(column => {\n        gridInvalid[row][column] = true\n      })\n    })\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @param {object} setters object containing setter hooks\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static handleInvalidColn (sudokuValidationResults, gridInvalid, setters) {\n    if (SudokuValidationUtils.areColnsValid(sudokuValidationResults)) {\n      SudokuValidationUtils.resetColnInvalid(setters)\n    } else {\n      const duplicatesInColn = sudokuValidationResults.duplicatesInColn\n      setters.setColnInvalid(duplicatesInColn)\n      gridInvalid = SudokuValidationUtils.updateInvalidColnCoordinatesInGrid(duplicatesInColn, gridInvalid)\n    }\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @param {object} duplicatesInColn mapping column coordinates to\n    * arrays filled with their row coordinates\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static updateInvalidColnCoordinatesInGrid (duplicatesInColn, gridInvalid) {\n    Object.keys(duplicatesInColn).forEach(column => {\n      const rows = duplicatesInColn[column]\n      rows.forEach(row => {\n        gridInvalid[row][column] = true\n      })\n    })\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @param {object} sudokuValidationResults object containing validation\n    * results of the Sudoku Grid's rows, columns and block\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @param {object} setters object containing setter hooks\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static handleInvalidBlock (sudokuValidationResults, gridInvalid, setters) {\n    if (SudokuValidationUtils.areBlocksValid(sudokuValidationResults)) {\n      SudokuValidationUtils.resetBlockInvalid(setters)\n    } else {\n      const duplicatesInBlock = sudokuValidationResults.duplicatesInBlock\n      setters.setBlockInvalid(duplicatesInBlock)\n      gridInvalid = SudokuValidationUtils.updateInvalidBlockCoordinatesInGrid(duplicatesInBlock, gridInvalid)\n    }\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @param {object} duplicatesInBlock mapping block coordinates to\n    * arrays filled with the grid coordinates of populated cells\n    * @param {object} gridInvalid array of arrays containing coordinates\n    * of invalid placements in the Sudoku Grid\n    * @returns {object} gridInvalid array of arrays with updated coordinates\n    * of invalid placements in the Sudoku Grid\n    */\n  static updateInvalidBlockCoordinatesInGrid (duplicatesInBlock, gridInvalid) {\n    Object.keys(duplicatesInBlock).forEach(block => {\n      const coords = duplicatesInBlock[block]\n      coords.forEach(coord => {\n        gridInvalid[coord[0]][coord[1]] = true\n      })\n    })\n\n    return gridInvalid\n  }\n\n  /**\n    *\n    * @returns an empty 9 x 9 grid (array of arrays)\n    * filled with zeros\n    */\n  static getEmptyGrid () {\n    return SudokuValidationUtils.getEmptyColn().map(() => SudokuValidationUtils.getEmptyRow())\n  }\n\n  /**\n    *\n    * @returns {object} an empty\n    * array filled with zeros\n    */\n  static getEmptyColn () {\n    return Array(9).fill(0)\n  }\n\n  /**\n    *\n    * @returns {object} an empty\n    * array filled with zeros\n    */\n  static getEmptyRow () {\n    return Array(9).fill(0)\n  }\n\n  /**\n    *\n    * @returns {object} an empty object\n    */\n  static getEmptyBlock () {\n    return {}\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    */\n  static resetInvalidStates (setters) {\n    SudokuValidationUtils.resetGridInvalid(setters)\n    SudokuValidationUtils.resetRowInvalid(setters)\n    SudokuValidationUtils.resetColnInvalid(setters)\n    SudokuValidationUtils.resetBlockInvalid(setters)\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    */\n  static resetGridInvalid (setters) {\n    setters.setGridInvalid(SudokuValidationUtils.getEmptyGrid())\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    */\n  static resetRowInvalid (setters) {\n    setters.setRowInvalid(SudokuValidationUtils.getEmptyRow())\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    */\n  static resetColnInvalid (setters) {\n    setters.setColnInvalid(SudokuValidationUtils.getEmptyColn())\n  }\n\n  /**\n    *\n    * @param {object} setters object containing setter hooks\n    */\n  static resetBlockInvalid (setters) {\n    setters.setBlockInvalid(SudokuValidationUtils.getEmptyBlock())\n  }\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst sudokuStyle = theme => ({\n  sudokuRoot: {\n    width: '476px',\n    margin: theme.spacing(3),\n    '& > *': {\n      color: 'rgba(29, 85, 97, 1)'\n    }\n  },\n  sudokuInput: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  sudokuProgress: {\n    color: '#fff'\n  }\n})\n\nexport default sudokuStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './sudoku.css'\nimport sudokuSolveRequest from './sudokuSolveRequest'\nimport getRandSolvableBoard from './randSolvableBoard'\n\nimport Button from '../../CustomButtons/Button'\nimport { makeSudokuGrid } from './GridSquare'\nimport {\n  isNumberPress,\n  isNumpadPress,\n  isArrowKeyPress,\n  updateEmptyState,\n  // isGridAllZeros,\n  flatten,\n  emptySudokuGrid,\n  boldify\n  // resetSudokuGrid\n} from './sudokuHelpers'\n\nimport SudokuValidationUtils from './SudokuValidationUtils.js'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport styles from '../../../assets/jss/material-kit-react/components/sudokuStyle.js'\n\n// THIS MAY BE A PROBLEM AND RECALCING EACH TIME\nconst randBoard = getRandSolvableBoard()\nconst randBold = boldify(randBoard)\n\n/**\n * SudokuGame is meant to make the Sudoku Solver tool\n * useable and accessible.\n *\n * Example Use::\n *\n *  const [APIKey, setAPIKey] = useState('')\n *  const [textLines, setTextLines] = useState([])\n *  return (\n *    <SudokuGame\n *      id='mySudoku'\n *      getAPIKey={() => APIKey}\n *      outputToConsole={(line) => {\n *        setTextLines(textLines.concat(line))\n *      appendToConsole={}\n *      }}\n *    />\n *  )\n *\n * Properties:\n * @prop {string} id - (Required) This will get extended to\n * serve as the id base string for all underlying components.\n * @prop {func()} getAPIKey - (Required) This needs\n * to be a function that can be called to return the current API\n * key.\n * NOTE: If it returns '', this is equivalent to choosing the\n * simulator.\n * @prop {func(string)} outputToConsole - (Required) This function\n * should take a single string (a line of text), and concatenate\n * it to the current console output string array. If the Console\n * is not being used, this can do anything you want with that\n * string, but you should probably output it in some way.\n * @prop {func(string)} appendToConsole - (Required) Same as output,\n * but just appends\n * the given string to the last line of the Console.\n */\nfunction SudokuGame (props) {\n  // The states for the Sudoku widget. These all use React hooks,\n  // so that when setWhatever is called, the sudoku game is queued\n  // for a rerender.\n  const [sudokuGrid, setSudokuGrid] = useState(randBoard)\n  const [gridBold, setGridBold] = useState(randBold)\n\n  const [gridInvalid, setGridInvalid] = useState(SudokuValidationUtils.getEmptyGrid())\n  const [rowInvalid, setRowInvalid] = useState(SudokuValidationUtils.getEmptyRow())\n  const [colnInvalid, setColnInvalid] = useState(SudokuValidationUtils.getEmptyColn())\n  const [blockInvalid, setBlockInvalid] = useState({})\n\n  const [currentSquare, setCurrentSquare] = useState([0, 0])\n  const [enabled, setEnabled] = useState(true)\n  const [empty, setEmpty] = useState(true)\n  // const [loading, setLoading] = useState(false)\n  const [loading, setLoading] = [props.loading, props.setLoading]\n\n  var sudokuState = {\n    grid: sudokuGrid,\n    setGrid: setSudokuGrid,\n    bold: gridBold,\n    setBold: setGridBold,\n    cur: currentSquare,\n    setCur: setCurrentSquare,\n    enabled: enabled,\n    setEnabled: setEnabled,\n    empty: empty,\n    setEmpty: setEmpty,\n    loading: loading,\n    setLoading: setLoading\n  }\n\n  const invalidStateSetters = {\n    setGridInvalid: setGridInvalid,\n    setRowInvalid: setRowInvalid,\n    setColnInvalid: setColnInvalid,\n    setBlockInvalid: setBlockInvalid\n  }\n\n  const useStyles = makeStyles(styles)\n\n  const classes = useStyles()\n\n  // if (load.isFirst) {\n  //   load.setFirst()\n  //   setGridBold(boldify(sudokuGrid))\n  // }\n\n  return (\n    <div className={classes.sudokuRoot}>\n      <div className={loading ? 'sudokuBox loading' : 'sudokuBox'}>\n        <div\n          className='gridGrid'\n          tabIndex='0'\n          onKeyDown={(event) => {\n            // Don't handle key presses if the whole app is disabled\n            if (enabled) {\n              handleKeyPress(\n                event,\n                sudokuState,\n                (sudokuGrid) => { SudokuValidationUtils.validateKeyPress(invalidStateSetters, sudokuGrid) }\n              )\n            }\n          }}\n        >\n          {\n            // Render each Sudoku square. They're tiled using CSS grid-template\n            makeSudokuGrid(sudokuGrid, gridBold, [flatten(currentSquare)], enabled, setCurrentSquare, gridInvalid, rowInvalid, colnInvalid, blockInvalid)\n          }\n        </div>\n        {loading && <CircularProgress size={68} className={classes.sudokuProgress} />}\n      </div>\n      <p>Click on the cells and use your keyboard numbers to fill them in!</p>\n      <div className={classes.sudokuInput}>\n        <Button\n          color='geeringupPrimary'\n          // color='primary'\n          disabled={(empty || !enabled)}\n          onClick={() => {\n            emptySudokuGrid(sudokuState)\n            SudokuValidationUtils.resetInvalidStates(invalidStateSetters)\n          }}\n        >\n          Reset\n        </Button>\n        <Button\n          color='geeringupSecondary'\n          disabled={!enabled}\n          onClick={() => {\n            // TODO: Consider setting it to nothing instead of top-left\n            setCurrentSquare([0, 0])\n            sudokuSolveRequest(sudokuGrid, setSudokuGrid, setEnabled,\n              props.outputToConsole, props.appendToConsole, props.getAPIKey, setEmpty,\n              (sudokuGrid) => { SudokuValidationUtils.validateKeyPress(invalidStateSetters, sudokuGrid) },\n              setLoading)\n          }}\n        >\n          Solve\n        </Button>\n        <Button\n          color='geeringupPrimary'\n          disabled={!enabled}\n          onClick={() => {\n            const newRand = getRandSolvableBoard()\n            const newRandBold = boldify(newRand)\n            setSudokuGrid(newRand)\n            setGridBold(newRandBold)\n            SudokuValidationUtils.resetInvalidStates(invalidStateSetters)\n          }}\n        >\n          Random\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Handles key presses for the Sudoku Grid Component\n * Sets the number in the currently selected slot of the sudoku grid\n * to the number of the key just pressed.\n * @param {KeyPress} event - The keypres to be handled\n * @param {Object} state - The complete state of the Sudoku board\n * @param {Function} keyPressValidator - The validator that\n * will be called to check the Sudoku board state and validities\n * after any board change\n */\nfunction handleKeyPress (event, state, keyPressValidator) {\n  // console.log(`Key pressed is ${event.keyCode}`)\n  const backspaces = [8, 46, 110]\n  // 8 is backspace, the others are the numbers\n  const x = state.cur[0]\n  const y = state.cur[1]\n  if (\n    isNumberPress(event.keyCode) ||\n    isNumpadPress(event.keyCode) ||\n    backspaces.includes(event.keyCode)\n  ) {\n    event.preventDefault()\n    // Copy grid state to new variables\n    var newGrid = Array.from(state.grid)\n    var newBold = Array.from(state.bold)\n    var numRes\n    if (backspaces.includes(event.keyCode)) numRes = 0\n    else if (event.keyCode >= 96) numRes = event.keyCode - 96\n    else numRes = event.keyCode - 48\n\n    const boldRes = numRes !== 0\n    newGrid[x + 9 * y] = numRes\n    newBold[x + 9 * y] = boldRes\n\n    state.setGrid(newGrid)\n    /**\n     * TODO: Temporary; solution for automatically updating state\n     * object must be found\n     */\n    state.grid = newGrid\n    state.setBold(newBold)\n\n    updateEmptyState(state)\n  } else if (isArrowKeyPress(event.keyCode)) {\n    event.preventDefault()\n    // Copy cur to newCur\n    var newCur = Array.from(state.cur)\n    switch (event.keyCode) {\n      case 37: // Left\n        newCur[0] = (x + 8) % 9\n        break\n      case 38: // Up\n        newCur[1] = (y + 8) % 9\n        break\n      case 39: // Right\n        newCur[0] = (x + 1) % 9\n        break\n      case 40: // Down\n        newCur[1] = (y + 1) % 9\n        break\n      default:\n        break\n    }\n    state.setCur(newCur)\n  }\n\n  keyPressValidator(state.grid)\n}\n\n// Require the correct propTypes:\nSudokuGame.propTypes = {\n  id: PropTypes.string.isRequired,\n  getAPIKey: PropTypes.func.isRequired,\n  outputToConsole: PropTypes.func.isRequired\n}\n\nexport default SudokuGame\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n/**\n * Static NurseVariables class\n * Reason for this is to provide static variables that don't\n * refresh React\n */\nclass NurseVariables {\n  static nursesLowerBound = 1\n  static nursesUpperBound = 50\n\n  static daysLowerBound = 1\n  static daysUpperBound = 30\n\n  static nPDLowerBound = 1\n  static nPDUpperBound = 24\n\n  static defaultNumNurses = 3\n  static defaultNumDays = 7\n  static defaultNursesPerDay = 1\n\n  /**\n   * The number of nurses for the next solve request\n   */\n  static numNurses = NurseVariables.defaultNumNurses\n\n  /**\n   * The number of days for the next solve request\n   */\n  static numDays = NurseVariables.defaultNumDays\n\n  /**\n   * The number of nurses that should be scheduled for each day\n   */\n  static nursesPerDay = NurseVariables.defaultNursesPerDay\n\n  /**\n   * The latest XML Http Request. Currently unused\n   */\n  static xhr = null\n\n  /**\n   * The state of the latest LongRequest answer.\n   * Used in nurseSolveRequest's LongRequest callbacks.\n   */\n  static state = ''\n\n  /** */\n  static setNumNurses (num, errorSetters) {\n    if (NurseVariables.isEmptyInput(num)) {\n      errorSetters.setNumNursesError(false)\n      NurseVariables.numNurses = NurseVariables.defaultNumNurses\n    } else if (!NurseVariables.isNumInNursesRange(num)) {\n      errorSetters.setNumNursesError(true)\n    } else {\n      errorSetters.setNumNursesError(false)\n      NurseVariables.numNurses = num\n    }\n  }\n\n  /** */\n  static setNumDays (num, errorSetters) {\n    if (NurseVariables.isEmptyInput(num)) {\n      errorSetters.setNumDaysError(false)\n      NurseVariables.numDays = NurseVariables.defaultNumDays\n    } else if (!NurseVariables.isNumInDaysRange(num)) {\n      errorSetters.setNumDaysError(true)\n    } else {\n      errorSetters.setNumDaysError(false)\n      NurseVariables.numDays = num\n    }\n  }\n\n  /** */\n  static setNursesPerDay (num, errorSetters) {\n    if (NurseVariables.isEmptyInput(num)) {\n      errorSetters.setNumNursesPerDayError(false)\n      NurseVariables.nursesPerDay = NurseVariables.defaultNursesPerDay\n    } else if (!NurseVariables.isNumInNursesPerDayRange(num)) {\n      errorSetters.setNumNursesPerDayError(true)\n    } else {\n      errorSetters.setNumNursesPerDayError(false)\n      NurseVariables.nursesPerDay = num\n    }\n  }\n\n  static isEmptyInput (input) {\n    return input.trim() === ''\n  }\n\n  static isNumInNursesRange (num) {\n    return num >= 1 && num <= 50\n  }\n\n  static isNumInDaysRange (num) {\n    return num >= 1 && num <= 30\n  }\n\n  static isNumInNursesPerDayRange (num) {\n    return num >= 1 && num <= 24\n  }\n\n  /** */\n  static setXHR (newXHR) {\n    NurseVariables.xhr = newXHR\n  }\n\n  /** */\n  static setState (newState) {\n    NurseVariables.state = newState\n  }\n}\n\nexport default NurseVariables\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n// import XMLHttpRequest from 'xhr2'\nimport makeLongRequest from '../LongRequest'\nimport nurseVars from './NurseVariables'\n\n/**\n * This is a function to send a solve request to the backend.\n * Uses LongRequest to achieve this with background processes.\n * @param {Function} setSchedule - Sets the Schedule\n * @param {Function} outputToConsole - Output to Console\n * @param {Function} appendToConsole - Append to Console\n * @param {Function} getAPIKey - Get the API Key\n * @param {Function} setLoading - Hook to set the Nurse App's loading state\n */\nfunction nurseSolveRequest (setSchedule, outputToConsole, appendToConsole, getAPIKey, setLoading) {\n  if (nurseVars.xhr) return\n\n  setLoading(true)\n  outputToConsole(`Scheduling ${nurseVars.numNurses} nurses across ${nurseVars.numDays} days:`)\n\n  const params = {\n    // token: getAPIKey(),\n    typeOfProblem: 'nurseScheduling',\n    n_nurses: Math.floor(nurseVars.numNurses),\n    n_days: Math.floor(nurseVars.numDays),\n    nurses_per_day: Math.floor(nurseVars.nursesPerDay)\n  }\n\n  makeLongRequest(\n    params,\n    (xhr) => {\n      outputToConsole('The nurse problem has been queued for solving!')\n      nurseVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      if (xhr.response.jobStatus === nurseVars.state) {\n        appendToConsole('.')\n      } else if (xhr.response.jobStatus === 'queued') {\n        outputToConsole('In Queue')\n      } else if (xhr.response.jobStatus === 'started') {\n        outputToConsole('Quantum Computing in Progress!')\n        outputToConsole('Solving')\n      } else {\n        outputToConsole(xhr.response.jobStatus)\n      }\n      nurseVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      postSolve(xhr, setSchedule, outputToConsole, setLoading)\n    },\n    (xhr) => {\n      outputToConsole('Something went wrong')\n      console.log(xhr)\n      outputToConsole(JSON.stringify(xhr))\n      setLoading(false)\n    },\n    outputToConsole\n  )\n}\n\n/**\n * This is a function to do something after the solve has gone\n * through. It decodes the grid configuration sent, and\n * then sets it as the current grid.\n * @param {XMLHTTPRequest} xhr - This is the response containing the results\n * of the nurse scheduling job. The \"encoded\" schedule is in here. Encoded\n * simply means a sparse matrix representation, as opposed to a complete\n * matrix.\n * @param {Function} setSchedule - A function to set the Nurse Schedule\n * @param {Function} outputToConsole - Outputs a line to the console object\n * @param {Function} setLoading - Hook to set the Nurse App's loading state\n */\nfunction postSolve (xhr, setSchedule, outputToConsole, setLoading) {\n  if (xhr.status === 200) {\n    outputToConsole('Solved! Enjoy your nurse schedule!')\n\n    // Create the new schedule. This is done in reverse to avoid\n    // changing the length of each array more than once\n    var row\n    var newsched = new Array(xhr.response.n_nurses)\n    for (row = xhr.response.n_nurses - 1; row >= 0; row--) {\n      newsched[row] = []\n      for (var col = xhr.response.n_days - 1; col >= 0; col--) {\n        newsched[row][col] = 0\n      }\n    }\n\n    for (row = 0; row < xhr.response.schedule.length; ++row) {\n      for (var i = 0; i < xhr.response.schedule[row].length; ++i) {\n        const col = xhr.response.schedule[row][i]\n        newsched[row][col] = 1\n        // console.log(row, col)\n      }\n    }\n\n    // console.log('The returned nurse schedule is:')\n    // newsched.map((row) => console.log(row.join(' ')))\n\n    // console.log(xhr.response.HardNurseConstraint)\n    // console.log(xhr.response.HardShiftConstraint)\n\n    setSchedule(newsched)\n  } else if (xhr.status === 400) {\n    outputToConsole(xhr.response.error)\n  } else {\n    outputToConsole(`${xhr.status} ${xhr.statusText}`)\n    outputToConsole('Your Nurse Scheduling may have been too difficult and timed out.')\n    outputToConsole('Please save the configuration you were trying to solve and report the problem')\n  }\n  setLoading(false)\n  nurseVars.setXHR(null)\n}\n\nexport default nurseSolveRequest\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport PropTypes from 'prop-types'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport PersonIcon from '@material-ui/icons/Person'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: 'rgba(80, 200, 235, 0.65)',\n    color: '#50c8eb'\n  }\n})\n\nexport default function NursesOnDayDialog (props) {\n  const classes = useStyles()\n  const { onClose, selectedValue, open, nurseIndices } = props\n\n  const handleClose = () => {\n    onClose(selectedValue)\n  }\n\n  const handleListItemClick = (value) => {\n    onClose(value)\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby='simple-dialog-title' open={open}>\n      <DialogTitle id='simple-dialog-title'>Nurses</DialogTitle>\n      <List>\n        {nurseIndices.map((nurseIndex) => (\n          <ListItem button onClick={() => handleListItemClick(nurseIndex)} key={nurseIndex}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={`Nurse ${nurseIndex + 1}`} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  )\n}\n\nNursesOnDayDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  nurseIndices: PropTypes.arrayOf(PropTypes.number)\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst nurseScheduleStyle = {\n  badge: {\n    backgroundColor: '#D96262'\n  },\n  geeringupTheme: {\n    overrides: {\n      MuiPickersCalendarHeader: {\n        transitionContainer: {\n          color: 'rgba(0, 0, 0, 0.87)'\n        }\n      },\n      MuiPickersStaticWrapper: {\n        staticWrapperRoot: {\n          borderRadius: '6px',\n          border: '1px solid rgba(0, 0, 0, 0.12)'\n        }\n      },\n      MuiPickersToolbar: {\n        toolbar: {\n          backgroundColor: '#50c8eb'\n        }\n      },\n      MuiPickersToolbarButton: {\n        toolbarBtn: {\n          '&:focus': {\n            color: 'inherit',\n            background: 'transparent'\n          }\n        }\n      },\n      MuiPickersDay: {\n        day: {\n          color: 'rgb(21, 153, 191)'\n        },\n        daySelected: {\n          '&, &:hover': {\n            backgroundColor: '#50c8eb'\n          }\n        },\n        dayDisabled: {\n          color: 'rgba(80, 200, 235, 0.65)'\n        },\n        current: {\n          color: 'rgba(0, 0, 0, 0.87)'\n        }\n      }\n    }\n  }\n}\n\nexport default nurseScheduleStyle\n","/**\nMIT License\n\nCopyright (c) 2017 Dmitriy Kovalenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n */\n\nimport React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { Badge, createMuiTheme } from '@material-ui/core'\nimport DateFnsUtils from '@date-io/date-fns'\nimport { ThemeProvider } from '@material-ui/styles'\nimport NursesOnDayDialog from '../Dialog/NursesOnDayDialog.js'\n\nimport Utils from '../utils.js'\n\nimport styles from '../../assets/jss/material-kit-react/components/nurseScheduleStyle.js'\nconst useStyles = makeStyles(styles)\n\nconst NurseSchedule = (props) => {\n  const classes = useStyles()\n  const geeringupTheme = createMuiTheme(styles.geeringupTheme)\n\n  const [date, changeDate] = useState(new Date())\n  const [open, setOpen] = React.useState(false)\n  const [nurses, setNurses] = useState([])\n  const [selectedValue, setSelectedValue] = React.useState(0)\n\n  const schedule = props.schedule\n  const scheduleInfo = getScheduleInfo(schedule)\n  const daysWithNurses = scheduleInfo.daysWithNurses\n  const daysToNurses = scheduleInfo.daysToNurses\n\n  const handleClickOpen = (day) => {\n    setOpen(true)\n    const newNurses = daysToNurses[day]\n    setNurses(newNurses)\n  }\n\n  const handleClose = (value) => {\n    setOpen(false)\n    setSelectedValue(value)\n  }\n\n  const getIndexFromDay = (day) => {\n    return new Date(day).getDate() - 1\n  }\n\n  const isNurseScheduledOnDay = (dayIndex, isInCurrentMonth) => {\n    return (daysWithNurses.has(dayIndex) && isInCurrentMonth)\n  }\n\n  const getDayWithBadge = (dayComponent, onDoubleClick) => {\n    return (\n      <Badge\n        classes={{ dot: classes.badge }}\n        overlap='circle'\n        variant='dot'\n        badgeContent=' '\n        onDoubleClick={onDoubleClick}\n      >\n        {dayComponent}\n      </Badge>\n    )\n  }\n\n  const renderDay = (day, selectedDate, isInCurrentMonth, dayComponent) => {\n    const dayIndex = getIndexFromDay(day)\n    const onDoubleClick = () => {\n      handleClickOpen(dayIndex)\n    }\n    return isNurseScheduledOnDay(dayIndex, isInCurrentMonth)\n      ? getDayWithBadge(dayComponent, onDoubleClick)\n      : dayComponent\n  }\n\n  return (\n    <>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <ThemeProvider theme={geeringupTheme}>\n          <DatePicker\n            autoOk\n            orientation='landscape'\n            variant='static'\n            openTo='date'\n            value={date}\n            onChange={changeDate}\n            renderDay={renderDay}\n          />\n        </ThemeProvider>\n      </MuiPickersUtilsProvider>\n      <NursesOnDayDialog selectedValue={selectedValue} open={open} onClose={handleClose} nurseIndices={nurses} />\n    </>\n  )\n}\n\nfunction getScheduleInfo (schedule) {\n  const daysWithNurses = new Set()\n  let daysToNurses = {}\n  for (let i = 0; i < schedule.length; i++) {\n    for (let j = 0; j < schedule[0].length; j++) {\n      if (schedule[i][j] === 1) {\n        if (!daysWithNurses.has(j)) {\n          daysWithNurses.add(j)\n        }\n        daysToNurses = Utils.addKeyValToObject(j, i, daysToNurses)\n      }\n    }\n  }\n\n  return {\n    daysWithNurses: daysWithNurses,\n    daysToNurses: daysToNurses\n  }\n}\n\nNurseSchedule.propTypes = {\n  schedule: PropTypes.arrayOf(PropTypes.array)\n}\n\nexport default NurseSchedule\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport {\n  dangerColor,\n  successColor,\n  defaultFont\n} from '../../material-kit-react.js'\n\nconst customInputStyle = {\n  disabled: {\n    '&:before': {\n      borderColor: 'transparent !important'\n    }\n  },\n  underline: {\n    '&:hover:not($disabled):before,&:before': {\n      borderColor: '#D2D2D2 !important',\n      borderWidth: '1px !important'\n    },\n    '&:after': {\n      borderColor: '#50C8EB'\n    }\n  },\n  underlineError: {\n    '&:after': {\n      borderColor: dangerColor\n    }\n  },\n  underlineSuccess: {\n    '&:after': {\n      borderColor: successColor\n    }\n  },\n  whiteUnderline: {\n    '&:hover:not($disabled):before,&:before': {\n      borderColor: '#FFFFFF'\n    },\n    '&:after': {\n      borderColor: '#FFFFFF'\n    }\n  },\n  labelRoot: {\n    ...defaultFont,\n    color: '#AAAAAA !important',\n    fontWeight: '400',\n    fontSize: '14px',\n    lineHeight: '1.42857',\n    top: '10px',\n    letterSpacing: 'unset',\n    '& + $underline': {\n      marginTop: '0px'\n    }\n  },\n  labelRootError: {\n    color: dangerColor + ' !important'\n  },\n  labelRootSuccess: {\n    color: successColor + ' !important'\n  },\n  formControl: {\n    margin: '0 0 17px 0',\n    paddingTop: '27px',\n    position: 'relative',\n    '& svg,& .fab,& .far,& .fal,& .fas,& .material-icons': {\n      color: '#495057'\n    }\n  },\n  input: {\n    color: '#495057',\n    height: 'unset',\n    '&,&::placeholder': {\n      fontSize: '14px',\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: '400',\n      lineHeight: '1.42857',\n      opacity: '1'\n    },\n    '&::placeholder': {\n      color: '#AAAAAA'\n    }\n  },\n  whiteInput: {\n    '&,&::placeholder': {\n      color: '#FFFFFF',\n      opacity: '1'\n    }\n  }\n}\n\nexport default customInputStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Input from '@material-ui/core/Input'\n\nimport styles from '../../assets/jss/material-kit-react/components/customInputStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function CustomInput (props) {\n  const classes = useStyles()\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success,\n    formHelperTextProps,\n    helperText\n  } = props\n\n  const labelClasses = classNames({\n    [' ' + classes.labelRootError]: error,\n    [' ' + classes.labelRootSuccess]: success && !error\n  })\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  })\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  })\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  })\n  var formControlClasses\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    )\n  } else {\n    formControlClasses = classes.formControl\n  }\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + ' ' + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n      {formControlProps && formControlProps.error && helperText &&\n        <FormHelperText id='helper-text' {...formHelperTextProps}>{helperText}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport { container } from '../../material-kit-react.js'\n\nconst nurseSchedulingInputStyle = {\n  gridContainer: {\n    paddingTop: '0'\n  },\n  gridItem: {\n    width: '100%'\n  },\n  container: {\n    ...container,\n    zIndex: '2',\n    position: 'relative',\n    paddingTop: '20vh',\n    color: '#FFFFFF',\n    paddingBottom: '200px',\n    margin: '8px'\n  },\n  nurseSchedulingInput: {\n    marginTop: '0',\n    boxShadow: 'none'\n  },\n  pageHeader: {\n    minHeight: '100vh',\n    height: 'auto',\n    display: 'inherit',\n    position: 'relative',\n    margin: '0',\n    padding: '0',\n    border: '0',\n    alignItems: 'center',\n    '&:before': {\n      background: 'rgba(0, 0, 0, 0.5)'\n    },\n    '&:before,&:after': {\n      position: 'absolute',\n      zIndex: '1',\n      width: '100%',\n      height: '100%',\n      display: 'block',\n      left: '0',\n      top: '0',\n      content: '\"\"'\n    },\n    '& footer li a,& footer li a:hover,& footer li a:active': {\n      color: '#FFFFFF'\n    },\n    '& footer': {\n      position: 'absolute',\n      bottom: '0',\n      width: '100%'\n    }\n  },\n  form: {\n    width: 'auto',\n    margin: 'auto'\n  },\n  cardHeader: {\n    width: 'auto',\n    textAlign: 'center',\n    marginLeft: '20px',\n    marginRight: '20px',\n    marginTop: '-40px',\n    padding: '15px 0',\n    marginBottom: '0px',\n    '& > *': {\n      margin: '0'\n    }\n  },\n  socialIcons: {\n    maxWidth: '24px',\n    marginTop: '0',\n    width: '100%',\n    transform: 'none',\n    left: '0',\n    top: '0',\n    height: '100%',\n    lineHeight: '41px',\n    fontSize: '20px'\n  },\n  divider: {\n    marginTop: '30px',\n    marginBottom: '0px',\n    textAlign: 'center'\n  },\n  cardFooter: {\n    display: 'flex',\n    paddingTop: '0',\n    border: '0',\n    borderRadius: '6px',\n    justifyContent: 'center !important'\n  },\n  socialLine: {\n    marginTop: '1rem',\n    textAlign: 'center',\n    padding: '0'\n  },\n  inputIconsColor: {\n    color: '#495057'\n  }\n}\n\nexport default nurseSchedulingInputStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\n// import GridContainer from '../Grid/GridContainer.js'\n// import GridItem from '../Grid/GridItem'\nimport Button from '../CustomButtons/Button'\n// import Card from '../Card/Card.js'\n// import CardBody from '../Card/CardBody.js'\n// import CardFooter from '../Card/CardFooter.js'\nimport CustomInput from '../CustomInput/CustomInput'\nimport NurseVars from '../Widget/Nurse/NurseVariables.js'\n\nimport styles from '../../assets/jss/material-kit-react/components/nurseSchedulingInputStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function NurseSchedulingInput (props) {\n  const classes = useStyles()\n\n  const [numNursesError, setNumNursesError] = useState(false)\n  const [numDaysError, setNumDaysError] = useState(false)\n  const [numNursesPerDayError, setNumNursesPerDayError] = useState(false)\n\n  const setters = {\n    setNumNursesError: setNumNursesError,\n    setNumDaysError: setNumDaysError,\n    setNumNursesPerDayError: setNumNursesPerDayError\n  }\n\n  return (\n    // <GridContainer justify='center'>\n    //   <GridItem className={classes.gridItem}>\n    // <Card className={classes.nurseSchedulingInput}>\n    <form className={classes.form}>\n      {/* <CardBody className={classes.cardBody}> */}\n      <Grid className={classes.gridContainer} container spacing={2}>\n        <Grid item xs={4}>\n          <CustomInput\n            labelText='Nurses'\n            id='nurse'\n            formControlProps={{\n              fullWidth: true,\n              error: numNursesError,\n              disabled: props.disabled\n            }}\n            inputProps={{\n              type: 'number',\n              inputProps: {\n                min: NurseVars.nursesLowerBound,\n                max: NurseVars.nursesUpperBound\n              },\n              onChange: (e) => {\n                props.setNumNurses(e.target.value, setters)\n              }\n            }}\n            helperText={`Number of Nurses must be between ${NurseVars.nursesLowerBound} and ${NurseVars.nursesUpperBound}`}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <CustomInput\n            labelText='Days'\n            id='days'\n            formControlProps={{\n              fullWidth: true,\n              error: numDaysError,\n              disabled: props.disabled\n            }}\n            inputProps={{\n              type: 'number',\n              inputProps: {\n                min: NurseVars.daysLowerBound,\n                max: NurseVars.daysUpperBound\n              },\n              onChange: (e) => {\n                props.setNumDays(e.target.value, setters)\n              }\n            }}\n            helperText={`Number of Days must be between ${NurseVars.daysLowerBound} and ${NurseVars.daysUpperBound}`}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <CustomInput\n            labelText='Nurses per Day'\n            id='nursedays'\n            formControlProps={{\n              fullWidth: true,\n              error: numNursesPerDayError,\n              disabled: props.disabled\n            }}\n            inputProps={{\n              type: 'number',\n              inputProps: {\n                min: NurseVars.nPDLowerBound,\n                max: NurseVars.nPDUpperBound\n              },\n              onChange: (e) => {\n                props.setNursesPerDay(e.target.value, setters)\n              }\n            }}\n            helperText={`Nurses per Day must be between ${NurseVars.nPDLowerBound} and ${NurseVars.nPDUpperBound}`}\n          />\n        </Grid>\n      </Grid>\n      {/* </CardBody> */}\n      <div className={classes.cardFooter}>\n        <Button\n          color='geeringupSecondary'\n          onClick={props.onSolve}\n          disabled={numNursesError || numDaysError || props.disabled}\n        >\n          Solve\n        </Button>\n      </div>\n    </form>\n    // </Card>\n    //   </GridItem>\n    // </GridContainer>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst nurseDetailTableStyle = {\n  table: {\n    minWidth: 650\n  },\n  day: {\n    padding: '6px 24px 6px 15px',\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\n  },\n  row: {\n    padding: '6px 20px 6px 19px',\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\n  },\n  rowFilled: {\n    padding: '6px 20px 6px 19px',\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n    backgroundColor: 'rgba(80, 200, 235, 0.65)'\n  },\n  lastRowFilled: {\n    padding: '6px 20px 6px 19px',\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n    borderBottom: 'none',\n    backgroundColor: 'rgba(80, 200, 235, 0.65)'\n  }\n}\n\nexport default nurseDetailTableStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nimport styles from '../../assets/jss/material-kit-react/components/nurseDetailTableStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function NurseDetailTable (props) {\n  const classes = useStyles()\n  const schedule = props.schedule\n\n  const getDayTableCell = (dayNo) => {\n    return (\n      <TableCell\n        className={classes.day}\n        align='right'\n      >\n        {`Day ${dayNo}`}\n      </TableCell>\n    )\n  }\n\n  const getTableHeadCells = () => {\n    const tableCells = [<TableCell>Nurse</TableCell>]\n    const numDays = schedule[0].length\n\n    for (let dayIndex = 0; dayIndex < numDays; dayIndex++) {\n      const dayNo = dayIndex + 1\n\n      tableCells.push(getDayTableCell(dayNo))\n    }\n\n    return tableCells\n  }\n\n  const getNurseTableRow = (nurseNo, rowCells) => {\n    return (\n      <TableRow\n        key={`Nurse ${nurseNo}`}\n        children={rowCells}\n      />)\n  }\n\n  const getTableBodyRows = () => {\n    const tableRows = []\n    const numNurses = schedule.length\n\n    for (let nurseIndex = 0; nurseIndex < numNurses; nurseIndex++) {\n      const nurseNo = nurseIndex + 1\n      const rowCells = getTableRowCells(`Nurse ${nurseNo}`, nurseIndex)\n\n      tableRows.push(getNurseTableRow(nurseNo, rowCells))\n    }\n\n    return tableRows\n  }\n\n  const isLeftmostCell = (cellIndex) => {\n    return cellIndex === 0\n  }\n\n  const getNurseRowHeader = (nurseTitle) => {\n    return (\n      <TableCell component='th' scope='row'>\n        {nurseTitle}\n      </TableCell>\n    )\n  }\n\n  const isNurseScheduled = (nurseScheduleValue) => {\n    return nurseScheduleValue === 1\n  }\n\n  const isBottomRow = (rowIndex) => {\n    return rowIndex === schedule.length - 1\n  }\n\n  const getRowClassKey = (isNurseScheduled, nurseIndex) => {\n    let rowClassKey = 'row'\n\n    if (isNurseScheduled && isBottomRow(nurseIndex)) {\n      rowClassKey = 'lastRowFilled'\n    } else if (isNurseScheduled) {\n      rowClassKey = 'rowFilled'\n    }\n\n    return rowClassKey\n  }\n\n  const getRowMarking = (isNurseScheduled) => {\n    return isNurseScheduled ? 'X' : ''\n  }\n\n  const getScheduledDayCell = (classKey, marking) => {\n    return <TableCell className={classes[classKey]} align='center'>{marking}</TableCell>\n  }\n\n  const getTableRowCells = (nurseTitle, nurseIndex) => {\n    const rowCells = []\n    const numDays = schedule[0].length\n\n    for (let dayIndex = 0; dayIndex < numDays; dayIndex++) {\n      if (isLeftmostCell(dayIndex)) {\n        rowCells.push(getNurseRowHeader(nurseTitle))\n      }\n\n      const isScheduled = isNurseScheduled(schedule[nurseIndex][dayIndex])\n      const classKey = getRowClassKey(isScheduled, nurseIndex)\n      const marking = getRowMarking(isScheduled)\n\n      rowCells.push(getScheduledDayCell(classKey, marking))\n    }\n\n    return rowCells\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' stickyHeader aria-label='a dense table'>\n        <TableHead>\n          <TableRow children={getTableHeadCells(schedule, classes)} />\n        </TableHead>\n        <TableBody children={getTableBodyRows(schedule, classes)} />\n      </Table>\n    </TableContainer>\n  )\n}\n\nNurseDetailTable.propTypes = {\n  schedule: PropTypes.arrayOf(PropTypes.array)\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst nurseStyle = theme => ({\n  nurseRoot: {\n    width: '476px',\n    margin: theme.spacing(3)\n  },\n  nurseInput: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  nurseProgress: {\n    position: 'absolute',\n    bottom: 'calc((307px / 2) - (68px / 2))',\n    left: 'calc((510px / 2) - (68px / 2))',\n    color: '#50c8eb'\n  },\n  buttonContainer: {\n    display: 'flex'\n  },\n  detailButton: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  instructions: {\n    color: 'rgba(0, 0, 0, 0.87)',\n    textAlign: 'center',\n    padding: '0.9375rem',\n    paddingBottom: '0'\n  },\n  loading: {\n    '&$instructions': {\n      color: 'rgba(0, 0, 0, 0.65)'\n    }\n  },\n  dialogContent: {\n    ' & > *': {\n      width: 'max-content',\n      display: 'inline-block'\n    }\n  }\n})\n\nexport default nurseStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useState, useRef, useEffect } from 'react'\nimport clsx from 'clsx'\n\nimport nurseSolveRequest from './nurseSolveRequest'\nimport NurseSchedule from '../../DatePicker/NurseSchedule.js'\nimport nurseVars from './NurseVariables'\n\nimport NurseSchedulingInput from '../../Inputs/NurseSchedulingInput'\n\nimport NurseDetailTable from '../../Table/NurseDetailTable.js'\n\nimport Button from '../../CustomButtons/Button.js'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../../assets/jss/material-kit-react/components/nurseStyle.js'\nimport './nurseScheduler.css'\n\n/**\n * NurseScheduler is meant to make the Nurse Scheduling tool\n * useable and accessible.\n *\n * Example Use::\n *\n *  const [APIKey, setAPIKey] = useState('')\n *  const [textLines, setTextLines] = useState([])\n *  return (\n *    <NurseScheduler\n *      id='myNurseSched'\n *      getAPIKey={() => APIKey}\n *      outputToConsole={(line) => {\n *        setTextLines(textLines.concat(line))\n *      }}\n *      appendToConsole={}\n *    />\n *  )\n *\n * Properties:\n * @prop {string} id - (Required) This will get extended to\n * serve as the id base string for all underlying components.\n * @prop {func()} getAPIKey - (Required) This needs\n * to be a function that can be called to return the current API\n * key.\n * NOTE: If it returns '', this is equivalent to choosing the\n * simulator.\n * @prop {func(string)} outputToConsole - (Required) This function\n * should take a single string (a line of text), and concatenate\n * it to the current console output string array. If the Console\n * is not being used, this can do anything you want with that\n * string, but you should probably output it in some way.\n * @prop {func(string)} appendToConsole - (Required) Same as output,\n * but just appends\n * the given string to the last line of the Console.\n */\nfunction NurseScheduler (props) {\n  // States for Nurse Scheduling widget.\n  // These use React Hooks, so rerendering is done\n  // whenever the Set function for a variable is called.\n  var [schedule, setSchedule] = useState([[false]])\n  const [open, setOpen] = useState(false)\n  const [scroll, setScroll] = useState('paper')\n  const [loading, setLoading] = [props.loading, props.setLoading]\n  const descriptionElementRef = useRef(null)\n\n  const useStyles = makeStyles(styles)\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef\n      if (descriptionElement !== null) {\n        descriptionElement.focus()\n      }\n    }\n  }, [open])\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true)\n    setScroll(scrollType)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  /** Sample Schedule in the commented lines below */\n  // schedule = [\n  //   [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n  //   [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1],\n  //   [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]\n  // ]\n\n  const nC = schedule[0].length\n  const nR = schedule.length\n  document.documentElement.style.setProperty('--numCol', nC)\n  document.documentElement.style.setProperty('--numRow', nR)\n\n  return (\n    <div className={classes.nurseRoot}>\n      <div className='nurseBox'>\n        <div className={loading ? 'nurseSchedule loading' : 'nurseSchedule'}>\n          <NurseSchedule schedule={schedule} />\n        </div>\n        {loading && <CircularProgress size={68} className={classes.nurseProgress} />}\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button\n          className={classes.detailButton}\n          color='geeringupSecondary'\n          size='sm'\n          onClick={handleClickOpen('paper')}\n          disabled={loading}\n        >\n            More Detail\n        </Button>\n      </div>\n      <div className={loading ? clsx(classes.instructions, classes.loading) : classes.instructions}>\n      Please enter a number of Nurses and Days to be scheduled!\n      </div>\n      <NurseSchedulingInput\n        setNumDays={nurseVars.setNumDays}\n        setNumNurses={nurseVars.setNumNurses}\n        setNursesPerDay={nurseVars.setNursesPerDay}\n        onSolve={\n          () => nurseSolveRequest(setSchedule, props.outputToConsole, props.appendToConsole, props.getAPIKey, setLoading)\n        }\n        disabled={loading}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        maxWidth={false}\n      >\n        <DialogTitle id='scroll-dialog-title'>Detailed View</DialogTitle>\n        <DialogContent className={classes.dialogContent} dividers={scroll === 'paper'}>\n          <NurseDetailTable schedule={schedule} />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color='geeringupSecondary'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default NurseScheduler\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n/**\n * Static LatticeVars class\n * Reason for this is to provide static variables that don't\n * refresh React\n */\nclass LatticeVars {\n  /**\n   * Stores x-y-Index -> Graph Index\n   */\n  static LatticeDict = {}\n\n  /**\n   * Stores Graph Index -> x-y-Index\n   */\n  static GraphDict = []\n\n  /**\n   * Stores XML last state\n   */\n  static state = ''\n\n  /**\n   * Stores the best lattice so far\n   */\n  static bestLattice = [null, 1000]\n\n  /**\n   * Stores the quantum solution\n   */\n  static quantumLattice = [[], '?']\n\n  static setBest (lattice, conflicts) {\n    LatticeVars.bestLattice = [lattice, conflicts]\n  }\n\n  static setQuantum (lattice, conflicts) {\n    LatticeVars.quantumLattice = [lattice, conflicts]\n  }\n\n  static setState (state) {\n    LatticeVars.state = state\n  }\n\n  static setDict (dict) {\n    LatticeVars.LatticeDict = dict\n  }\n\n  static setGraph (arr) {\n    LatticeVars.GraphDict = arr\n  }\n}\n\nexport default LatticeVars\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n// import XMLHttpRequest from 'xhr2'\nimport makeLongRequest from '../LongRequest'\nimport LatticeVars from './latticeVars'\n\n/**\n * This is a function to send a solve request to the backend.\n * Uses LongRequest to achieve this with background processes.\n * @param {Array} lattice - The lattice\n * @param {Function} setLattice - Sets the Schedule\n * @param {Function} outputToConsole - Output to Console\n * @param {Function} appendToConsole - Append to Console\n * @param {Function} getAPIKey - Get the API Key\n */\nfunction latticeSolveRequest (lattice, setLattice, outputToConsole, appendToConsole, getAPIKey, setLoading) {\n  var dict = {}\n  var arr = []\n  var conns = []\n  var index = 0\n\n  for (var i = 0; i < lattice.length; ++i) {\n    for (var j = 0; j < lattice[i].length; ++j) {\n      if (lattice[i][j] === 0) continue\n      arr[index] = [i, j]\n      dict[i + ' ' + j] = index\n      index++\n    }\n  }\n\n  for (i = 0; i < lattice.length; ++i) {\n    for (j = 0; j < lattice[i].length; ++j) {\n      if (lattice[i][j] === 0) continue\n      var neighbours\n      if (i % 2) {\n        neighbours = [[1, 1], [1, 0], [0, 1]]\n      } else {\n        neighbours = [[1, -1], [1, 0], [0, 1]]\n      }\n\n      for (var n of neighbours) {\n        const ii = i + n[0]\n        const jj = j + n[1]\n        // console.log(ii + ' ' + jj)\n        if (ii >= 0 && ii < lattice.length) {\n          if (jj >= 0 && jj < lattice[ii].length) {\n            if (lattice[ii][jj] !== 0) {\n              conns.push([dict[i + ' ' + j], dict[ii + ' ' + jj]])\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // console.log(dict)\n  // console.log(conns)\n\n  outputToConsole(`Colouring ${index} Lattice points for minimum conflicts:`)\n\n  const params = {\n    // token: getAPIKey(),\n    typeOfProblem: 'latticeColouring',\n    n_vertices: index,\n    neighbours: conns\n  }\n\n  setLoading(true)\n\n  makeLongRequest(\n    params,\n    (xhr) => {\n      outputToConsole('The colouring problem has been queued for solving!')\n      LatticeVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      if (xhr.response.jobStatus === LatticeVars.state) {\n        appendToConsole('.')\n      } else if (xhr.response.jobStatus === 'queued') {\n        outputToConsole('In Queue')\n      } else if (xhr.response.jobStatus === 'started') {\n        outputToConsole('Quantum Computing in Progress!')\n        outputToConsole('Solving')\n      } else {\n        outputToConsole(xhr.response.jobStatus)\n      }\n      LatticeVars.setState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      postSolve(xhr, lattice, setLattice, outputToConsole)\n      setLoading(false)\n    },\n    (xhr) => {\n      outputToConsole('Something went wrong')\n      console.log(xhr)\n      outputToConsole(JSON.stringify(xhr))\n      setLoading(false)\n    },\n    outputToConsole\n  )\n\n  LatticeVars.setGraph(arr)\n}\n\n/**\n * This is a function to do something after the solve has gone\n * through. It decodes the grid configuration sent, and\n * then sets it as the current grid.\n * @param {XMLHTTPRequest} xhr - This is the response containing the results\n * of the nurse scheduling job. The \"encoded\" schedule is in here. Encoded\n * simply means a sparse matrix representation, as opposed to a complete\n * matrix.\n * @param {Function} setSchedule - A function to set the Nurse Schedule\n * @param {Function} outputToConsole - Outputs a line to the console object\n */\nfunction postSolve (xhr, lattice, setLattice, outputToConsole) {\n  if (xhr.status === 200) {\n    outputToConsole('Solved! The quantum solution is now displayed!')\n\n    // console.log(JSON.stringify(xhr.response.solution))\n\n    var newLattice = lattice.map((row) => [...row])\n\n    // Create the new lattice from the old one.\n    for (var i = 0; i < xhr.response.solution.length; ++i) {\n      const ind = LatticeVars.GraphDict[i]\n      newLattice[ind[0]][ind[1]] = xhr.response.solution[i]\n    }\n\n    setLattice(newLattice)\n  } else if (xhr.status === 400) {\n    outputToConsole(xhr.response.error)\n  } else {\n    outputToConsole(`${xhr.status} ${xhr.statusText}`)\n    outputToConsole('Your Lattice may have had some unforeseen troubles.')\n    outputToConsole('Please save the configuration you were trying to solve and report the problem')\n  }\n  // nurseVars.setXHR(null)\n}\n\nexport default latticeSolveRequest\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport './latticeColourer.css'\n\nconst fillColours = ['white', '#d3d3d3']\nconst marbleColours = ['#a41149', '#5ed0eb']\n\nfunction Hexagon (props) {\n  const x = props.x\n  const y = props.y\n  const h = props.h\n  const w = props.w\n  const isOn = props.isOn\n  const onClick = props.onClick\n\n  const fillC = (isOn ? fillColours[1] : fillColours[0])\n  return (\n    <polygon\n      className='hexagon'\n      points={\n        (x + (1 / 2) * w) + ',' + y + ' ' +\n        (x + w) + ',' + (y + (1 / 3) * h) + ' ' +\n        (x + w) + ',' + (y + h) + ' ' +\n        (x + (1 / 2) * w) + ',' + (y + (4 / 3) * h) + ' ' +\n        (x) + ',' + (y + h) + ' ' +\n        (x) + ',' + (y + (1 / 3) * h) + ' '\n      }\n      key={x + ' ' + y}\n      strokeWidth='2'\n      stroke='black'\n      strokeOpacity={isOn ? 1 : 0.3}\n      fill={fillC}\n      onClick={onClick}\n    />\n  )\n}\n\nfunction Hexagons (props) {\n  const lattice = props.lattice\n  const setLattice = props.setLattice\n  const mode = props.mode\n  const hexWidth = props.hexWidth\n  const hexHeight = props.hexHeight\n\n  return (\n    lattice.map((row, i) => {\n      return (\n        row.map((e, j) => {\n          const x = (j + (i % 2 === 1 ? 0.5 : 0)) * hexWidth\n          const y = (i * hexHeight)\n          if (mode !== 'grid' && !e) return ''\n          return (\n            <Hexagon\n              x={x + 1}\n              y={y + 1}\n              key={x + ' ' + y}\n              h={hexHeight}\n              w={hexWidth}\n              isOn={e ? 1 : 0}\n              onClick={() => {\n                var newLattice = lattice.map(row => [...row])\n                if (mode === 'grid') {\n                  if (lattice[i][j]) {\n                    newLattice[i][j] = 0\n                  } else {\n                    newLattice[i][j] = 1\n                  }\n                  setLattice(newLattice)\n                } else if (mode === 'marble' && lattice[i][j]) {\n                  newLattice[i][j] = -lattice[i][j]\n                  setLattice(newLattice)\n                }\n              }}\n            />\n          )\n        })\n      )\n    })\n  )\n}\n\nfunction MarblesAndLines (props) {\n  const lattice = props.lattice\n  const hexWidth = props.hexWidth\n  const hexHeight = props.hexHeight\n  const conflicts = props.conflicts\n\n  var ci = 0\n\n  const returnVal = (\n    lattice.map((row, i) => {\n      return (\n        row.map((e, j) => {\n          const x = (j + (i % 2 === 1 ? 1 : 0.5)) * hexWidth\n          const y = (i + 2 / 3) * hexHeight\n          var fillC\n          if (!e) {\n            return ''\n          } else if (e < 0) {\n            fillC = marbleColours[0]\n          } else {\n            fillC = marbleColours[1]\n          }\n\n          var lineEnds = []\n\n          while (\n            ci < conflicts.length &&\n            conflicts[ci][0] === i &&\n            conflicts[ci][1] === j\n          ) {\n            const ii = conflicts[ci][2]\n            const jj = conflicts[ci][3]\n            lineEnds.push([\n              (jj + (ii % 2 === 1 ? 1 : 0.5)) * hexWidth,\n              (ii + 2 / 3) * hexHeight\n            ])\n            ci++\n          }\n\n          return (\n            <React.Fragment key='hexfrag'>\n              {\n                lineEnds.map(([x2, y2]) => {\n                  return (\n                    <line\n                      className='line'\n                      key={x + ' ' + y + ' ' + x2 + ' ' + y2}\n                      x1={x + 1}\n                      y1={y + 1}\n                      x2={x2 + 1}\n                      y2={y2 + 1}\n                      stroke='black'\n                      strokeWidth='4'\n                    />\n                  )\n                })\n              }\n              <circle\n                className='innerMarble'\n                key={x + ' ' + y + ' circ'}\n                cx={x + 1}\n                cy={y + 1}\n                r={hexWidth / 6}\n                fill={fillC}\n                stroke='black'\n                strokeWidth='2'\n              />\n            </React.Fragment>\n          )\n        })\n      )\n    })\n  )\n  return (returnVal)\n}\n\n/**\n * Draws the whole lattice grid, depending on the lattice given.\n * @prop {Array(Array(Int))} lattice - A lattice object :D\n */\nfunction HexGrid (props) {\n  const [lattice, setLattice] = [props.lattice, props.setLattice]\n  const mode = props.mode\n  const maxW = props.width - 2\n  const conflicts = props.conflicts\n\n  // Calculate the width and height of each hexagon\n  var width = 0\n  var height = lattice.length\n  for (var i = 0; i < height; ++i) {\n    const w = lattice[i].length + (i % 2 === 1 ? 0.5 : 0)\n    width = Math.max(width, w)\n  }\n  // console.log(height)\n  const hexWidth = maxW / (width)\n  const hexHeight = 1.15470053838 * hexWidth * 0.75\n\n  // Not sure if needed anymore\n  document.documentElement.style.setProperty('--hexWidth', hexWidth + 'px')\n\n  // Display all the polygons\n  return (\n    <div className='hexGrid'>\n      <svg width={maxW + 2} height={hexHeight * (height + 0.333333) + 2}>\n        <Hexagons\n          hexWidth={hexWidth}\n          hexHeight={hexHeight}\n          lattice={lattice}\n          setLattice={setLattice}\n          mode={mode}\n        />\n        {mode !== 'grid' ? (\n          <MarblesAndLines\n            hexWidth={hexWidth}\n            hexHeight={hexHeight}\n            lattice={lattice}\n            conflicts={conflicts}\n            setLattice={setLattice}\n            mode={mode}\n          />\n        )\n          : ''}\n      </svg>\n    </div>\n  )\n}\n\nexport default HexGrid\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n// const hexWidth = 80\n\nconst latticeStyle = theme => ({\n  latticeRoot: {\n    width: '476px',\n    margin: theme.spacing(3)\n  },\n  latticeInput: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  detailButton: {\n    marginLeft: '0',\n    marginRight: '0'\n  },\n  instructions: {\n    color: 'rgba(29, 85, 97, 1)',\n    textAlign: 'center'\n  },\n  dialogContent: {\n    ' & > *': {\n      width: 'max-content',\n      display: 'inline-block'\n    }\n  },\n  latticeProgress: {\n    position: 'absolute',\n    bottom: 'calc((307px / 2) - (68px / 2))',\n    left: 'calc(50% - (68px / 2))',\n    color: '#50c8eb'\n  }\n})\n\nexport default latticeStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useState } from 'react'\n// import PropTypes from 'prop-types'\n\nimport latticeSolveRequest from './latticeSolveRequest'\nimport HexGrid from './HexGrid'\n\nimport Button from '../../CustomButtons/Button.js'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../../assets/jss/material-kit-react/components/latticeStyle.js'\nimport './latticeColourer.css'\nimport LatticeVars from './latticeVars'\n\n// const baseLattice = [\n//   [1, 1, 0, 0, 1, 1, 1],\n//   [0, 1, 1, 1, 0, 1],\n//   [1, 1, 1, 1, 1, 1, 1],\n//   [0, 1, 1, 1, 0, 1],\n//   [1, 1, 1, 0, 0, 0, 1],\n//   [1, 1, 0, 0, 0, 1]\n// ]\n\n/**\n * LatticeColourer is meant to give access to a hexagonal\n * lattice-based two-colouring optimization problem.\n *\n * Example Use::\n *\n *  const [APIKey, setAPIKey] = useState('')\n *  const [textLines, setTextLines] = useState([])\n *  return (\n *    <LatticeColourer\n *      id='myLattice'\n *      getAPIKey={() => APIKey}\n *      outputToConsole={(line) => {\n *        setTextLines(textLines.concat(line))\n *      }}\n *      appendToConsole={}\n *    />\n *  )\n *\n * Properties:\n * @prop {string} id - (Required) This will get extended to\n * serve as the id base string for all underlying components.\n * @prop {func()} getAPIKey - (Required) This needs\n * to be a function that can be called to return the current API\n * key.\n * NOTE: If it returns '', this is equivalent to choosing the\n * simulator.\n * @prop {func(string)} outputToConsole - (Required) This function\n * should take a single string (a line of text), and concatenate\n * it to the current console output string array. If the Console\n * is not being used, this can do anything you want with that\n * string, but you should probably output it in some way.\n * @prop {func(string)} appendToConsole - (Required) Same as output,\n * but just appends\n * the given string to the last line of the Console.\n */\nfunction LatticeColourer (props) {\n  // States for Lattice Colouring widget.\n  // These use React Hooks, so rerendering is done\n  // whenever the Set function for a variable is called.\n  const [lattice, setLattice] = useState(getRandomLattice())\n  const [mode, setMode] = useState('grid') // Can be 'grid', 'marble', or 'disabled'\n  const [loading, setLoading] = [props.loading, props.setLoading]\n\n  const useStyles = makeStyles(styles)\n\n  const classes = useStyles()\n\n  const isQuantum = latticeSame(lattice, LatticeVars.quantumLattice[0])\n\n  var conflicts = '?'\n  if (mode !== 'grid') {\n    conflicts = calculateConflicts(lattice)\n    // console.log(conflicts)\n    if (conflicts.length <= LatticeVars.bestLattice[1] && !isQuantum) {\n      LatticeVars.setBest(lattice.map((row) => [...row]), conflicts.length)\n    }\n  }\n\n  const isBest = LatticeVars.bestLattice[1] === conflicts.length\n\n  var modeText\n  if (mode === 'grid') {\n    modeText = 'Lock Grid'\n  } else {\n    modeText = 'Unlock'\n  }\n\n  var instructionText = ''\n  var minText = ''\n  if (mode === 'grid') {\n    instructionText = 'Build a Grid to play on!'\n  } else if (isQuantum) {\n    instructionText = 'The Quantum Solution has ' + conflicts.length + ' conflicts!'\n  } else if (isBest) {\n    instructionText = 'This is your best solution yet with ' + conflicts.length + ' conflicts!'\n  } else if (mode === 'marble') {\n    instructionText = 'Minimize the conflicts: ' + conflicts.length\n  }\n\n  const bestText = 'My Best Solution: ' + LatticeVars.bestLattice[1]\n\n  const qText = 'Quantum Solution: ' + LatticeVars.quantumLattice[1]\n\n  return (\n    <div className={classes.latticeRoot}>\n      <div className={'latticeBox' + (loading ? ' loading' : '')}>\n        <HexGrid\n          lattice={lattice}\n          setLattice={setLattice}\n          conflicts={conflicts}\n          mode={mode}\n          width={476}\n        />\n        {loading && <CircularProgress size={68} className={classes.latticeProgress} />}\n      </div>\n      <div className={classes.instructions}>\n        {instructionText}\n        <br />\n        {minText}\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button\n          className={classes.detailButton}\n          color='geeringupSecondary'\n          size='sm'\n          onClick={() => {\n            if (mode === 'grid') {\n              setMode('marble')\n            } else if (mode === 'marble') {\n              setLattice(lattice.map((row) => row.map((e) => e * e)))\n              LatticeVars.setBest(null, 1000)\n              LatticeVars.setQuantum([], '?')\n              setMode('grid')\n            }\n          }}\n        >\n          {modeText}\n        </Button>\n        <Button\n          className={classes.detailButton}\n          color='geeringupSecondary'\n          size='sm'\n          disabled={false}\n          onClick={() => {\n            if (mode === 'marble') {\n              latticeSolveRequest(\n                lattice,\n                (newLattice) => {\n                  LatticeVars.setQuantum(newLattice, (calculateConflicts(newLattice)).length)\n                  setLattice(newLattice)\n                },\n                props.outputToConsole,\n                props.appendToConsole,\n                props.getAPIKey,\n                setLoading\n              )\n            } else if (mode === 'grid') {\n              setLattice(getRandomLattice())\n            }\n          }}\n        >\n          {mode === 'marble' ? 'Get Quantum Solution' : 'Random Grid'}\n        </Button>\n      </div>\n      <div className={classes.buttonContainer} style={{ display: (mode !== 'grid' ? null : 'none') }}>\n        <Button\n          className={classes.detailButton}\n          color='geeringupSecondary'\n          size='sm'\n          disabled={mode !== 'marble'}\n          onClick={() => {\n            setLattice(LatticeVars.bestLattice[0].map((row) => [...row]))\n          }}\n        >\n          {bestText}\n        </Button>\n        <Button\n          className={classes.detailButton}\n          color='geeringupSecondary'\n          size='sm'\n          disabled={mode !== 'marble' || LatticeVars.quantumLattice[0].length === 0}\n          onClick={() => {\n            setLattice(LatticeVars.quantumLattice[0].map((row) => [...row]))\n          }}\n        >\n          {qText}\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateConflicts (lattice) {\n  var conflicts = []\n  for (var i = 0; i < lattice.length; ++i) {\n    for (var j = 0; j < lattice[i].length; ++j) {\n      if (!lattice[i][j]) continue\n      const neighbours = (i % 2 !== 0) ? [[1, 1], [1, 0], [0, 1]] : [[1, -1], [1, 0], [0, 1]]\n      for (const n of neighbours) {\n        const [ii, jj] = [i + n[0], j + n[1]]\n        // console.log(ii + ' ' + jj)\n        if (ii >= 0 && ii < lattice.length && jj >= 0 && jj < lattice[ii].length) {\n          if (lattice[ii][jj] === lattice[i][j]) {\n            conflicts.push([i, j, ii, jj])\n          }\n        }\n      }\n    }\n  }\n  return conflicts\n}\n\nfunction latticeSame (lattice1, lattice2) {\n  // console.log(lattice1)\n  // console.log(lattice2)\n  if (lattice1.length !== lattice2.length) return false\n  for (var i = 0; i < lattice1.length; ++i) {\n    if (lattice1[i].length !== lattice2[i].length) return false\n    for (var j = 0; j < lattice1[i].length; ++j) {\n      if (lattice1[i][j] !== lattice2[i][j]) return false\n    }\n  }\n  return true\n}\n\nfunction getRandomLattice () {\n  var newLattice = []\n  const size = 6 + Math.floor(Math.random() * 3)\n  for (var i = 0; i < size - 1; ++i) {\n    newLattice[i] = []\n    for (var j = 0; j < size - (i % 2 !== 0); ++j) {\n      newLattice[i][j] = Math.floor(Math.random() * 3)\n      if (newLattice[i][j] > 0) {\n        newLattice[i][j] = 1\n      }\n    }\n  }\n  return newLattice\n}\n\nexport default LatticeColourer\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n// const hexWidth = 80\n\nconst IsingStyle = theme => ({\n  isingRoot: {\n    width: '476px',\n    margin: theme.spacing(3)\n  },\n  isingInput: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  detailButton: {\n    marginLeft: '0',\n    marginRight: '0',\n    marginTop: '0',\n    marginBottom: '0'\n  },\n  instructions: {\n    color: 'rgba(0, 0, 0, 0.87)',\n    textAlign: 'center'\n  },\n  dialogContent: {\n    ' & > *': {\n      width: 'max-content',\n      display: 'inline-block'\n    }\n  },\n  isingProgress: {\n    position: 'absolute',\n    bottom: 'calc((307px / 2) - (68px / 2))',\n    left: 'calc(50% - (68px / 2))',\n    color: '#50c8eb'\n  }\n})\n\nexport default IsingStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n// import PropTypes from 'prop-types'\n\n// import latticeSolveRequest from './latticeSolveRequest'\n// import HexGrid from './HexGrid'\n\nimport Button from '../../CustomButtons/Button.js'\nimport Slider from '@material-ui/core/Slider'\n// import CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\n// import Input from '@material-ui/core/Input'\nimport CustomInput from '../../CustomInput/CustomInput'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../../assets/jss/material-kit-react/components/isingStyle.js'\nimport './IsingModel.css'\n// import IsingVars from './IsingVars'\n\n/**\n * Ising Model is a React component containing a graph\n * model of the energy landscape of a single qubit in\n * the Dwave quantum annealer\n *\n * Example Use::\n *\n *  const [APIKey, setAPIKey] = useState('')\n *  const [textLines, setTextLines] = useState([])\n *  return (\n *    <IsingModel\n *      id='myModel'\n *      getAPIKey={() => APIKey}\n *      outputToConsole={(line) => {\n *        setTextLines(textLines.concat(line))\n *      }}\n *      appendToConsole={}\n *    />\n *  )\n *\n * Properties:\n * @prop {string} id - (Required) This will get extended to\n * serve as the id base string for all underlying components.\n * @prop {func()} getAPIKey - (Required) This needs\n * to be a function that can be called to return the current API\n * key.\n * NOTE: If it returns '', this is equivalent to choosing the\n * simulator.\n * @prop {func(string)} outputToConsole - (Required) This function\n * should take a single string (a line of text), and concatenate\n * it to the current console output string array. If the Console\n * is not being used, this can do anything you want with that\n * string, but you should probably output it in some way.\n * @prop {func(string)} appendToConsole - (Required) Same as output,\n * but just appends\n * the given string to the last line of the Console.\n */\nfunction IsingModel (props) {\n  const [sliderVal, setSliderVal] = React.useState(0)\n\n  const [stateWeight, setStateWeight] = React.useState(Math.random() - 0.5)\n\n  const [HVal, setHVal] = React.useState(Math.round((stateWeight < 0 ? 1 : -1) * (Math.pow(10, Math.abs(stateWeight) * 7) - 1)))\n\n  const [annealTime, setAnnealTime] = React.useState(200)\n\n  const [result, setResult] = React.useState(-1)\n\n  const [simulating, setSimulating] = React.useState(false)\n\n  if (typeof IsingModel.interVal === 'undefined') {\n    IsingModel.interVal = null\n  }\n\n  const useStyles = makeStyles(styles)\n\n  const classes = useStyles()\n\n  const timeSliderVal = sliderVal / 100\n\n  // const upH = Math.log10(Math.abs(HVal) + 1) / 7\n\n  const leftH = (stateWeight > 0 ? stateWeight : 0)\n  const rightH = (stateWeight < 0 ? -stateWeight : 0)\n\n  const runSim = () => {\n    console.log('running')\n    if (IsingModel.timeStep === 100) {\n      clearInterval(IsingModel.interVal)\n      setSimulating(false)\n      doSim(stateWeight, annealTime, setResult)\n      return\n    }\n    IsingModel.timeStep++\n    setSliderVal(IsingModel.timeStep)\n  }\n\n  const startSim = () => {\n    if (!simulating) {\n      setSimulating(true)\n      IsingModel.interVal = setInterval(runSim, 25)\n      IsingModel.timeStep = 0\n      setResult(-1)\n    }\n  }\n\n  return (\n    <div className={classes.isingRoot}>\n      <svg height='315' width='476'>\n        <g // Curve\n          fill='none'\n          strokeLinecap='round'\n          strokeWidth={4}\n          stroke='black'\n        >\n          <IsingModelCurve\n            x={50}\n            y={25}\n            width={376}\n            height={250}\n            leftHeight={leftH}\n            rightHeight={rightH}\n            time={timeSliderVal}\n          />\n        </g>\n        <g // Graph line Group\n          stroke='gray'\n          strokeWidth={4}\n        >\n          <path\n            strokeLinecap='round'\n            d='M25,25 25,275'\n          />\n          <polygon\n            points='20,273 30,273 25,280'\n            fill='gray'\n          />\n        </g>\n        <g // Text Group\n          fill='gray'\n          strokeWidth={1}\n          fontFamily='sans-serif'\n          fontSize='16'\n        >\n          <text x='0' y='12'>\n            High Energy\n          </text>\n          <text x='0' y='300'>\n            Low Energy\n          </text>\n          <text x='400' y='250'>\n            {Math.floor(timeSliderVal * annealTime) + ' μs'}\n          </text>\n        </g>\n        <g // Ket Group\n          opacity={timeSliderVal}\n        >\n          <Ket\n            x={238 - 14 - 32 - timeSliderVal * 62}\n            y={125}\n            size={32}\n            content='0'\n            isSelected={result === 0}\n          />\n\n          <Ket\n            x={238 - 14 + 32 + timeSliderVal * 62}\n            y={125}\n            size={32}\n            content='1'\n            isSelected={result === 1}\n          />\n        </g>\n      </svg>\n      <div>\n        <Grid className={classes.gridContainer} container spacing={2}>\n          <Grid item xs={9}>\n            <div className='newcontain'>\n              <Button\n                disabled={simulating}\n                className={classes.detailButton}\n                color='geeringupSecondary'\n                size='sm'\n                onClick={() => {\n                  startSim()\n                }}\n              >\n                Simulate\n              </Button>\n              <div\n                className='resultText'\n              >\n                Latest result: {result === -1 ? '|?\\u232a' : (result ? '|1\\u232a' : '|0\\u232a')}\n              </div>\n            </div>\n            <div className='contain'>\n              <div className='timeText'>\n                Time:\n              </div>\n              <div className='sliderContainer'>\n                <Slider\n                  disabled={simulating}\n                  defaultValue={0}\n                  value={sliderVal}\n                  onChange={(e, val) => {\n                    setSliderVal(val)\n                  }}\n                />\n              </div>\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <CustomInput\n              labelText='Anneal Time (μs)'\n              id='t_input'\n              formControlProps={{\n                fullWidth: true\n              }}\n              inputProps={{\n                disabled: simulating,\n                defaultValue: 200,\n                type: 'number',\n                inputProps: {\n                  min: 20,\n                  max: 200000\n                },\n                onChange: (e) => {\n                  if (e.target.value < 0) e.target.value *= -1\n                  if (e.target.value > 200000) e.target.value = 200000\n                  if (e.target.value !== '' && e.target.value >= 20 && e.target.value <= 200000) {\n                    setAnnealTime(e.target.value)\n                  }\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}> {/* H-value input */}\n            <div className='moveUp'>\n              <CustomInput\n                labelText='H-value'\n                id='h_input'\n                formControlProps={{\n                  fullWidth: true\n                }}\n                inputProps={{\n                  value: HVal,\n                  disabled: simulating,\n                  type: 'number',\n                  inputProps: {\n                    min: -1e7 + 1,\n                    max: 1e7 - 1\n                  },\n                  onChange: (e) => {\n                    if (e.target.value.trim !== '') {\n                      e.target.value = Math.max(-1e7 + 1, Math.min(1e7 - 1, e.target.value))\n                      var upH = Math.log10(Math.abs(e.target.value) + 1) / 7\n                      upH *= (e.target.value < 0 ? 1 : -1)\n                      setStateWeight(upH)\n                    } else {\n                      setStateWeight(0)\n                    }\n                    if (e.target.value === 0) {\n                      e.target.value = null\n                    }\n                    setHVal(e.target.value)\n                  }\n                }}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={6}>\n            <div className='contain'>\n              <div className='inside'>\n                |0&#9002;\n              </div>\n              <div className='inside'>\n                Weight\n              </div>\n              <div className='inside'>\n                |1&#9002;\n              </div>\n            </div>\n            <Slider\n              max={1}\n              min={-1}\n              step={0.02}\n              disabled={simulating}\n              defaultValue={0}\n              value={stateWeight}\n              onChange={(e, val) => {\n                setStateWeight(val)\n                var newHVal = Math.pow(10, Math.abs(val) * 7) - 1\n                newHVal *= (val < 0 ? 1 : -1)\n                setHVal(Math.round(newHVal))\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nfunction doSim (weight, time, setAns) {\n  var r = Math.random() // between 0 and 1\n  console.log('before: ' + r)\n  r += (weight) * (Math.log2(time) / Math.log2(200000))\n  console.log('after: ' + r)\n  if (r < 0.5) {\n    setAns(0)\n  } else {\n    setAns(1)\n  }\n}\n\nfunction IsingModelCurve (props) {\n  const { x, y, height, width, leftHeight, rightHeight, time } = props\n\n  const ly = y + height / 2 + (1 - leftHeight) * height / 2\n  const ry = y + height / 2 + (1 - rightHeight) * height / 2\n\n  var b = time\n\n  var a = 1 - time\n\n  const w2 = width / 2\n  const w4 = width / 4\n  const w7 = width / 7\n  const w8 = width / 8\n  const w24 = width / 24\n\n  const h2 = height / 2\n  const h4 = height / 4\n  const h34 = 3 * h4\n\n  const bly = b * ly\n  const bry = b * ry\n\n  const midH = y + h2 + a * h2\n\n  var d = `M${x},${y}`\n\n  d += ` S${x + w7},${bly + a * (y + h34 - w8)} ${x + w4},${bly + a * (y + h34)}`\n\n  d += ` S${x + 3 * w8 + a * w24},${midH} ${x + w2},${midH}`\n\n  d += ` S${x + w2 + w7},${bry + a * (y + h34 + w8)} ${x + 3 * w4},${bry + a * (y + h34)}`\n\n  d += ` S${x + width},${y} ${x + width},${y}`\n\n  return (\n    <>\n      <path\n        d={d}\n      />\n    </>\n  )\n}\n\nfunction Ket (props) {\n  const { x, y, size, content, isSelected } = props\n  const s = size\n  const s2 = size / 2\n  const s3 = size / 3\n  const s4 = size / 4\n  const s8 = size / 8\n  const s16 = size / 16\n  const p1 = `M ${x},${y} l 0,${-s}`\n  const p2 = `M ${x + s - s8},${y} l ${s3},${-s2} l ${-s3},${-s2}`\n  const p3 = `M ${x + s2},${y - s16} l 0,${-s2 - s4} l ${-s8},${s8}`\n  return (\n    <>\n      {/* {isSelected ? (\n        <g\n          strokeWidth={s8 + s16}\n          fill='none'\n          stroke='black'\n          strokeLinecap='square'\n        >\n          <path d={p1} />\n          <path d={p2} />\n          {content === '0' ? <ellipse cx={x + s2} cy={y - s2} rx={s4} ry={s2 - s16} /> : null}\n          {content === '1' ? <path d={p3} /> : null}\n        </g>)\n        : null} */}\n      <g\n        strokeWidth={s8}\n        fill='none'\n        stroke={isSelected ? 'black' : 'lightgray'}\n        strokeLinecap='square'\n      >\n        <path d={p1} />\n        <path d={p2} />\n        {content === '0' ? <ellipse cx={x + s2} cy={y - s2} rx={s4} ry={s2 - s16} /> : null}\n        {content === '1' ? <path d={p3} /> : null}\n      </g>\n    </>\n  )\n}\n\nexport default IsingModel\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst Keys = {\n  CITIES: 'cities',\n  VANCOUVER: 'vancouver',\n  FLOWERS: 'flowers'\n}\n\nexport default Keys\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nexport default class GraphComponents {\n  static getCitiesEdgeList () {\n    return [\n      [0, 1, 2230],\n      [0, 2, 1631],\n      [0, 3, 1566],\n      [0, 4, 1346],\n      [0, 5, 1352],\n      [0, 6, 1204],\n      [0, 7, 2895],\n      [0, 8, 2513],\n      [0, 9, 2340],\n      [0, 10, 2344],\n      [0, 11, 2063],\n      [0, 12, 3423],\n      [1, 2, 845],\n      [1, 3, 707],\n      [1, 4, 1001],\n      [1, 5, 947],\n      [1, 6, 1484],\n      [1, 7, 886],\n      [1, 8, 5085],\n      [1, 9, 2972],\n      [1, 10, 4151],\n      [1, 11, 3432],\n      [1, 12, 495],\n      [2, 3, 627],\n      [2, 4, 773],\n      [2, 5, 424],\n      [2, 6, 644],\n      [2, 7, 1220],\n      [2, 8, 4720],\n      [2, 9, 2608],\n      [2, 10, 3787],\n      [2, 11, 3068],\n      [2, 12, 1585],\n      [3, 4, 302],\n      [3, 5, 341],\n      [3, 6, 1027],\n      [3, 7, 393],\n      [3, 8, 3991],\n      [3, 9, 1843],\n      [3, 10, 3023],\n      [3, 11, 2303],\n      [3, 12, 899],\n      [4, 5, 368],\n      [4, 6, 916],\n      [4, 7, 865],\n      [4, 8, 976],\n      [4, 9, 1348],\n      [4, 10, 2567],\n      [4, 11, 1847],\n      [4, 12, 3540],\n      [5, 6, 702],\n      [5, 7, 916],\n      [5, 8, 4048],\n      [5, 9, 1954],\n      [5, 10, 3133],\n      [5, 11, 2413],\n      [5, 12, 1444],\n      [6, 7, 2021],\n      [6, 8, 4451],\n      [6, 9, 2620],\n      [6, 10, 3772],\n      [6, 11, 3052],\n      [6, 12, 2549],\n      [7, 8, 4172],\n      [7, 9, 2030],\n      [7, 10, 3238],\n      [7, 11, 2519],\n      [7, 12, 542],\n      [8, 9, 2319],\n      [8, 10, 973],\n      [8, 11, 1743],\n      [8, 12, 4557],\n      [9, 10, 1327],\n      [9, 11, 572],\n      [9, 12, 2269],\n      [10, 11, 758],\n      [10, 12, 3527],\n      [11, 12, 2850],\n      /**\n       * NOTE on the below edge:\n       * RoutingMachine.js > fetchPath() will create markers\n       * based on sourceNodes so we must provide every node we want\n       * a marker for as the source node in an edge (i.e. the first\n       * node in the array).\n       *\n       * Each array follows the pattern: [sourceNode, destNode, edgeWeight]\n       *\n       * TSPutils.js > isEdgeSelected() will make sure an edge which\n       * has the same source and destination nodes will not be pushed\n       * into the selected-edges edge list to solve\n       */\n      [12, 12, 0]\n    ]\n  }\n\n  static getCitiesLatLong () {\n    return {\n      Albuquerque: [35.106766, -106.629181],\n      Boston: [42.361145, -71.057083],\n      'Charlotte, NC': [35.227085, -80.843124],\n      Detroit: [42.331429, -83.045753],\n      'Evanston, IL': [42.045597, -87.688568],\n      'Frankfort, Kentucky': [37.839333, -84.270020],\n      'Gulfport, Mississippi': [30.367420, -89.092819],\n      'Toronto, ON, CA': [43.653225, -79.383186],\n      'Vancouver, BC, CA': [49.263569, -123.138573],\n      'Winnipeg, MB, CA': [49.900501, -97.139313],\n      'Calgary, AB, CA': [51.047310, -114.057968],\n      'Regina, SK, CA': [50.451191, -104.616623],\n      'Montréal, QC, CA': [45.508888, -73.561668]\n    }\n  }\n\n  static getCitiesIdMapping () {\n    return {\n      0: 'Albuquerque',\n      1: 'Boston',\n      2: 'Charlotte, NC',\n      3: 'Detroit',\n      4: 'Evanston, IL',\n      5: 'Frankfort, Kentucky',\n      6: 'Gulfport, Mississippi',\n      7: 'Toronto, ON, CA',\n      8: 'Vancouver, BC, CA',\n      9: 'Winnipeg, MB, CA',\n      10: 'Calgary, AB, CA',\n      11: 'Regina, SK, CA',\n      12: 'Montréal, QC, CA'\n    }\n  }\n\n  static getCitiesNameMapping () {\n    return {\n      Albuquerque: 0,\n      Boston: 1,\n      'Charlotte, NC': 2,\n      Detroit: 3,\n      'Evanston, IL': 4,\n      'Frankfort, Kentucky': 5,\n      'Gulfport, Mississippi': 6,\n      'Toronto, ON, CA': 7,\n      'Vancouver, BC, CA': 8,\n      'Winnipeg, MB, CA': 9,\n      'Calgary, AB, CA': 10,\n      'Regina, SK, CA': 11,\n      'Montréal, QC, CA': 12\n    }\n  }\n\n  static getVanEdgeList () {\n    return [\n      [0, 1, 16.5],\n      [0, 2, 7.3],\n      [0, 3, 7.3],\n      [0, 4, 7.9],\n      [0, 5, 11.3],\n      [0, 6, 24.7],\n      [0, 7, 14.9],\n      [0, 8, 9.8],\n      [0, 9, 11.1],\n      [0, 10, 10.5],\n      [0, 11, 21.3],\n      [0, 12, 21.5],\n      [1, 2, 9.2],\n      [1, 3, 9.1],\n      [1, 4, 10.6],\n      [1, 5, 7.3],\n      [1, 6, 8],\n      [1, 7, 4.4],\n      [1, 8, 17.5],\n      [1, 9, 5.2],\n      [1, 10, 8.8],\n      [1, 11, 5.6],\n      [1, 12, 8.4],\n      [2, 3, 1],\n      [2, 4, 1.2],\n      [2, 5, 9.4],\n      [2, 6, 17.1],\n      [2, 7, 10.1],\n      [2, 8, 6.1],\n      [2, 9, 3.8],\n      [2, 10, 6.9],\n      [2, 11, 14.7],\n      [2, 12, 17.3],\n      [3, 4, 1.9],\n      [3, 5, 7.2],\n      [3, 6, 19.2],\n      [3, 7, 8.8],\n      [3, 8, 4.9],\n      [3, 9, 3.6],\n      [3, 10, 6.1],\n      [3, 11, 14.2],\n      [3, 12, 15.9],\n      [4, 5, 8.9],\n      [4, 6, 20.8],\n      [4, 7, 11.7],\n      [4, 8, 7.7],\n      [4, 9, 5.1],\n      [4, 10, 7.7],\n      [4, 11, 19.4],\n      [4, 12, 21.8],\n      [5, 6, 13.3],\n      [5, 7, 5.6],\n      [5, 8, 8.3],\n      [5, 9, 5],\n      [5, 10, 1.8],\n      [5, 11, 11.2],\n      [5, 12, 10.8],\n      [6, 7, 8.9],\n      [6, 8, 29.9],\n      [6, 9, 16.2],\n      [6, 10, 15.7],\n      [6, 11, 4.3],\n      [6, 12, 4],\n      [7, 8, 15.5],\n      [7, 9, 6],\n      [7, 10, 7.2],\n      [7, 11, 6.4],\n      [7, 12, 7.3],\n      [8, 9, 5.9],\n      [8, 10, 4.4],\n      [8, 11, 16.1],\n      [8, 12, 16.1],\n      [9, 10, 4.1],\n      [9, 11, 12.9],\n      [9, 12, 13],\n      [10, 11, 13.4],\n      [10, 12, 13.4],\n      [11, 12, 4.4],\n      /**\n       * NOTE on the below edge:\n       * RoutingMachine.js > fetchPath() will create markers\n       * based on sourceNodes so we must provide every node we want\n       * a marker for as the source node in an edge (i.e. the first\n       * node in the array).\n       *\n       * Each array follows the pattern: [sourceNode, destNode, edgeWeight]\n       *\n       * TSPutils.js > isEdgeSelected() will make sure an edge which\n       * has the same source and destination nodes will not be pushed\n       * into the selected-edges edge list to solve\n       */\n      [12, 12, 0]\n    ]\n  }\n\n  static getVanLatLong () {\n    return {\n      'UBC campus': [49.2666656, -123.249999],\n      'SFU campus': [49.2768, -122.9180],\n      'Canada Place': [49.288644, -123.110708],\n      'Rogers Arena': [49.2733, -123.1053],\n      'Stanley park': [49.299999, -123.139999],\n      'Metropolise at Metrotown': [49.2274, -122.9999],\n      'Lafarge lake': [49.2863, -122.7890],\n      'Burnaby lake': [49.2420, -122.9441],\n      'Queen Elizabeth park': [49.2418, -123.1126],\n      'Playland at PNE': [49.282743, -123.036773],\n      'Burnaby Central Park': [49.2277, -123.0180],\n      'Mundy Park': [49.2568, -122.8255],\n      'Colony Farm Park': [49.229848, -122.807044]\n    }\n  }\n\n  static getVanIdMapping () {\n    return {\n      0: 'UBC campus',\n      1: 'SFU campus',\n      2: 'Canada Place',\n      3: 'Rogers Arena',\n      4: 'Stanley park',\n      5: 'Metropolise at Metrotown',\n      6: 'Lafarge lake',\n      7: 'Burnaby lake',\n      8: 'Queen Elizabeth park',\n      9: 'Playland at PNE',\n      10: 'Burnaby Central Park',\n      11: 'Mundy Park',\n      12: 'Colony Farm Park'\n    }\n  }\n\n  static getVanNameMapping () {\n    return {\n      'UBC campus': 0,\n      'SFU campus': 1,\n      'Canada Place': 2,\n      'Rogers Arena': 3,\n      'Stanley park': 4,\n      'Metropolise at Metrotown': 5,\n      'Lafarge lake': 6,\n      'Burnaby lake': 7,\n      'Queen Elizabeth park': 8,\n      'Playland at PNE': 9,\n      'Burnaby Central Park': 10,\n      'Mundy Park': 11,\n      'Colony Farm Park': 12\n    }\n  }\n\n  static getFlowersEdgeList () {\n    return [\n      [0, 1, 2.23606797749979],\n      [0, 2, 6.4031242374328485],\n      [0, 3, 13.601470508735444],\n      [0, 4, 9.055385138137417],\n      [0, 5, 4.123105625617661],\n      [0, 6, 4.743416490252569],\n      [0, 7, 10.259142264341596],\n      [0, 8, 8.558621384311845],\n      [0, 9, 10.594810050208546],\n      [0, 10, 10.124228365658293],\n      [0, 11, 2.0],\n      [0, 12, 6.576473218982953],\n      [1, 2, 4.47213595499958],\n      [1, 3, 11.661903789690601],\n      [1, 4, 8.06225774829855],\n      [1, 5, 3.1622776601683795],\n      [1, 6, 2.5495097567963922],\n      [1, 7, 8.139410298049853],\n      [1, 8, 8.077747210701755],\n      [1, 9, 9.12414379544733],\n      [1, 10, 7.905694150420948],\n      [1, 11, 2.23606797749979],\n      [1, 12, 5.5901699437494745],\n      [2, 3, 7.211102550927978],\n      [2, 4, 5.0],\n      [2, 5, 3.1622776601683795],\n      [2, 6, 3.5355339059327378],\n      [2, 7, 4.031128874149275],\n      [2, 8, 6.103277807866851],\n      [2, 9, 5.024937810560445],\n      [2, 10, 4.527692569068709],\n      [2, 11, 5.0],\n      [2, 12, 3.3541019662496847],\n      [3, 4, 7.280109889280518],\n      [3, 5, 9.899494936611665],\n      [3, 6, 10.124228365658293],\n      [3, 7, 4.031128874149275],\n      [3, 8, 9.340770846134703],\n      [3, 9, 4.6097722286464435],\n      [3, 10, 5.522680508593631],\n      [3, 11, 12.041594578792296],\n      [3, 12, 8.32165848854662],\n      [4, 5, 5.0],\n      [4, 6, 8.276472678623424],\n      [4, 7, 6.800735254367722],\n      [4, 8, 2.0615528128088303],\n      [4, 9, 2.692582403567252],\n      [4, 10, 8.276472678623424],\n      [4, 11, 7.0710678118654755],\n      [4, 12, 2.5],\n      [5, 6, 4.301162633521313],\n      [5, 7, 7.158910531638177],\n      [5, 8, 4.924428900898052],\n      [5, 9, 6.5],\n      [5, 10, 7.648529270389178],\n      [5, 11, 2.23606797749979],\n      [5, 12, 2.5],\n      [6, 7, 6.264982043070834],\n      [6, 8, 8.902246907382429],\n      [6, 9, 8.558621384311845],\n      [6, 10, 5.656854249492381],\n      [6, 11, 4.527692569068709],\n      [6, 12, 6.103277807866851],\n      [7, 8, 8.631338250816034],\n      [7, 9, 5.0],\n      [7, 10, 1.8027756377319946],\n      [7, 11, 9.013878188659973],\n      [7, 12, 6.519202405202649],\n      [8, 9, 4.743416490252569],\n      [8, 10, 9.962429422585638],\n      [8, 11, 6.576473218982953],\n      [8, 12, 2.8284271247461903],\n      [9, 10, 6.726812023536855],\n      [9, 11, 8.73212459828649],\n      [9, 12, 4.301162633521313],\n      [10, 11, 9.192388155425117],\n      [10, 12, 7.566372975210778],\n      [11, 12, 4.6097722286464435]\n    ]\n  }\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport Keys from './Keys.js'\nimport GraphComponents from './GraphComponents.js'\n\nconst Graph = {\n  [Keys.CITIES]: {\n    edgeList: GraphComponents.getCitiesEdgeList(),\n    latLong: GraphComponents.getCitiesLatLong(),\n    idMapping: GraphComponents.getCitiesIdMapping(),\n    nameMapping: GraphComponents.getCitiesNameMapping()\n  },\n  [Keys.VANCOUVER]: {\n    edgeList: GraphComponents.getVanEdgeList(),\n    latLong: GraphComponents.getVanLatLong(),\n    idMapping: GraphComponents.getVanIdMapping(),\n    nameMapping: GraphComponents.getVanNameMapping()\n  },\n  [Keys.FLOWERS]: {\n    edgeList: GraphComponents.getFlowersEdgeList()\n  }\n}\n\nexport default Graph\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport makeLongRequest from '../LongRequest'\n\nimport TSPutils from './TSPutils.js'\nimport TSPstate from './TSPstate.js'\n\nimport Graph from './Graph.js'\n\n/**\n * This function does the XML HTTP request for the TSP Widget. It calls the\n * backend, and once the data is returned, postSolve is called. This handles\n * request creation.\n */\nfunction tspSolveRequest (graphParams, setters, consoleFns) {\n  const selectedEdges = graphParams.selectedEdges\n  const key = graphParams.key\n\n  const tspState = TSPstate.getInstance()\n\n  // Set the parameters to send to the server\n  const params = {\n    typeOfProblem: 'tspSolving',\n    selectedEdges: selectedEdges\n  }\n\n  // Make the request for a solve to be queued up\n  // makeLongRequest is a powerful function, please\n  // use it wisely\n  makeLongRequest(\n    params,\n    (xhr) => {\n      consoleFns.outputToConsole('The graph has been queued for solving!')\n      tspState.setSolvingState(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      if (xhr.response.jobStatus === tspState.getSolvingState()) {\n        consoleFns.appendToConsole('.')\n      } else if (xhr.response.jobStatus === 'queued') {\n        consoleFns.outputToConsole('In Queue')\n      } else if (xhr.response.jobStatus === 'started') {\n        consoleFns.outputToConsole('Quantum Computing in Progress!')\n        consoleFns.outputToConsole('Solving')\n      } else {\n        consoleFns.outputToConsole(xhr.response.jobStatus)\n      }\n      tspState.setSolvingState(xhr.response.jobStatus)\n      console.log(xhr.response.jobStatus)\n    },\n    (xhr) => {\n      const tspSolveRequestObjects = {\n        setters: setters,\n        consoleFns: consoleFns\n      }\n      postSolve(xhr, key, tspSolveRequestObjects)\n    },\n    (xhr) => {\n      consoleFns.outputToConsole('Something went wrong')\n      console.log(xhr)\n      consoleFns.outputToConsole(JSON.stringify(xhr))\n      setters.setLoading(false)\n      tspState.setIsLoading(false)\n    },\n    consoleFns.outputToConsole\n  )\n}\n\n/**\n * postSolve is called after the call to the server is completed.\n * It will handle any (most) errors, set the grid to a solved state if solved,\n * and report back to the user through the console.\n * @param {object} xhr\n * @param {string} key one of the keys from Keys.js to identify the type of graph\n * (i.e. 'cities')\n * @param {object} functions contains functions such as setters and console functions\n */\nfunction postSolve (xhr, key, functions) {\n  const tspState = TSPstate.getInstance()\n  const responseRoute = xhr.response.route\n\n  const setters = functions.setters\n  const consoleFns = functions.consoleFns\n\n  if (xhr.status === 200) {\n    if (responseRoute.length === 0 && xhr.response.output_message) {\n      consoleFns.outputToConsole(xhr.response.output_message)\n    } else {\n      const waypoints = TSPutils.getWaypointsSinglePath(Graph[key], responseRoute)\n\n      const graphLines = tspState.getLines(key)\n      Object.keys(graphLines).forEach(index => {\n        graphLines[index].fire('tspSolvedEvent', waypoints)\n      })\n\n      consoleFns.outputToConsole('The Travelling Salesperson can travel in the following order:')\n\n      const idMapping = Graph[key].idMapping\n      const length = responseRoute.length\n\n      const firstNode = responseRoute[0]\n      const firstNodeName = idMapping[firstNode]\n      consoleFns.outputToConsole(`(We arbitrarily pick ${firstNodeName} as the starting node.)`)\n\n      for (let i = 0; i < length + 1; i++) {\n        const currentRoute = responseRoute[i % length]\n        let solutionString = `${i + 1}. ${idMapping[currentRoute]}`\n        if (i < length) {\n          solutionString += ' ->'\n        }\n        consoleFns.outputToConsole(solutionString)\n      }\n    }\n\n    setters.setIsPathSolved(true)\n    tspState.setIsPathSolved(key, true)\n  } else if (xhr.status === 400) {\n    consoleFns.outputToConsole(xhr.response.error)\n  } else {\n    consoleFns.outputToConsole(xhr.status, xhr.statusText)\n  }\n  setters.setLoading(false)\n  tspState.setIsLoading(false)\n}\n\nexport default tspSolveRequest\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport Keys from './Keys.js'\nimport Graph from './Graph.js'\nimport L from 'leaflet'\nimport TSPstate from './TSPstate.js'\nimport tspSolveRequest from './tspSolveRequest.js'\n\nexport default class TSPutils {\n  static onCitiesButtonClick (tspSetters) {\n    tspSetters.setKey(Keys.CITIES)\n    tspSetters.setWaypoints(TSPutils.getCitiesWaypoints())\n\n    TSPutils.loadCitiesGraph(tspSetters.setCurrentGraph)\n    TSPutils.updatePosForCities(tspSetters.setPosition)\n  }\n\n  static onVanButtonClick (tspSetters) {\n    tspSetters.setKey(Keys.VANCOUVER)\n    tspSetters.setWaypoints(TSPutils.getVancouverWaypoints())\n\n    TSPutils.loadVanCityGraph(tspSetters.setCurrentGraph)\n    TSPutils.updatePosForVancouver(tspSetters.setPosition)\n  }\n\n  static onFlowersButtonClick () {\n    // TODO\n  }\n\n  static getVancouverDefaultState () {\n    return {\n      lat: 49.246292,\n      lng: -122.999000,\n      zoom: 10\n    }\n  }\n\n  static getCitiesDefaultState () {\n    return {\n      lat: 44.5260,\n      lng: -105.2551,\n      zoom: 3\n    }\n  }\n\n  static updatePosForCities (setPosition) {\n    const citiesState = TSPutils.getCitiesDefaultState()\n    const tspState = TSPstate.getInstance()\n\n    tspState.updateCitiesState(citiesState)\n    setPosition([citiesState.lat, citiesState.lng])\n  }\n\n  static updatePosForVancouver (setPosition) {\n    const vancouverState = TSPutils.getVancouverDefaultState()\n    const tspState = TSPstate.getInstance()\n\n    tspState.updateVancouverState(vancouverState)\n    setPosition([vancouverState.lat, vancouverState.lng])\n  }\n\n  static loadCitiesGraph (setCurrentGraph) {\n    setCurrentGraph(Graph[Keys.CITIES])\n  }\n\n  static loadVanCityGraph (setCurrentGraph) {\n    setCurrentGraph(Graph[Keys.VANCOUVER])\n  }\n\n  static loadFlowersGraph (setCurrentGraph) {\n    // TODO\n  }\n\n  static getCitiesWaypoints () {\n    return TSPutils.getGraphWaypoints(Graph[Keys.CITIES])\n  }\n\n  static getVancouverWaypoints () {\n    return TSPutils.getGraphWaypoints(Graph[Keys.VANCOUVER])\n  }\n\n  /**\n   *\n   * @param {object} graph from Graph.js\n   * @returns {object} an array of objects containing two key-value pairs\n   * 1. waypoint: an array of two L.latLng objects representing\n   * the source and destination waypoints respectively\n   * 2. names: an array of two strings corresponding to the source and destination\n   * waypoints respectively\n   */\n  static getGraphWaypoints (graph) {\n    const edgeList = graph.edgeList\n    const latLong = graph.latLong\n    const idMapping = graph.idMapping // TODO: Currently the Flower graph does not have these\n\n    const waypoints = []\n    for (let i = 0; i < edgeList.length; i++) {\n      /**\n       * Example of an Edge in the edgeList:\n       * [0, 1, 2230]\n       *\n       * Each array follows the pattern: [sourceId, destId, edgeWeight]\n       */\n      const sourceId = edgeList[i][0]\n      const destId = edgeList[i][1]\n\n      const sourceName = idMapping[sourceId]\n      const destName = idMapping[destId]\n\n      /**\n       * LatLongs here refer to an array of numbers\n       * i.e. [49.2666656, -123.249999]\n       */\n      const sourceLatLong = latLong[sourceName]\n      const destLatLong = latLong[destName]\n\n      const waypoint = TSPutils.getWaypointsfromCoords(sourceLatLong, destLatLong)\n      const names = [sourceName, destName]\n\n      const waypointData = {\n        waypoint: waypoint,\n        names: names\n      }\n\n      waypoints.push(waypointData)\n    }\n\n    return waypoints\n  }\n\n  /**\n   *\n   * @param {object} sourceLatLong an array of numbers\n   * representing a latitude and longitude respectively\n   * @param {object} destLatLong an array of numbers\n   * representing a latitude and longitude respectively\n   * @returns {object} an array of two L.latLng objects representing\n   * the source and destination waypoints respectively\n   */\n  static getWaypointsfromCoords (sourceLatLong, destLatLong) {\n    const sourceLat = sourceLatLong[0]\n    const sourceLong = sourceLatLong[1]\n    const destLat = destLatLong[0]\n    const destLong = destLatLong[1]\n\n    const sourceWaypoint = L.latLng(sourceLat, sourceLong)\n    const destWaypoint = L.latLng(destLat, destLong)\n\n    return [sourceWaypoint, destWaypoint]\n  }\n\n  /**\n   *\n   * @param {object} graph from Graph.js\n   * @param {object} nodes an array of all source nodes\n   * @returns {object} an array of objects containing two key-value pairs\n   * 1. waypoint: an array of two L.latLng objects representing\n   * the source and destination waypoints respectively\n   * 2. names: an array of two strings corresponding to the source and destination\n   * waypoints respectively\n   */\n  static getWaypointsSinglePath (graph, nodes) {\n    const latLong = graph.latLong\n    const idMapping = graph.idMapping // TODO: Currently the Flower graph does not have these\n\n    const waypoints = []\n    for (let i = 0; i < nodes.length; i++) {\n      const sourceId = nodes[i]\n      const destId = nodes[(i + 1) % nodes.length]\n\n      const sourceName = idMapping[sourceId]\n      const destName = idMapping[destId]\n\n      const sourceLatLng = latLong[sourceName]\n      const destLatLng = latLong[destName]\n\n      const waypoint = TSPutils.getWaypointsfromCoords(sourceLatLng, destLatLng)\n      const names = [sourceName, destName]\n\n      const waypointData = {\n        waypoint: waypoint,\n        names: names\n      }\n\n      waypoints.push(waypointData)\n    }\n\n    return waypoints\n  }\n\n  static handleClickSolve (graphParams, setters, consoleFns) {\n    const key = graphParams.key\n    const currentGraph = graphParams.currentGraph\n\n    const selectedEdges = TSPutils.getEdgesToSolve(key, currentGraph)\n\n    TSPutils.outputSendingToSolveToConsole(key, currentGraph, consoleFns.outputToConsole)\n\n    const tspSolveRequestGraphParams = {\n      selectedEdges: selectedEdges,\n      key: key\n    }\n    tspSolveRequest(tspSolveRequestGraphParams, setters, consoleFns)\n  }\n\n  static getEdgesToSolve (graphKey, currentGraph) {\n    let edgesToSolve = TSPutils.getSelectedEdges(graphKey, currentGraph)\n    if (edgesToSolve.length === 0) {\n      edgesToSolve = TSPutils.getAllEdges(currentGraph)\n    }\n\n    return edgesToSolve\n  }\n\n  static getSelectedEdges (graphKey, currentGraph) {\n    const selectedEdges = []\n    currentGraph.edgeList.forEach(edge => {\n      if (TSPutils.isEdgeSelected(graphKey, edge)) {\n        selectedEdges.push(edge)\n      }\n    })\n\n    return selectedEdges\n  }\n\n  static getAllEdges (currentGraph) {\n    const allEdges = []\n    currentGraph.edgeList.forEach(edge => {\n      if (!TSPutils.bothNodesInEdgeAreTheSame(edge)) {\n        allEdges.push(edge)\n      }\n    })\n\n    return allEdges\n  }\n\n  static isEdgeSelected (graphKey, edge) {\n    return !TSPutils.bothNodesInEdgeAreTheSame(edge) &&\n    TSPutils.isValInSelectedNodes(graphKey, edge[0]) &&\n    TSPutils.isValInSelectedNodes(graphKey, edge[1])\n  }\n\n  static bothNodesInEdgeAreTheSame (edge) {\n    return edge[0] === edge[1]\n  }\n\n  static isValInSelectedNodes (graphKey, val) {\n    const tspState = TSPstate.getInstance()\n    return tspState.getSelectedNodeIds(graphKey).has(val)\n  }\n\n  static outputSendingToSolveToConsole (graphKey, currentGraph, outputToConsole) {\n    const tspState = TSPstate.getInstance()\n    const selectedNodes = tspState.getSelectedNodeIds(graphKey)\n\n    outputToConsole('Finding the shortest path between the following nodes:')\n\n    if (selectedNodes.size === 0) {\n      const names = Object.keys(currentGraph.nameMapping)\n      TSPutils.outputNamesToConsole(names, outputToConsole)\n    } else {\n      const selectedNodesArray = Array.from(selectedNodes)\n      TSPutils.outputSelectedNodesToConsole(selectedNodesArray, outputToConsole, currentGraph)\n    }\n  }\n\n  static outputNamesToConsole (names, outputToConsole) {\n    for (let i = 0; i < names.length; i++) {\n      outputToConsole(`${i + 1}. ${names[i]}`)\n    }\n  }\n\n  static outputSelectedNodesToConsole (selectedNodesArray, outputToConsole, currentGraph) {\n    const idMapping = currentGraph.idMapping\n    for (let i = 0; i < selectedNodesArray.length; i++) {\n      outputToConsole(`${i + 1}. ${idMapping[selectedNodesArray[i]]}`)\n    }\n  }\n\n  static onMarkerClick (graphKey, nodeId, consoleParams) {\n    const tspState = TSPstate.getInstance()\n    if (TSPutils.isMarkerDeselect(graphKey, nodeId)) {\n      consoleParams.outputToConsole(`- Deselecting: ${consoleParams.nodeName}`)\n      tspState.getSelectedNodeIds(graphKey).delete(nodeId)\n    } else {\n      consoleParams.outputToConsole(`Selecting: ${consoleParams.nodeName}`)\n      tspState.getSelectedNodeIds(graphKey).add(nodeId)\n    }\n  }\n\n  static isMarkerDeselect (graphKey, nodeId) {\n    const tspState = TSPstate.getInstance()\n    return tspState.getSelectedNodeIds(graphKey).has(nodeId)\n  }\n\n  static isMainGraph (key) {\n    return TSPutils.isCitiesMainGraph(key) || TSPutils.isVancouverMainGraph(key)\n  }\n\n  static isCitiesMainGraph (key) {\n    const tspState = TSPstate.getInstance()\n    return TSPutils.isCitiesGraph(key) && !tspState.getFullScreen()\n  }\n\n  static isVancouverMainGraph (key) {\n    const tspState = TSPstate.getInstance()\n    return TSPutils.isVancouverGraph(key) && !tspState.getFullScreen()\n  }\n\n  static isCitiesGraph (key) {\n    return key === Keys.CITIES\n  }\n\n  static isVancouverGraph (key) {\n    return key === Keys.VANCOUVER\n  }\n\n  static isFlowersGraph (key) {\n    return key === Keys.FLOWERS\n  }\n\n  static handleClickOpen (scrollType, setOpen, setScroll) {\n    setOpen(true)\n    setScroll(scrollType)\n  }\n\n  static handleClose (setOpen, setLoading) {\n    const tspState = TSPstate.getInstance()\n\n    setOpen(false)\n    setLoading(false)\n    tspState.setIsLoading(false)\n  }\n\n  static getGeeringupPrimaryColor () {\n    return '#50C8EB'\n  }\n\n  static getGeeringupSecondaryColor () {\n    return '#D96262'\n  }\n\n  /**\n   *\n   * @param {string} pane specifies the map pane; refer to\n   * https://leafletjs.com/reference-1.6.0.html#map-pane for more\n   * information\n   * @param {string} color specifies the color of the line\n   * @returns {object} returns the styling information for an L.Routing.line;\n   * refer to https://www.liedman.net/leaflet-routing-machine/api/#l-routing-line\n   * for more information\n   */\n  static getRoutingLineStyles (pane, color) {\n    return [\n      { pane: pane, color: 'black', opacity: 0.15, weight: 9 },\n      { pane: pane, color: 'white', opacity: 0.8, weight: 6 },\n      { pane: pane, color: color, opacity: 1, weight: 2 }\n    ]\n  }\n\n  static getZoom (key) {\n    const tspState = TSPstate.getInstance()\n    return tspState.getMapState(key).zoom\n  }\n\n  static getMaxBounds (key) {\n    let maxBounds = null\n    switch (key) {\n      case Keys.CITIES:\n        maxBounds = TSPutils.getCitiesMaxBounds()\n        break\n      case Keys.VANCOUVER:\n        maxBounds = TSPutils.getVancouverMaxBounds()\n        break\n      default:\n        break\n    }\n\n    return maxBounds\n  }\n\n  static getCitiesMaxBounds () {\n    const southWestBound = L.latLng(15.597245, -148.269778)\n    const northEastBound = L.latLng(64.099507, -51.894763)\n\n    return L.latLngBounds(southWestBound, northEastBound)\n  }\n\n  static getVancouverMaxBounds () {\n    const southWestBound = L.latLng(49.020672, -123.447644)\n    const northEastBound = L.latLng(49.455436, -122.582183)\n\n    return L.latLngBounds(southWestBound, northEastBound)\n  }\n\n  static getRedIcon () {\n    return L.icon({\n      iconUrl: require('../../../images/RedMarker.png'),\n      iconSize: [40, 40],\n      iconAnchor: [20, 40],\n      popupAnchor: [0, -40]\n    })\n  }\n\n  static getBlueIcon () {\n    return L.icon({\n      iconUrl: require('../../../images/BlueMarker.png'),\n      iconSize: [40, 40],\n      iconAnchor: [20, 40],\n      popupAnchor: [0, -40]\n    })\n  }\n\n  static getRedMarker (latLng, popup) {\n    return TSPutils.getMarker(TSPutils.getRedIcon(), latLng, popup)\n  }\n\n  static getBlueMarker (latLng, popup) {\n    return TSPutils.getMarker(TSPutils.getBlueIcon(), latLng, popup)\n  }\n\n  static getMarker (icon, latLng, popup) {\n    const marker = L.marker(latLng, {\n      icon: icon,\n      pane: 'customMarkerPane',\n      keyboard: false,\n      draggable: false\n    }).bindPopup(popup)\n\n    marker.on('mouseover', () => {\n      const tspState = TSPstate.getInstance()\n      if (!tspState.getIsLoading()) {\n        marker.openPopup()\n      }\n    })\n    marker.on('mouseout', () => {\n      marker.closePopup()\n    })\n\n    return marker\n  }\n\n  static getPopup (content) {\n    return L.popup({\n      pane: 'customPopupPane',\n      closeOnClick: true,\n      closeButton: false\n    }).setContent(content)\n  }\n\n  static createBluePane (map) {\n    const bluePane = map.leafletElement.createPane('bluePane')\n    bluePane.style.zIndex = ''\n  }\n\n  static createRedPane (map) {\n    const redPane = map.leafletElement.createPane('redPane')\n    redPane.style.zIndex = 1000\n  }\n\n  static createMarkerPane (map) {\n    const markerPane = map.leafletElement.createPane('customMarkerPane')\n    markerPane.style.zIndex = 2000\n  }\n\n  static createPopupPane (map) {\n    const popupPane = map.leafletElement.createPane('customPopupPane')\n    popupPane.style.zIndex = 3000\n  }\n\n  static isNonNegNumber (value) {\n    return /^\\d+$/.test(value)\n  }\n\n  static doStartAndEndWaypointsMatch (lineWaypoints, startWaypoint, endWaypoint) {\n    return (TSPutils.doesStartWaypointMatch(lineWaypoints, startWaypoint) &&\n    TSPutils.doesEndWaypointMatch(lineWaypoints, endWaypoint))\n  }\n\n  /**\n   *\n   * @param {object} lineWaypoints an array of two L.latLng objects representing the\n   * start and end waypoints of the line respectively\n   * @param {object} startWaypoint an L.latLng object\n   * @returns true if the startWaypoint matches with either the start or end waypoint\n   * of the line (lineWaypoints)\n   */\n  static doesStartWaypointMatch (lineWaypoints, startWaypoint) {\n    const lineStartWaypoint = lineWaypoints[0]\n    const lineStartLat = lineStartWaypoint.lat\n    const lineStartLong = lineStartWaypoint.lng\n\n    const lineEndWaypoint = lineWaypoints[1]\n    const lineEndLat = lineEndWaypoint.lat\n    const lineEndLong = lineEndWaypoint.lng\n\n    const startLat = startWaypoint.lat\n    const startLong = startWaypoint.lng\n\n    const startWaypointMatches = ((lineStartLat === startLat && lineStartLong === startLong) ||\n    (lineEndLat === startLat && lineEndLong === startLong))\n\n    return startWaypointMatches\n  }\n\n  /**\n   *\n   * @param {object} lineWaypoints an array of two L.latLng objects representing the\n   * start and end waypoints of the line respectively\n   * @param {object} endWaypoint an L.latLng object\n   * @returns true if the endWaypoint matches with either the start or end waypoint\n   * of the line (lineWaypoints)\n   */\n  static doesEndWaypointMatch (lineWaypoints, endWaypoint) {\n    const lineStartWaypoint = lineWaypoints[0]\n    const lineStartLat = lineStartWaypoint.lat\n    const lineStartLong = lineStartWaypoint.lng\n\n    const lineEndWaypoint = lineWaypoints[1]\n    const lineEndLat = lineEndWaypoint.lat\n    const lineEndLong = lineEndWaypoint.lng\n\n    const endLat = endWaypoint.lat\n    const endLong = endWaypoint.lng\n\n    const endWaypointMatches = ((lineStartLat === endLat && lineStartLong === endLong) ||\n    (lineEndLat === endLat && lineEndLong === endLong))\n\n    return endWaypointMatches\n  }\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport L from 'leaflet'\nimport TSPutils from './TSPutils.js'\nimport Keys from './Keys.js'\n\nclass TSPstate {\n  static instance = null\n\n  isCitiesFirstRoundRoutingCall = true\n  isVancouverFirstRoundRoutingCall = true\n\n  isLoading = true\n\n  isCitiesPathSolved = false\n  isVancouverPathSolved = false\n\n  solvingState = ''\n\n  citiesCallsPending = new Set()\n  vancouverCallsPending = new Set()\n\n  /**\n   * 'Main Map Markers' refers to the Markers\n   * that are drawn onto the 'Main Map' which\n   * is the non-fullScreen map for TSP.\n   *\n   * These objects (...MainMapMarkers) map sourceKeys\n   * (i.e. \"UBC campus\" which is an example given in RoutingMachine.js)\n   * to L.marker objects\n   *\n   * L.marker documentation:\n   * https://leafletjs.com/reference-1.6.0.html#marker\n   */\n  citiesMainMapMarkers = {}\n  vancouverMainMapMarkers = {}\n\n  citiesMap = null\n  vancouverMap = null\n\n  citiesState = {\n    lat: 44.5260,\n    lng: -105.2551,\n    zoom: 3\n  }\n\n  vancouverState = {\n    lat: 49.246292,\n    lng: -122.999000,\n    zoom: 10\n  }\n\n  /**\n   * These objects (...Route) map waypointKeys (in RoutingMachine.js)\n   * i.e. \"[\"UBC campus\",\"SFU campus\"]\"\n   * to L.Routing.plan objects\n   *\n   * L.Routing.plan documentation:\n   * https://www.liedman.net/leaflet-routing-machine/api/#l-routing-plan\n   */\n  citiesRoute = {}\n  vancouverRoute = {}\n\n  /**\n   * These objects (...LineRoute) map numbers (as indexes)\n   * to the primary route received in the callback from the\n   * PersistentGraph.js > requestRoute() call\n   * (accessed like <IRoute[]>[0] in RoutingMachine.js > getRoutingCallback())\n   *\n   * IRoute documentation:\n   * https://www.liedman.net/leaflet-routing-machine/api/#iroute\n   */\n  citiesLineRoute = {}\n  vancouverLineRoute = {}\n\n  /**\n   * These objects (...Lines) map numbers (as indexes)\n   * to L.Routing.line instances\n   */\n  citiesLines = {}\n  vancouverLines = {}\n\n  /**\n   * These Sets (...SelectedNodeIds) store the\n   * (number) nodeIds of the markers that are\n   * selected on the TSP map\n   */\n  citiesSelectedNodeIds = new Set()\n  vancouverSelectedNodeIds = new Set()\n\n  /**\n   * These Sets (...SelectedMarkers) store the\n   * (string) sourceKeys\n   * (i.e. \"UBC campus\" which is an example given in RoutingMachine.js)\n   * of the markers that are selected on the\n   * TSP map\n   */\n  citiesSelectedMarkers = new Set()\n  vancouverSelectedMarkers = new Set()\n\n  /**\n   * These Sets (...MarkerSourceKeys) store\n   * the (string) sourceKeys\n   * (i.e. \"UBC campus\" which is an example given in RoutingMachine.js)\n   * of markers that are created\n   */\n  citiesMainMapMarkerSourceKeys = new Set()\n  vancouverMainMapMarkerSourceKeys = new Set()\n\n  fullScreenCitiesMarkerSourceKeys = new Set()\n  fullScreenVancouverMarkerSourceKeys = new Set()\n\n  fullScreen = false\n\n  citiesSolvedRouteIndexes = new Set()\n  vancouverSolvedRouteIndexes = new Set()\n\n  componentsUpdated = 0\n\n  /**\n   * The components referred to are the below:\n   * 1. TravellingSalesperson.js > keys\n   * 2. TravellingSalesperson.js > waypoints\n   */\n  componentsThatNeedUpdating = 2\n\n  static getInstance () {\n    if (TSPstate.instance === null) {\n      TSPstate.instance = new TSPstate()\n    }\n\n    return this.instance\n  }\n\n  getIsFirstRoundRoutingCall (key) {\n    let isFirstRoundRoutingCall = null\n    switch (key) {\n      case Keys.CITIES:\n        isFirstRoundRoutingCall = this.getIsCitiesFirstRoundRoutingCall()\n        break\n      case Keys.VANCOUVER:\n        isFirstRoundRoutingCall = this.getIsVancouverFirstRoundRoutingCall()\n        break\n      default:\n        break\n    }\n\n    return isFirstRoundRoutingCall\n  }\n\n  getIsCitiesFirstRoundRoutingCall () {\n    return this.isCitiesFirstRoundRoutingCall\n  }\n\n  getIsVancouverFirstRoundRoutingCall () {\n    return this.isVancouverFirstRoundRoutingCall\n  }\n\n  getIsLoading () {\n    return this.isLoading\n  }\n\n  getIsPathSolved (key) {\n    let isPathSolved = null\n    switch (key) {\n      case Keys.CITIES:\n        isPathSolved = this.getIsCitiesPathSolved()\n        break\n      case Keys.VANCOUVER:\n        isPathSolved = this.getIsVancouverPathSolved()\n        break\n      default:\n        break\n    }\n\n    return isPathSolved\n  }\n\n  getIsCitiesPathSolved () {\n    return this.isCitiesPathSolved\n  }\n\n  getIsVancouverPathSolved () {\n    return this.isVancouverPathSolved\n  }\n\n  getSolvingState () {\n    return this.solvingState\n  }\n\n  getCallsPending (key) {\n    let callsPending = null\n    switch (key) {\n      case Keys.CITIES:\n        callsPending = this.getCitiesCallsPending()\n        break\n      case Keys.VANCOUVER:\n        callsPending = this.getVancouverCallsPending()\n        break\n      default:\n        break\n    }\n\n    return callsPending\n  }\n\n  getCitiesCallsPending () {\n    return this.citiesCallsPending\n  }\n\n  getVancouverCallsPending () {\n    return this.vancouverCallsPending\n  }\n\n  getMainMapMarkers (key) {\n    let mainMapMarkers = null\n    switch (key) {\n      case Keys.CITIES:\n        mainMapMarkers = this.getCitiesMainMapMarkers()\n        break\n      case Keys.VANCOUVER:\n        mainMapMarkers = this.getVancouverMainMapMarkers()\n        break\n      default:\n        break\n    }\n\n    return mainMapMarkers\n  }\n\n  getCitiesMainMapMarkers () {\n    return this.citiesMainMapMarkers\n  }\n\n  getVancouverMainMapMarkers () {\n    return this.vancouverMainMapMarkers\n  }\n\n  getCitiesMap () {\n    return this.citiesMap\n  }\n\n  getVancouverMap () {\n    return this.vancouverMap\n  }\n\n  getMapState (key) {\n    let mapState = null\n    switch (key) {\n      case Keys.CITIES:\n        mapState = this.getCitiesState()\n        break\n      case Keys.VANCOUVER:\n        mapState = this.getVancouverState()\n        break\n      default:\n        break\n    }\n\n    return mapState\n  }\n\n  getCitiesState () {\n    return this.citiesState\n  }\n\n  getVancouverState () {\n    return this.vancouverState\n  }\n\n  getRoute (key) {\n    let route = null\n    switch (key) {\n      case Keys.CITIES:\n        route = this.getCitiesRoute()\n        break\n      case Keys.VANCOUVER:\n        route = this.getVancouverRoute()\n        break\n      default:\n        break\n    }\n\n    return route\n  }\n\n  getCitiesRoute () {\n    return this.citiesRoute\n  }\n\n  getVancouverRoute () {\n    return this.vancouverRoute\n  }\n\n  getLineRoute (key) {\n    let lineRoute = null\n    switch (key) {\n      case Keys.CITIES:\n        lineRoute = this.getCitiesLineRoute()\n        break\n      case Keys.VANCOUVER:\n        lineRoute = this.getVancouverLineRoute()\n        break\n      default:\n        break\n    }\n\n    return lineRoute\n  }\n\n  getCitiesLineRoute () {\n    return this.citiesLineRoute\n  }\n\n  getVancouverLineRoute () {\n    return this.vancouverLineRoute\n  }\n\n  getLines (key) {\n    let lines = null\n    switch (key) {\n      case Keys.CITIES:\n        lines = this.getCitiesLines()\n        break\n      case Keys.VANCOUVER:\n        lines = this.getVancouverLines()\n        break\n      default:\n        break\n    }\n\n    return lines\n  }\n\n  getCitiesLines () {\n    return this.citiesLines\n  }\n\n  getVancouverLines () {\n    return this.vancouverLines\n  }\n\n  getSelectedNodeIds (key) {\n    let selectedNodes = null\n    switch (key) {\n      case Keys.CITIES:\n        selectedNodes = this.getCitiesSelectedNodeIds()\n        break\n      case Keys.VANCOUVER:\n        selectedNodes = this.getVancouverSelectedNodeIds()\n        break\n      default:\n        break\n    }\n\n    return selectedNodes\n  }\n\n  getCitiesSelectedNodeIds () {\n    return this.citiesSelectedNodeIds\n  }\n\n  getVancouverSelectedNodeIds () {\n    return this.vancouverSelectedNodeIds\n  }\n\n  getSelectedMarkers (key) {\n    let selectedMarkers = null\n    switch (key) {\n      case Keys.CITIES:\n        selectedMarkers = this.getCitiesSelectedMarkers()\n        break\n      case Keys.VANCOUVER:\n        selectedMarkers = this.getVancouverSelectedMarkers()\n        break\n      default:\n        break\n    }\n\n    return selectedMarkers\n  }\n\n  getCitiesSelectedMarkers () {\n    return this.citiesSelectedMarkers\n  }\n\n  getVancouverSelectedMarkers () {\n    return this.vancouverSelectedMarkers\n  }\n\n  getMarkerSourceKeys (key) {\n    let markerSourceKeys = null\n    if (this.getFullScreen()) {\n      markerSourceKeys = this.getFullScreenMarkerSourceKeys(key)\n    } else {\n      markerSourceKeys = this.getMainMapMarkerSourceKeys(key)\n    }\n\n    return markerSourceKeys\n  }\n\n  getMainMapMarkerSourceKeys (key) {\n    let markerSourceKeys = null\n    switch (key) {\n      case Keys.CITIES:\n        markerSourceKeys = this.getCitiesMainMapMarkerSourceKeys()\n        break\n      case Keys.VANCOUVER:\n        markerSourceKeys = this.getVancouverMainMapMarkerSourceKeys()\n        break\n      default:\n        break\n    }\n\n    return markerSourceKeys\n  }\n\n  getCitiesMainMapMarkerSourceKeys () {\n    return this.citiesMainMapMarkerSourceKeys\n  }\n\n  getVancouverMainMapMarkerSourceKeys () {\n    return this.vancouverMainMapMarkerSourceKeys\n  }\n\n  getFullScreenMarkerSourceKeys (key) {\n    let fullScreenMarkerSourceKeys = null\n    switch (key) {\n      case Keys.CITIES:\n        fullScreenMarkerSourceKeys = this.getFullScreenCitiesMarkerSourceKeys()\n        break\n      case Keys.VANCOUVER:\n        fullScreenMarkerSourceKeys = this.getFullScreenVancouverMarkerSourceKeys()\n        break\n      default:\n        break\n    }\n\n    return fullScreenMarkerSourceKeys\n  }\n\n  getFullScreenCitiesMarkerSourceKeys () {\n    return this.fullScreenCitiesMarkerSourceKeys\n  }\n\n  getFullScreenVancouverMarkerSourceKeys () {\n    return this.fullScreenVancouverMarkerSourceKeys\n  }\n\n  getFullScreen () {\n    return this.fullScreen\n  }\n\n  getSolvedRouteIndexes (key) {\n    let solvedRouteIndexes = null\n    switch (key) {\n      case Keys.CITIES:\n        solvedRouteIndexes = this.getCitiesSolvedRouteIndexes()\n        break\n      case Keys.VANCOUVER:\n        solvedRouteIndexes = this.getVancouverSolvedRouteIndexes()\n        break\n      default:\n        break\n    }\n    return solvedRouteIndexes\n  }\n\n  getCitiesSolvedRouteIndexes () {\n    return this.citiesSolvedRouteIndexes\n  }\n\n  getVancouverSolvedRouteIndexes () {\n    return this.vancouverSolvedRouteIndexes\n  }\n\n  getComponentsUpdated () {\n    return this.componentsUpdated\n  }\n\n  getComponentsThatNeedUpdating () {\n    return this.componentsThatNeedUpdating\n  }\n\n  getFirstRoute (key) {\n    let firstRoute = null\n    switch (key) {\n      case Keys.CITIES:\n        firstRoute = this.getCitiesFirstRoute()\n        break\n      case Keys.VANCOUVER:\n        firstRoute = this.getVancouverFirstRoute()\n        break\n      case Keys.FLOWERS:\n        console.log('TODO: implement getFirstRoute() Flowers case')\n        break\n      default:\n        break\n    }\n\n    return firstRoute\n  }\n\n  getCitiesFirstRoute () {\n    const firstKey = Object.keys(this.getCitiesRoute())[0]\n    return this.getCitiesRoute()[firstKey]\n  }\n\n  getVancouverFirstRoute () {\n    const firstKey = Object.keys(this.getVancouverRoute())[0]\n    return this.getVancouverRoute()[firstKey]\n  }\n\n  setIsFirstRoundRoutingCall (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setIsCitiesFirstRoundRoutingCall(value)\n        break\n      case Keys.VANCOUVER:\n        this.setIsVancouverFirstRoundRoutingCall(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setIsCitiesFirstRoundRoutingCall (value) {\n    this.isCitiesFirstRoundRoutingCall = value\n  }\n\n  setIsVancouverFirstRoundRoutingCall (value) {\n    this.isVancouverFirstRoundRoutingCall = value\n  }\n\n  setIsLoading (value) {\n    this.isLoading = value\n  }\n\n  setIsPathSolved (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setIsCitiesPathSolved(value)\n        break\n      case Keys.VANCOUVER:\n        this.setIsVancouverPathSolved(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setIsCitiesPathSolved (value) {\n    this.isCitiesPathSolved = value\n  }\n\n  setIsVancouverPathSolved (value) {\n    this.isVancouverPathSolved = value\n  }\n\n  setSolvingState (value) {\n    this.solvingState = value\n  }\n\n  setCallsPending (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setCitiesCallsPending(value)\n        break\n      case Keys.VANCOUVER:\n        this.setVancouverCallsPending(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setCitiesCallsPending (value) {\n    this.citiesCallsPending = value\n  }\n\n  setVancouverCallsPending (value) {\n    this.vancouverCallsPending = value\n  }\n\n  setCitiesMainMapMarkers (value) {\n    this.citiesMainMapMarkers = value\n  }\n\n  setMap (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setCitiesMap(value)\n        break\n      case Keys.VANCOUVER:\n        this.setVancouverMap(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setCitiesMap (value) {\n    this.citiesMap = value\n  }\n\n  setVancouverMap (value) {\n    this.vancouverMap = value\n  }\n\n  updateCitiesState (newState) {\n    this.citiesState = { ...this.citiesState, ...newState }\n  }\n\n  updateVancouverState (newState) {\n    this.vancouverState = { ...this.vancouverState, ...newState }\n  }\n\n  setCitiesRoute (value) {\n    this.citiesRoute = value\n  }\n\n  setVancouverRoute (value) {\n    this.vancouverRoute = value\n  }\n\n  setCitiesLineRoute (value) {\n    this.citiesLineRoute = value\n  }\n\n  setVancouverLineRoute (value) {\n    this.vancouverLineRoute = value\n  }\n\n  setCitiesLines (value) {\n    this.citiesLines = value\n  }\n\n  setVancouverLines (value) {\n    this.vancouverLines = value\n  }\n\n  setSelectedNodeIds (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setCitiesSelectedNodeIds(value)\n        break\n      case Keys.VANCOUVER:\n        this.setVancouverSelectedNodeIds(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setCitiesSelectedNodeIds (value) {\n    this.citiesSelectedNodeIds = value\n  }\n\n  setVancouverSelectedNodeIds (value) {\n    this.vancouverSelectedNodeIds = value\n  }\n\n  setSelectedMarkers (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setCitiesSelectedMarkers(value)\n        break\n      case Keys.VANCOUVER:\n        this.setVancouverSelectedMarkers(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setCitiesSelectedMarkers (value) {\n    this.citiesSelectedMarkers = value\n  }\n\n  setVancouverSelectedMarkers (value) {\n    this.vancouverSelectedMarkers = value\n  }\n\n  setFullScreenMarkerSourceKeys (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setFullScreenCitiesMarkerSourceKeys(value)\n        break\n      case Keys.VANCOUVER:\n        this.setFullScreenVancouverMarkerSourceKeys(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setFullScreenCitiesMarkerSourceKeys (value) {\n    this.fullScreenCitiesMarkerSourceKeys = value\n  }\n\n  setFullScreenVancouverMarkerSourceKeys (value) {\n    this.fullScreenVancouverMarkerSourceKeys = value\n  }\n\n  setFullScreen (value) {\n    this.fullScreen = value\n  }\n\n  setSolvedRouteIndexes (graphKey, value) {\n    switch (graphKey) {\n      case Keys.CITIES:\n        this.setCitiesSolvedRouteIndexes(value)\n        break\n      case Keys.VANCOUVER:\n        this.setVancouverSolvedRouteIndexes(value)\n        break\n      default:\n        break\n    }\n  }\n\n  setCitiesSolvedRouteIndexes (value) {\n    this.citiesSolvedRouteIndexes = value\n  }\n\n  setVancouverSolvedRouteIndexes (value) {\n    this.vancouverSolvedRouteIndexes = value\n  }\n\n  setComponentsUpdated (value) {\n    this.componentsUpdated = value\n  }\n\n  setComponentsThatNeedUpdating (value) {\n    this.componentsThatNeedUpdating = value\n  }\n\n  /**\n   * This is the event handler for the 'reset' event. The event\n   * listener is attached to newly created red lines in TSPstate.js > onTSPsolved().\n   * Once the Travelling Salesperson Problem (TSP) is solved, lines along the\n   * Travelling Salesperson's path will be replaced by red lines and so must have a 'reset'\n   * event to set back to blue lines. That is the purpose of this function.\n   * @param {object} lineInfo contains information about the line that 'reset' has\n   * been called on\n   * @param {object} tspSolvedEventListenerInfo contains values needed to pass to the\n   * 'tspSolvedEvent' event listener\n   * @param {string} key one of the keys from Keys.js to identify the type of graph\n   * (i.e. 'cities')\n   */\n  onReset (lineInfo, tspSolvedEventListenerInfo, key) {\n    const oldLine = lineInfo.oldLine\n    const index = lineInfo.index\n    const map = lineInfo.map\n    const waypoints = lineInfo.waypoints\n\n    const routes = tspSolvedEventListenerInfo.routes\n\n    map.leafletElement.removeLayer(oldLine)\n\n    let newLine = L.Routing.line(this.getLineRoute(key)[index], {\n      styles: TSPutils.getRoutingLineStyles('bluePane', TSPutils.getGeeringupPrimaryColor())\n    })\n\n    const tspSolvedEventListener = (waypointsInSolution) => {\n      const lineInfo = {\n        line: newLine,\n        lineWaypoints: waypoints,\n        waypointsInSolution: waypointsInSolution,\n        map: map,\n        routes: routes,\n        index: index\n      }\n\n      this.onTSPsolved(lineInfo, key)\n    }\n\n    newLine.addEventListener('tspSolvedEvent', tspSolvedEventListener)\n    newLine = newLine.addTo(map.leafletElement)\n\n    this.getLines(key)[index] = newLine\n  }\n\n  /**\n   * This is the event handler for the 'tspSolvedEvent' event. The event\n   * listener is attached to newly created (blue) lines in RoutingMachine.js and\n   * to newly created blue lines in TSPstate.js > onReset(). (In onReset(),\n   * red lines are replaced with blue lines since blue is the default state of the line.)\n   * This function searches for (blue) lines which have their endpoints in the Travelling\n   * Salesperson's path and replaces them with red lines.\n   * @param {object} lineInfo contains information about the line that 'tspSolvedEvent' has\n   * been called on\n   * @param {string} key one of the keys from Keys.js to identify the type of graph\n   *  (i.e. 'cities')\n   */\n  onTSPsolved (lineInfo, key) {\n    const line = lineInfo.line\n    const lineWaypoints = lineInfo.lineWaypoints\n    const waypointsInSolution = lineInfo.waypointsInSolution\n    const map = lineInfo.map\n    const routes = lineInfo.routes\n    const index = lineInfo.index\n\n    const keys = Object.keys(waypointsInSolution)\n    for (let i = 0; i < keys.length; i++) {\n      if (!TSPutils.isNonNegNumber(keys[i])) {\n        break\n      }\n\n      const startWaypoint = waypointsInSolution[keys[i]].waypoint[0]\n      const endWaypoint = waypointsInSolution[keys[i]].waypoint[1]\n\n      if (TSPutils.doStartAndEndWaypointsMatch(lineWaypoints, startWaypoint, endWaypoint)) {\n        this.getSolvedRouteIndexes(key).add(index)\n        map.leafletElement.removeLayer(line)\n\n        let newLine = L.Routing.line(routes, {\n          styles: TSPutils.getRoutingLineStyles('redPane', TSPutils.getGeeringupSecondaryColor())\n        })\n        const tspSolvedEventFn = (waypointsInSolution) => {\n          const lineInfo = {\n            line: newLine,\n            lineWaypoints: lineWaypoints,\n            waypointsInSolution: waypointsInSolution,\n            map: map,\n            routes: routes,\n            index: index\n          }\n          this.onTSPsolved(lineInfo, key)\n        }\n        const tspOnResetEventFn = () => {\n          const lineInfo = {\n            oldLine: newLine,\n            index: index,\n            map: map,\n            waypoints: lineWaypoints\n          }\n          const tspSolvedEventListenerInfo = {\n            routes: routes\n          }\n          this.onReset(lineInfo, tspSolvedEventListenerInfo, key)\n        }\n\n        newLine.addEventListener('tspSolvedEvent', tspSolvedEventFn)\n        newLine.addEventListener('reset', tspOnResetEventFn)\n        newLine = newLine.addTo(map.leafletElement)\n\n        this.getLines(key)[index] = newLine\n      }\n    }\n  }\n\n  resetGraphStates (key) {\n    this.setSelectedNodeIds(key, new Set())\n    this.setSelectedMarkers(key, new Set())\n    this.setSolvedRouteIndexes(key, new Set())\n  }\n}\n\nexport default TSPstate\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport 'leaflet-routing-machine'\n// import {IRoute, IRouteSummary} from 'leaflet-routing-machine'\n// import { MapLayer, withLeaflet } from 'react-leaflet'\nimport L from 'leaflet'\nimport XMLHttpRequest from 'xhr2'\n\nclass PersistentGraph {\n  static loadGraph () {\n    if (this.isLoaded || this.isLoading) return\n\n    this.router = null\n    this.requestDictionary = null\n    this.isLoaded = false\n    this.isLoading = true\n\n    this.requests = []\n    this.handled = false\n\n    var xhr = new XMLHttpRequest()\n    const url = '/get_persistent_graph'\n    const async = true\n    xhr.open('GET', url, async)\n    xhr.responseType = 'json'\n    xhr.onload = () => {\n      if (xhr.response) {\n        // setIP(xhr.response.ip)\n        this.requestDictionary = xhr.response\n        this.isLoaded = true\n        this.isLoading = false\n        // console.log(this.requestDictionary)\n        this.handleRoutes()\n      }\n    }\n    xhr.setRequestHeader('Content-type', 'application/json')\n    xhr.send()\n  }\n\n  static requestRoute ([waypointSource, waypointDest], myCallback) {\n    if (!this.isLoaded && !this.isLoading) {\n      console.log('Please load the persistent graph before using')\n      return\n    } else if (this.isLoading) {\n      this.requests.push([[waypointSource, waypointDest], myCallback])\n      return\n    }\n\n    // console.log([waypointSource, waypointDest], my_callback)\n\n    const res = this.requestDictionary[JSON.stringify([waypointSource, waypointDest])]\n\n    // console.log(res)\n\n    if (res) {\n      // console.log(Object.keys(this.requestDictionary))\n      myCallback(null, this.getRoute(res))\n    } else {\n      if (this.router === null) {\n        this.router = new L.Routing.osrmv1({}) // eslint-disable-line new-cap\n      }\n      this.router.route([waypointSource, waypointDest], (err, routes) => {\n        if (err) {\n          console.log('Error in routing for new persistency route')\n          console.log(err)\n          myCallback(err, routes)\n        } else {\n          // routes.instructions = []\n\n          this.requestDictionary[JSON.stringify([waypointSource, waypointDest])] =\n            this.simplifyRoute(routes[0])\n          console.log(JSON.stringify(this.requestDictionary, null, 1))\n          console.log('Written to Persistent_Routes')\n          myCallback(null, this.getRoute(\n            this.requestDictionary[JSON.stringify([waypointSource, waypointDest])]\n          ))\n          // my_callback(null, routes)\n        }\n      })\n    }\n  }\n\n  static handleRoutes () {\n    // console.log(this.requests)\n    if (this.handled) return\n    for (var e of this.requests) {\n      this.requestRoute(e[0], e[1])\n    }\n    // this.handled = true\n  }\n\n  static getRoute (route) {\n    var rt = {}\n    rt.name = route.name\n    rt.summary = route.summary\n    rt.coordinates = route.coordinates.map(([lat, lng]) => { return new L.LatLng(lat, lng) })\n    rt.waypoints = [rt.coordinates[0], rt.coordinates[rt.coordinates.length - 1]]\n    rt.inputWaypoints = route.inputWaypoints.map((e) => {\n      return {\n        options: e.options,\n        latLng: new L.LatLng(e.latLng.lat, e.latLng.lng)\n      }\n    })\n    rt.instructions = []\n    return [rt, null]\n  }\n\n  static simplifyRoute (route) {\n    // console.log(route)\n    // route = route[0]\n    var rt = {}\n    rt.name = route.name\n    rt.summary = route.summary\n    rt.inputWaypoints = route.inputWaypoints\n    rt.coordinates = []\n    var lastLat = route.coordinates[0].lat\n    var lastLng = route.coordinates[0].lng\n    rt.coordinates.push([lastLat, lastLng])\n    for (var i = 1; i < route.coordinates.length; ++i) {\n      if (Math.abs(lastLat - route.coordinates[i].lat) > 0.01 ||\n          Math.abs(lastLng - route.coordinates[i].lng) > 0.01 ||\n          route.coordinates.length < 1000) {\n        lastLat = route.coordinates[i].lat\n        lastLng = route.coordinates[i].lng\n        rt.coordinates.push([lastLat, lastLng])\n      }\n    }\n    if (rt.coordinates[rt.coordinates.length - 1] !== route.coordinates[route.coordinates.length - 1]) {\n      lastLat = route.coordinates[route.coordinates.length - 1].lat\n      lastLng = route.coordinates[route.coordinates.length - 1].lng\n      rt.coordinates.push([lastLat, lastLng])\n    }\n    return rt\n  }\n}\n\nexport default PersistentGraph\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport 'leaflet-routing-machine'\nimport { MapLayer, withLeaflet } from 'react-leaflet'\nimport L from 'leaflet'\nimport TSPutils from './TSPutils.js'\nimport TSPstate from './TSPstate.js'\nimport PersistentGraph from './PersistentGraph'\n\nimport Graph from './Graph.js'\n\n/**\n * Key structure of this class was based on the Routing Machine solution\n * cited here:\n *\n * Source:\n *    Ghimire, A (2019) React leaflet-routing-machine example [Source Code].\n *    https://github.com/arjunghimire/react-leaflet-routing-machine-example.\n *\n * For more context, this solution is also linked in this discussion:\n * https://github.com/perliedman/leaflet-routing-machine/issues/400\n */\nclass Routing extends MapLayer {\n  componentDidUpdate () {\n    this.resetFullScreenMarkerSourceKeys()\n    this.checkToLoadNewGraph()\n  }\n\n  resetFullScreenMarkerSourceKeys () {\n    const tspState = TSPstate.getInstance()\n    tspState.setFullScreenMarkerSourceKeys(this.props.Key, new Set())\n  }\n\n  checkToLoadNewGraph () {\n    if (this.graphTabIsBeingSwitched()) {\n      this.switchToNewGraph()\n    }\n  }\n\n  switchToNewGraph () {\n    this.resetSwitchingGraphsProp()\n    this.createLeafletElement()\n  }\n\n  resetSwitchingGraphsProp () {\n    this.props.setSwitchingGraphs({\n      isGraphSwitch: false,\n      key: null\n    })\n  }\n\n  graphTabIsBeingSwitched () {\n    return (this.props.switchingGraphs.isGraphSwitch &&\n      this.props.switchingGraphs.key === this.props.Key)\n  }\n\n  /**\n   * Refer to this documentation for more information\n   * regarding the structure of this function:\n   * Source: https://react-leaflet.js.org/docs/en/custom-components.html\n   */\n  createLeafletElement () {\n    const { fullScreen, Key, setLoading } = this.props\n    const tspState = TSPstate.getInstance()\n    tspState.setFullScreen(fullScreen) // used in Marker callbacks\n\n    if (this.isFirstRoundRoutingCallForMainGraph()) {\n      setLoading(true)\n      tspState.setIsLoading(true)\n    }\n    this.fetchPath()\n\n    return tspState.getFirstRoute(Key)\n  }\n\n  isFirstRoundRoutingCallForMainGraph () {\n    const tspState = TSPstate.getInstance()\n    return (!tspState.getFullScreen() &&\n    tspState.getIsFirstRoundRoutingCall(this.props.Key))\n  }\n\n  fetchPath () {\n    const tspState = TSPstate.getInstance()\n\n    this.initPanes()\n\n    const { map, waypoints, currentGraph, Key, fullScreen } = this.props\n\n    PersistentGraph.loadGraph()\n\n    tspState.setCallsPending(Key, new Set())\n    /**\n     * waypoints is an array of objects containing two key-value pairs\n     * 1. waypoint: an array of two L.latLng objects representing\n     * the source and destination waypoints respectively\n     * 2. names: an array of two strings corresponding to the source and destination\n     * waypoints respectively\n     *\n     * Refer to TSPutils.js > getGraphWaypoints() or getWaypointsSinglePath()\n     * to see where such an array is created\n     */\n    for (let i = 0; i < waypoints.length; i++) {\n      const name = waypoints[i].names[0]\n      const id = currentGraph.nameMapping[name]\n\n      const popup = TSPutils.getPopup(name)\n\n      const waypointSource = { latLng: waypoints[i].waypoint[0] }\n      const waypointDest = { latLng: waypoints[i].waypoint[1] }\n\n      // i.e. \"[\"UBC campus\",\"SFU campus\"]\"\n      const waypointKey = JSON.stringify(waypoints[i].names)\n      // i.e. \"UBC campus\"\n      const sourceKey = waypoints[i].names[0]\n\n      const routingPlanOptions = this.getRoutingPlanOptionsOptions(sourceKey, popup, id)\n\n      const routingPlan = L.Routing.plan(waypoints[i].waypoint, routingPlanOptions)\n\n      if (TSPutils.isMainGraph(Key)) {\n        // used in tspState.getFirstRoute()\n        tspState.getRoute(Key)[waypointKey] = routingPlan\n      }\n      routingPlan.addTo(map.leafletElement)\n\n      const isLineRoutePresent = tspState.getVancouverLineRoute().hasOwnProperty(i)\n      const isFirstRoundRoutingCall = tspState.getIsFirstRoundRoutingCall(Key)\n\n      if ((!isLineRoutePresent && isFirstRoundRoutingCall && !tspState.getCallsPending(Key).has(i))) {\n        tspState.getCallsPending(Key).add(i)\n\n        if (i === waypoints.length - 1) {\n          tspState.setIsFirstRoundRoutingCall(Key, false)\n        }\n\n        const line = null\n        const blueLineStyles = TSPutils.getRoutingLineStyles('bluePane', TSPutils.getGeeringupPrimaryColor())\n\n        const callback = (err, routes) => {\n          const callbackParams = {\n            err: err,\n            routes: routes\n          }\n          const lineParams = {\n            line: line,\n            blueLineStyles: blueLineStyles,\n            i: i\n          }\n          this.getRoutingCallback(callbackParams, lineParams)\n        }\n\n        PersistentGraph.requestRoute([waypointSource, waypointDest], callback)\n      } else {\n        /** Don't want to add a line for a graph that\n         * is not the current graph */\n        if (!Graph[Key].nameMapping.hasOwnProperty(sourceKey)) { // eslint-disable-line no-prototype-builtins\n          return\n        }\n\n        let line\n        if (!fullScreen) {\n          line = tspState.getLines(Key)[i]\n        } else {\n          const lineRoutes = tspState.getLineRoute(Key)[i]\n          if (lineRoutes === undefined) {\n            continue\n          }\n\n          line = L.Routing.line(lineRoutes, {\n            styles: this.getLineStyles(i)\n          })\n        }\n\n        if (line === undefined) {\n          continue\n        }\n\n        line = line.addTo(map.leafletElement)\n      }\n    }\n  }\n\n  getLineStyles (index) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    let lineStyles = null\n    if (tspState.getSolvedRouteIndexes(Key).has(index)) {\n      lineStyles = TSPutils.getRoutingLineStyles('redPane', TSPutils.getGeeringupSecondaryColor())\n    } else {\n      lineStyles = TSPutils.getRoutingLineStyles('bluePane', TSPutils.getGeeringupPrimaryColor())\n    }\n\n    return lineStyles\n  }\n\n  /**\n   * Inits the panes that the different map components will be placed on.\n   * The panes specify the z-Index of the component hence different components\n   * using different panes results in certain components rendering over others\n   */\n  initPanes () {\n    const { map } = this.props\n    if (!map.leafletElement.getPane('bluePane')) {\n      this.initBluePane()\n    }\n    if (!map.leafletElement.getPane('redPane')) {\n      this.initRedPane()\n    }\n    if (!map.leafletElement.getPane('customMarkerPane')) {\n      this.initMarkerPane()\n    }\n    if (!map.leafletElement.getPane('customPopupPane')) {\n      this.initPopupPane()\n    }\n  }\n\n  initBluePane () {\n    TSPutils.createBluePane(this.props.map)\n  }\n\n  initRedPane () {\n    TSPutils.createRedPane(this.props.map)\n  }\n\n  initMarkerPane () {\n    TSPutils.createMarkerPane(this.props.map)\n  }\n\n  initPopupPane () {\n    TSPutils.createPopupPane(this.props.map)\n  }\n\n  getRoutingPlanOptionsOptions (sourceKey, popup, id) {\n    return {\n      addWaypoints: false,\n      draggableWaypoints: false,\n      fitSelectedRoutes: false,\n      /**\n       * Returning falsy values from createMarker()\n       * will result in no marker being created\n       */\n      createMarker: (i, wp, n) => {\n        const markerParams = {\n          wp: wp\n        }\n        const routingMachineParams = {\n          sourceKey: sourceKey,\n          popup: popup,\n          id: id\n        }\n        return this.createMarker(markerParams, routingMachineParams)\n      }\n    }\n  }\n\n  createMarker (markerParams, routingMachineParams) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    const wp = markerParams.wp\n\n    const sourceKey = routingMachineParams.sourceKey\n    const popup = routingMachineParams.popup\n    const id = routingMachineParams.id\n\n    if (this.isInvalidCreateMarkerCall(sourceKey)) {\n      return false\n    }\n\n    const marker = this.getAppropriateColoredMarker(sourceKey, wp.latLng, popup)\n\n    const onClick = () => {\n      this.onMarkerClick(sourceKey, marker, id)\n    }\n    marker.addEventListener('click', onClick)\n\n    if (!tspState.getFullScreen()) {\n      const onUpdating = (icon) => {\n        marker.setIcon(icon)\n      }\n      marker.addEventListener('updating', onUpdating)\n\n      const mainMapMarkers = tspState.getMainMapMarkers(Key)\n      if (!(mainMapMarkers.hasOwnProperty(sourceKey))) {\n        mainMapMarkers[sourceKey] = marker\n      }\n    }\n\n    return marker\n  }\n\n  isInvalidCreateMarkerCall (sourceKey) {\n    const { Key } = this.props\n    /** Don't want to create a marker for a graph that\n     * is not the current graph */\n    const sourceKeyIsForCurrentGraph = Graph[Key].nameMapping.hasOwnProperty(sourceKey)\n    const markerAlreadyCreated = this.updateMarkerSourceKeys(sourceKey)\n\n    return !sourceKeyIsForCurrentGraph || markerAlreadyCreated\n  }\n\n  getAppropriateColoredMarker (sourceKey, latLng, popup) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    let marker = null\n    if (tspState.getSelectedMarkers(Key).has(sourceKey)) {\n      marker = TSPutils.getRedMarker(latLng, popup)\n    } else {\n      marker = TSPutils.getBlueMarker(latLng, popup)\n    }\n\n    return marker\n  }\n\n  updateMarkerSourceKeys (sourceKey) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    let markerAlreadyCreated = false\n    const markerLatLon = tspState.getMarkerSourceKeys(Key)\n    if (markerLatLon.has(sourceKey)) {\n      markerAlreadyCreated = true\n    } else {\n      markerLatLon.add(sourceKey)\n    }\n\n    return markerAlreadyCreated\n  }\n\n  onMarkerClick (sourceKey, marker, id) {\n    marker.closePopup()\n\n    const tspState = TSPstate.getInstance()\n    const { Key, setNumSelectedNodes, outputToConsole } = this.props\n\n    const handledInvalidClick = this.checkToHandleInvalidClick()\n    if (handledInvalidClick) {\n      return\n    }\n\n    const icon = this.getAppropriateColoredIcon(sourceKey)\n    marker.setIcon(icon)\n    this.updateSelectedMarkers(sourceKey)\n\n    const consoleParams = {\n      outputToConsole: outputToConsole,\n      nodeName: sourceKey\n    }\n    TSPutils.onMarkerClick(Key, id, consoleParams)\n\n    setNumSelectedNodes(tspState.getSelectedNodeIds(Key).size)\n\n    if (tspState.getFullScreen()) {\n      this.updateCorrespondingMarkerOnMainMap(sourceKey, icon)\n    }\n  }\n\n  checkToHandleInvalidClick () {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    let handledInvalidClick = true\n    if (this.getIsMainMapLoading()) {\n      this.handleMainMapLoading()\n    } else if (tspState.getIsPathSolved(Key)) {\n      this.handlePathAlreadySolved()\n    } else {\n      handledInvalidClick = false\n    }\n\n    return handledInvalidClick\n  }\n\n  // TODO: In some cases, while the path is solving,\n  // the markers are clickable. This might have to do\n  // with the isLoading field in TSPstate.js not being\n  // set at the appropriate times and should be looked into\n  getIsMainMapLoading () {\n    const tspState = TSPstate.getInstance()\n    return (!tspState.getFullScreen() && tspState.getIsLoading())\n  }\n\n  handleMainMapLoading () {\n    const { outputToConsole } = this.props\n    outputToConsole('Map is Loading...')\n  }\n\n  handlePathAlreadySolved () {\n    const { outputToConsole } = this.props\n    outputToConsole('A shortest path is already solved for.')\n    outputToConsole(\"Please 'Reset' the map before selecting a new node\")\n  }\n\n  updateSelectedMarkers (sourceKey) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    if (tspState.getSelectedMarkers(Key).has(sourceKey)) {\n      tspState.getSelectedMarkers(Key).delete(sourceKey)\n    } else {\n      tspState.getSelectedMarkers(Key).add(sourceKey)\n    }\n  }\n\n  getAppropriateColoredIcon (sourceKey) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    let icon\n    if (tspState.getSelectedMarkers(Key).has(sourceKey)) {\n      icon = TSPutils.getBlueIcon()\n    } else {\n      icon = TSPutils.getRedIcon()\n    }\n\n    return icon\n  }\n\n  updateCorrespondingMarkerOnMainMap (sourceKey, icon) {\n    const tspState = TSPstate.getInstance()\n    const { Key } = this.props\n\n    const correspondingMarkerOnMainMap = tspState.getMainMapMarkers(Key)[sourceKey]\n    correspondingMarkerOnMainMap.fire('updating', icon)\n  }\n\n  /**\n   * Function structure derived from source:\n   *\n   * “How to Initialize Leaflet Routing Line - Routing.”\n   *     Developer Reference: Html Css Asp.net Node.js Angularjs, www.developreference.com.\n   */\n  getRoutingCallback (callbackParams, lineParams) {\n    const { map, Key, waypoints, setLoading, fullScreen } = this.props\n    const err = callbackParams.err\n    const routes = callbackParams.routes\n\n    let line = lineParams.line\n    const blueLineStyles = lineParams.blueLineStyles\n    const i = lineParams.i\n\n    const tspState = TSPstate.getInstance()\n    // TODO: Investigate why in callback callsPending is always an empty set\n    if (tspState.getCallsPending(Key).has(i)) {\n      tspState.getCallsPending(Key).delete(i)\n    }\n    if (line) {\n      map.leafletElement.removeLayer(line)\n    }\n    if (err) {\n      console.log(`Error in routing line ${i} for graph ${Key}: ${err.message}`)\n    } else {\n      tspState.getLineRoute(Key)[i] = routes[0]\n\n      line = L.Routing.line(routes[0], {\n        styles: blueLineStyles\n      })\n      if (!fullScreen) {\n        const tspSolvedEventFn = (waypointsInSolution) => {\n          const lineInfo = {\n            line: line,\n            lineWaypoints: waypoints[i].waypoint,\n            waypointsInSolution: waypointsInSolution,\n            map: map,\n            routes: routes[0],\n            index: i\n          }\n\n          tspState.onTSPsolved(lineInfo, Key)\n        }\n        line.addEventListener('tspSolvedEvent', tspSolvedEventFn)\n      }\n\n      line = line.addTo(map.leafletElement)\n\n      tspState.getLines(Key)[i] = line\n    }\n    if (!tspState.getFullScreen() && i === waypoints.length - 1) {\n      setLoading(false)\n      tspState.setIsLoading(false)\n    }\n  }\n}\n\nexport default withLeaflet(Routing)\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst travellingSalespersonStyle = theme => ({\n  buttonGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(3),\n      boxShadow: 'none'\n    }\n  },\n  mapContainer: {\n    width: '492px'\n  },\n  loadingContainer: {\n    position: 'relative',\n    margin: 'auto',\n    width: '100%',\n    opacity: '0.65'\n  },\n  mapProgress: {\n    position: 'absolute',\n    bottom: 'calc((380.48px / 2) - (68px / 2))',\n    left: 'calc((492px / 2) - (68px / 2))',\n    color: '#50c8eb',\n    /**\n     * NOTE: This zIndex value is selected so it is\n     * higher than the highest zIndex on Map.js\n     * which is the 'customPopupPane' at 3000 (set\n     * in TSPutils.js)\n     */\n    zIndex: '4000'\n  },\n  hidingContainer: {\n    display: 'none'\n  },\n  map: {\n    height: '47.61vh',\n    border: '1px solid rgba(0, 0, 0, 0.12)',\n    borderRadius: '6px'\n  },\n  expandedMap: {\n    height: '100%',\n    width: '100%',\n    border: '1px solid rgba(0, 0, 0, 0.12)',\n    borderRadius: '6px'\n  },\n  tspInput: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  dialogContent: {\n    overflowY: 'hidden'\n  }\n})\n\nexport default travellingSalespersonStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useEffect, useState } from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport Routing from './RoutingMachine'\n\nimport TSPstate from './TSPstate.js'\nimport TSPutils from './TSPutils'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../../assets/jss/material-kit-react/components/travellingSalespersonStyle.js'\n\n/**\n * Key structure of this file was based on the Routing Machine solution\n * cited here:\n *\n * Source:\n *    Ghimire, A (2019) React leaflet-routing-machine example [Source Code].\n *    https://github.com/arjunghimire/react-leaflet-routing-machine-example.\n *\n * For more context, this solution is also linked in this discussion:\n * https://github.com/perliedman/leaflet-routing-machine/issues/400\n */\n\nexport default function MapComponent (props) {\n  const useStyles = makeStyles(styles)\n  const classes = useStyles()\n  const [map, setMap] = useState(null)\n\n  const tspState = TSPstate.getInstance()\n\n  // TODO: Look into if this can be done inside a (i.e. useEffect) hook instead\n  const saveMap = map => {\n    tspState.setMap(props.Key, map)\n    setMap(map)\n  }\n\n  // Used to do a refresh when the listed dependencies change\n  useEffect(() => {},\n    [map, props.position,\n      props.isPathSolved, props.Key, props.fullScreen])\n\n  useEffect(() => {\n    if (map !== null) {\n      map.leafletElement.invalidateSize()\n\n      if (props.loading) {\n        disableMapHandlers()\n      } else {\n        enableMapHandlers()\n      }\n    }\n  })\n\n  function disableMapHandlers () {\n    getMapHandlersToToggle().forEach(handler => handler.disable())\n  }\n\n  function enableMapHandlers () {\n    getMapHandlersToToggle().forEach(handler => handler.enable())\n  }\n\n  /**\n   * NOTE: A list of all handlers can be found at\n   * https://leafletjs.com/reference-1.6.0.html#handler\n   * (Handler subsection under Map) or via the\n   * map.leafletElement._handlers property\n   */\n  function getMapHandlersToToggle () {\n    const leafletElem = map.leafletElement\n    const mapHandlersToToggle = [\n      leafletElem.boxZoom,\n      leafletElem.dragging,\n      leafletElem.keyboard,\n      leafletElem.scrollWheelZoom,\n      leafletElem.zoomControl,\n      leafletElem.touchZoom\n    ]\n\n    if (leafletElem.tap) {\n      mapHandlersToToggle.push(leafletElem.tap)\n    }\n\n    return mapHandlersToToggle\n  }\n\n  const attributionTemplate = '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n  const attributionUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  let zoom = TSPutils.getZoom(props.Key, props.fullScreen)\n  if (props.fullScreen) {\n    zoom += 1\n  }\n  const maxBounds = TSPutils.getMaxBounds(props.Key)\n\n  return (\n    <>\n      <Map\n        className={props.fullScreen ? classes.expandedMap : classes.map}\n        center={props.position}\n        zoom={zoom}\n        ref={saveMap}\n        maxBounds={maxBounds}\n        minZoom={zoom}\n        doubleClickZoom={false}\n      >\n        <TileLayer attribution={attributionTemplate} url={attributionUrl} />\n        {map !== null &&\n          <Routing\n            map={map}\n            waypoints={props.waypoints}\n            currentGraph={props.currentGraph}\n            isPathSolved={props.isPathSolved}\n            Key={props.Key}\n            loading={props.loading}\n            setLoading={props.setLoading}\n            fullScreen={props.fullScreen}\n            setNumSelectedNodes={props.setNumSelectedNodes}\n            switchingGraphs={props.switchingGraphs}\n            setSwitchingGraphs={props.setSwitchingGraphs}\n            outputToConsole={props.outputToConsole}\n          />}\n      </Map>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useState, useRef, useEffect } from 'react'\n\nimport Button from '../../CustomButtons/Button.js'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport TSPstate from './TSPstate.js'\nimport TSPutils from './TSPutils.js'\n\nimport Graph from './Graph.js'\nimport Keys from './Keys.js'\n\nimport Map from './Map.js'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../../assets/jss/material-kit-react/components/travellingSalespersonStyle.js'\n\nimport './tsp.css'\n\nfunction TravellingSalesperson (props) {\n  const tspState = TSPstate.getInstance()\n\n  // NOTE: The Cities Graph is used as the Default\n\n  const [open, setOpen] = useState(false)\n  const [currentGraph, setCurrentGraph] = useState(Graph[Keys.CITIES])\n  const [position, setPosition] = useState([tspState.getCitiesState().lat, tspState.getCitiesState().lng])\n  const [scroll, setScroll] = useState('paper')\n  const [key, setKey] = useState(Keys.CITIES)\n  const [waypoints, setWaypoints] = useState(TSPutils.getCitiesWaypoints())\n  const [isCitiesPathSolved, setIsCitiesPathSolved] = useState(false)\n  const [isVancouverPathSolved, setIsVancouverPathSolved] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [numSelectedCitiesNodes, setNumSelectedCitiesNodes] = useState(0)\n  const [numSelectedVancouverNodes, setNumSelectedVancouverNodes] = useState(0)\n  const [switchingGraphs, setSwitchingGraphs] = useState({\n    isGraphSwitch: false,\n    key: null\n  })\n\n  const descriptionElementRef = useRef(null)\n\n  const useStyles = makeStyles(styles)\n  const classes = useStyles()\n\n  const loadingContainerClasses = classNames({\n    [classes.loadingContainer]: loading\n  })\n\n  const prevKey = usePrevious(key)\n  const prevWaypoints = usePrevious(waypoints)\n\n  /**\n   * TODO: Confirm below is necessary\n   *\n   * Since setState() is an async function, we want to make sure all properties\n   * of the graph being switched to are set\n   *\n   * Source: https://reactjs.org/docs/react-component.html#setstate\n   */\n  useEffect(() => {\n    if (key !== prevKey && prevKey !== undefined) {\n      tspState.setComponentsUpdated(tspState.getComponentsUpdated() + 1)\n      if (allComponentsAreUpdated()) {\n        onAllComponentsUpdated()\n      }\n    } // eslint-disable-next-line\n  }, [key, prevKey])\n\n  useEffect(() => {\n    if (waypoints !== prevWaypoints && prevWaypoints !== undefined) {\n      tspState.setComponentsUpdated(tspState.getComponentsUpdated() + 1)\n      if (allComponentsAreUpdated()) {\n        onAllComponentsUpdated()\n      }\n    } // eslint-disable-next-line\n  }, [waypoints, prevWaypoints])\n\n  useEffect(() => {},\n    [numSelectedCitiesNodes, numSelectedVancouverNodes,\n      isCitiesPathSolved, isVancouverPathSolved, switchingGraphs])\n\n  useEffect(() => {\n    if (open) {\n      openDescriptionElement()\n    }\n  }, [open])\n\n  const openDescriptionElement = () => {\n    const { current: descriptionElement } = descriptionElementRef\n    if (descriptionElement !== null) {\n      descriptionElement.focus()\n    }\n  }\n\n  useEffect(() => {}, [loading])\n\n  // Source1: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n  // Source2: Ragland, Gabe. “UsePrevious.” UseHooks, 7 Nov. 2018, usehooks.com/usePrevious/.\n  function usePrevious (value) {\n    const ref = useRef()\n\n    useEffect(() => {\n      ref.current = value\n    }, [value])\n\n    return ref.current\n  }\n\n  function allComponentsAreUpdated () {\n    return tspState.getComponentsThatNeedUpdating() === tspState.getComponentsUpdated()\n  }\n\n  function onAllComponentsUpdated () {\n    tspState.setComponentsUpdated(0)\n    setSwitchingGraphs({\n      isGraphSwitch: true,\n      key: key\n    })\n  }\n\n  /**\n   * NOTE: We use TSPstate.js's getIsPathSolved(key).size since\n   * the state values may not be updated immediately after setIsPathSolved()\n   * is called since it calls async setters\n   */\n  function getIsPathSolved () {\n    return tspState.getIsPathSolved(key)\n  }\n\n  function setIsPathSolved (value) {\n    switch (key) {\n      case Keys.CITIES:\n        setIsCitiesPathSolved(value)\n        break\n      case Keys.VANCOUVER:\n        setIsVancouverPathSolved(value)\n        break\n      default:\n        break\n    }\n  }\n\n  /**\n   * NOTE: We use TSPstate.js's getSelectedNodeIds(key).size since\n   * the state values may not be updated immediately after setNumSelectedNodes()\n   * is called since it calls async setters\n   */\n  function getNumSelectedNodes () {\n    return tspState.getSelectedNodeIds(key).size\n  }\n\n  function setNumSelectedNodes (value) {\n    switch (key) {\n      case Keys.CITIES:\n        setNumSelectedCitiesNodes(value)\n        break\n      case Keys.VANCOUVER:\n        setNumSelectedVancouverNodes(value)\n        break\n      default:\n        break\n    }\n  }\n\n  function onResetClick () {\n    setLoading(true)\n    tspState.setIsLoading(true)\n\n    props.outputToConsole(`Resetting the ${key.toUpperCase()} graph...`)\n    updateMainMapMarkers(key)\n    resetGraphLines(key)\n    tspState.resetGraphStates(key)\n\n    setLoading(false)\n    tspState.setIsLoading(false)\n\n    setIsPathSolved(false)\n    tspState.setIsPathSolved(key, false)\n\n    setNumSelectedNodes(0)\n  }\n\n  function updateMainMapMarkers (key) {\n    const mainMapMarkers = tspState.getMainMapMarkers(key)\n    const keys = Object.keys(mainMapMarkers)\n    keys.forEach(index => {\n      mainMapMarkers[index].fire('updating', TSPutils.getBlueIcon())\n    })\n  }\n\n  function resetGraphLines (key) {\n    const graphLines = tspState.getLines(key)\n    Object.keys(graphLines).forEach(index => {\n      graphLines[index].fire('reset')\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={loadingContainerClasses}>\n        {loading && <CircularProgress size={68} className={classes.mapProgress} />}\n        <div className={TSPutils.isCitiesGraph(key) ? classes.mapContainer : classes.hidingContainer}>\n          <Map\n            position={position}\n            isPathSolved={isCitiesPathSolved}\n            waypoints={TSPutils.getCitiesWaypoints()}\n            currentGraph={Graph[Keys.CITIES]}\n            Key={Keys.CITIES}\n            loading={loading}\n            setLoading={setLoading}\n            setNumSelectedNodes={setNumSelectedNodes}\n            switchingGraphs={switchingGraphs}\n            setSwitchingGraphs={setSwitchingGraphs}\n            outputToConsole={props.outputToConsole}\n          />\n        </div>\n        <div className={key === Keys.VANCOUVER ? classes.mapContainer : classes.hidingContainer}>\n          <Map\n            position={position}\n            isPathSolved={isVancouverPathSolved}\n            waypoints={TSPutils.getVancouverWaypoints()}\n            currentGraph={Graph[Keys.VANCOUVER]}\n            Key={Keys.VANCOUVER}\n            loading={loading}\n            setLoading={setLoading}\n            setNumSelectedNodes={setNumSelectedNodes}\n            switchingGraphs={switchingGraphs}\n            setSwitchingGraphs={setSwitchingGraphs}\n            outputToConsole={props.outputToConsole}\n          />\n        </div>\n        <div className='attributionText'>\n          Icons made by <a\n            href='https://www.flaticon.com/authors/freepik'\n            title='Freepik'\n          >Freepik</a> from <a\n            href='https://www.flaticon.com/'\n            title='Flaticon'\n          >www.flaticon.com</a>\n        </div>\n      </div>\n      <div className={classes.buttonGroup}>\n        <ButtonGroup\n          variant='contained'\n          aria-label='contained primary button group'\n        >\n          <Button\n            size='sm'\n            disabled={loading || TSPutils.isCitiesGraph(key)}\n            onClick={() => {\n              const tspSetters = {\n                setCurrentGraph: setCurrentGraph,\n                setPosition: setPosition,\n                setKey: setKey,\n                setWaypoints: setWaypoints\n              }\n              TSPutils.onCitiesButtonClick(tspSetters)\n            }}\n            color='geeringupSecondary'\n          >\n            Cities\n          </Button>\n          <Button\n            size='sm'\n            disabled={loading || TSPutils.isVancouverGraph(key)}\n            onClick={() => {\n              const tspSetters = {\n                setCurrentGraph: setCurrentGraph,\n                setPosition: setPosition,\n                setKey: setKey,\n                setWaypoints: setWaypoints\n              }\n              TSPutils.onVanButtonClick(tspSetters)\n            }}\n            color='geeringupSecondary'\n          >\n            Vancouver\n          </Button>\n          <Button\n            size='sm'\n            disabled={loading || TSPutils.isFlowersGraph(key)}\n            onClick={() => {\n              props.outputToConsole('FLOWERS graph is coming soon!')\n              // TODO\n              // TSPutils.onFlowersButtonClick(setCurrentGraph)\n            }}\n            color='geeringupSecondary'\n          >\n            Flowers\n          </Button>\n        </ButtonGroup>\n      </div>\n      <div className={classes.tspInput}>\n        <Button\n          color='geeringupPrimary'\n          disabled={loading || (getNumSelectedNodes() === 0 && !tspState.getIsPathSolved(key))}\n          onClick={onResetClick}\n        >\n          Reset\n        </Button>\n        <Button\n          color='geeringupSecondary'\n          disabled={loading || (getNumSelectedNodes() < 3 && getNumSelectedNodes() !== 0) || getIsPathSolved()}\n          onClick={() => {\n            setLoading(true)\n            tspState.setIsLoading(true)\n            const graphParams = {\n              currentGraph: currentGraph,\n              key: key\n            }\n            const setters = {\n              setIsPathSolved: setIsPathSolved,\n              setLoading: setLoading\n            }\n            const consoleFns = {\n              outputToConsole: props.outputToConsole,\n              appendToConsole: props.appendToConsole\n            }\n            TSPutils.handleClickSolve(graphParams, setters, consoleFns)\n          }}\n        >\n          Solve\n        </Button>\n        <Button\n          color='geeringupPrimary'\n          disabled={loading}\n          onClick={() => {\n            setLoading(true)\n            tspState.setIsLoading(true)\n\n            TSPutils.handleClickOpen('paper', setOpen, setScroll)\n\n            setLoading(false)\n            tspState.setIsLoading(false)\n          }}\n        >\n          Full Screen\n        </Button>\n      </div>\n      <Dialog\n        open={open}\n        fullScreen\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        maxWidth={false}\n      >\n        <DialogTitle id='scroll-dialog-title'>Full Screen</DialogTitle>\n        <DialogContent className={classes.dialogContent} dividers={scroll === 'paper'}>\n          <div className={TSPutils.isCitiesGraph(key) ? classes.expandedMap : classes.hidingContainer}>\n            <Map\n              position={position}\n              isPathSolved={isCitiesPathSolved}\n              waypoints={TSPutils.getCitiesWaypoints()}\n              currentGraph={Graph[Keys.CITIES]}\n              Key={Keys.CITIES}\n              loading={loading}\n              setLoading={setLoading}\n              fullScreen\n              setNumSelectedNodes={setNumSelectedNodes}\n              switchingGraphs={switchingGraphs}\n              setSwitchingGraphs={setSwitchingGraphs}\n              outputToConsole={props.outputToConsole}\n            />\n          </div>\n          <div className={key === Keys.VANCOUVER ? classes.expandedMap : classes.hidingContainer}>\n            <Map\n              position={position}\n              isPathSolved={isVancouverPathSolved}\n              waypoints={TSPutils.getVancouverWaypoints()}\n              currentGraph={Graph[Keys.VANCOUVER]}\n              Key={Keys.VANCOUVER}\n              loading={loading}\n              setLoading={setLoading}\n              fullScreen\n              setNumSelectedNodes={setNumSelectedNodes}\n              switchingGraphs={switchingGraphs}\n              setSwitchingGraphs={setSwitchingGraphs}\n              outputToConsole={props.outputToConsole}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              TSPutils.handleClose(setOpen, setLoading)\n            }}\n            color='geeringupSecondary'\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default TravellingSalesperson\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\nimport makeLongRequest from '../LongRequest'\n\n/**\n * Widget is meant to be an example base class.\n * This should be able to be used to test other\n * functionalities.\n *\n * Any more advanced widget implemented should\n * have the same prop interface (or a larger one).\n * This is so that all the widgets are interchangeable\n * fairly easily. If different interfaces are needed,\n * then a dictionary for default declaration types can\n * be made. For now, that is unneeded.\n *\n * Originally, this Widget class was going to supply the description,\n * but upon further consideration, it is best that descriptions\n * be supplied in a JSON so rerendering this widget doesn't constantly\n * try to update upstream states and cause a whole lot of unnecessary\n * computation.\n *\n * Example Use::\n *\n *  const [APIKey, setAPIKey] = useState('')\n *  const [textLines, setTextLines] = useState([])\n *  return (\n *    <Widget\n *      id='myWidget'\n *      getAPIKey={() => APIKey}\n *      outputToConsole={(line) => {\n *        setTextLines(textLines.concat(line))\n *      }}\n *    />\n *  )\n *\n * Properties:\n * @prop {string} id - (Required) This will get extended to\n * serve as the id base string for all underlying components.\n * @prop {func()} getAPIKey - (Required) This needs\n * to be a function that can be called to return the current API\n * key.\n * NOTE: If it returns '', this is equivalent to choosing the\n * simulator.\n * @prop {func(string)} outputToConsole - (Required) This function\n * should take a single string (a line of text), and concatenate\n * it to the current console output string array. If the Console\n * is not being used, this can do anything you want with that\n * string, but you should probably output it in some way.\n */\nclass Widget extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      status: 'idle'\n    }\n  }\n\n  /**\n   * An example of a call to solve the widget puzzle\n   */\n  async callSolver () {\n    if (this.state.status === 'waiting...') return\n\n    const consoleMsg = 'Making a call using LongRequest'\n    this.props.outputToConsole(consoleMsg)\n\n    /* Example async call */\n    // this.pseudoHash(APIKey).then((result) => { this.resolveSolve(result) })\n\n    const params = {\n      time: 5,\n      typeOfProblem: 'nurseScheduling',\n      n_nurses: 5,\n      n_days: 4\n    }\n\n    /** How to make a Long Request:\n     * Note that each of the four functions should take an XML request\n     * as a parameter.\n     */\n    makeLongRequest(\n      params,\n      (xhr) => { this.props.outputToConsole('Queued!') },\n      (xhr) => { this.props.outputToConsole(xhr.response.jobStatus) },\n      (xhr) => {\n        this.props.outputToConsole('Finished w result: ' + xhr.response.n)\n        this.props.outputToConsole(JSON.stringify(xhr.response))\n        this.setState({\n          status: 'Solved!'\n        })\n      },\n      (xhr) => {\n        this.props.outputToConsole('Something went wrong')\n        console.log(xhr)\n        this.props.outputToConsole(JSON.stringify(xhr))\n        this.setState({\n          status: 'oops!'\n        })\n      },\n      this.props.outputToConsole\n    )\n\n    /* This could be a fetch() call, or a classical solver, or anything in between */\n    this.setState({\n      status: 'waiting...'\n    })\n  }\n\n  /** Simply simulate an async call that may take a while to resolve\n   * WARNING: This is not a good hash function\n   */\n  async pseudoHash (toHash) {\n    var hash = 0\n    for (var i = 0; i < toHash.length; ++i) {\n      hash += ((toHash.charCodeAt(i) * (i + 1)) % 127) * Math.pow(128, i)\n    }\n    var hashString = ''\n    while (hash > 0) {\n      var newChar\n      if (hash % 36 < 10) newChar = String.fromCharCode(hash % 36 + '0'.charCodeAt(0))\n      else newChar = String.fromCharCode(hash % 36 + 'a'.charCodeAt(0) - 10)\n      hashString += newChar\n      hash = Math.floor(hash / 36)\n    }\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    return hashString\n  }\n\n  /**\n   * An example of what one might want to do with a result\n   * Also an example of interacting with console\n   * @param {String} result - The return value or result of the async solver call\n   */\n  async resolveSolve (result) {\n    this.setState({\n      status: 'Solved!'\n    })\n    this.props.outputToConsole('Problem was solved! Ans: ' + result)\n  }\n\n  /**\n   * A simple renderer so all the utility of our example widget\n   * is visible.\n   */\n  render () {\n    return (\n      <div>\n        <button\n          type='button'\n          onClick={() => {\n            this.props.outputToConsole('sorry, I\\'m a blank app')\n          }}\n          id={this.props.id + '_button'}\n        >\n          Click me to solve!\n        </button>\n        <p>\n          {this.state.status}\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Widget\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function NurseBriefDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        This app schedules nurses to shifts using a quantum computer.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        A schedule will be found to assign nurses to shifts so that nurses work\n        similar amounts, no nurse works twice in a row, and there are enough nurses\n        per day to take care of patients.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        This is a <i>simplified</i> model of a nursing facility.\n        In real facilities, the constraints may differ and may be somewhat more complicated,\n        to accomodate with changing demand and nurses' availability schedules.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nexport default function NurseReadMoreDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph>\n        <b>Objective</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        The objective of this app is to create a nurse work schedule so that:\n        <ol>\n          <li>No nurse works two or more days in a row</li>\n          <li>There are exactly enough nurses working each day</li>\n          <li>All nurses should have roughly even work schedules</li>\n        </ol>\n        If such a perfect schedule is impossible, nurses may be scheduled to work\n        twice or more in a row, and there may be understaffing.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Instructions</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        <ol>\n          <li>Input the problem contraints you want</li>\n          <li>Click \"Solve\" to solve on a quantum computer</li>\n          <li>There may be a delay while waiting for an available computer</li>\n          <li>The compact schedule is then shown in a calendar</li>\n          <li>Click \"More Detail\" to see a complete schedule in a grid</li>\n        </ol>\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Quantum Randomness</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        D-Wave's quantum annealer is probabilistic, and as such, you may get a\n        different solution every time you click \"Solve\". Try solving multiple\n        times to see if you get different answers!\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Problem Background</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        This application uses D-Wave System's Nurse\n        Scheduling <Link href='https://github.com/dwave-examples/nurse-scheduling' style={{ color: '#1599bf' }}>Toy Example code</Link>.\n      </Typography>\n      <Typography align='left' paragraph>\n        Similar to the Sudoku puzzle, Nurse Scheduling is a constraint satisfactory\n        problem (CSP).\n        There are a given set of constraints that an ideal solution must follow. We\n        run this problem on D-Wave System's Quantum Processing Unit (QPU).\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function SudokuBriefDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        Sudoku is a logic-based, number-placement puzzle. To complete it, you must fill\n        a 9x9 grid with single digits such that each column, row, and subgrid contain all\n        of the digits from 1 to 9.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        While this puzzle can be solved on a <i>classical</i> computer, let's try solving\n        it on a <i>quantum annealer</i>. In particular, we will be using D-Wave System's 2000Q\n        Quantum Processing Unit.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nexport default function SudokuReadMoreDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph>\n        <b>Objective</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        The goal of this game is to demonstrate the flexibility of a Quantum\n        Annealing computer by solving a classic puzzle, Sudoku.\n      </Typography>\n      <Typography align='left' paragraph>\n        A Sudoku grid is a 9x9 grid split up into 9 3x3 blocks.\n        Each cell in the Sudoku grid must contain <i>one and only one</i> digit from 1-9:\n        <ul>\n          <li><b>No</b> row may have duplicate digits</li>\n          <li><b>No</b> column may have duplicate digits</li>\n          <li><b>No</b> subgrid may have duplicate digits</li>\n        </ul>\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Instructions</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        <ol>\n          <li>\n            Design your Sudoku: Click on the cells and type in your desired digit\n            <br />\n            You can also use the \"Random\" button for a random Sudoku puzzle\n          </li>\n          <li>Click \"Solve\" to send the puzzle to a quantum computer</li>\n          <li>It will take some time to compute the solution</li>\n          <li>If the Sudoku has a solution, one will be found and shown!</li>\n        </ol>\n      </Typography>\n      <Typography align='left' paragraph>\n        When you submit a problem to one of D-Wave's solvers, you are put in a queue. The time it\n        takes to solve your Sudoku grid will depend on where you are in that queue.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Quantum Randomness</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        D-Wave's solvers are probabilistic, meaning that each run <i>might</i> result in a different\n        solution. That is why problems are <i>sampled</i> many times, to make sure that the correct\n        solution is identified. Well crafted Sudoku puzzles have <i>one</i> unique solution. In some\n        cases, you can design a Sudoku puzzle such that there may be multiple possible solutions.\n      </Typography>\n      <Typography align='left' paragraph>\n        For instance, what do you think will happen if you submit a blank grid to the solver? Try it\n        out multiple times and see if you get the same answer each time!\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Problem Background</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        This application uses a script from\n        D-Wave's <Link href='https://github.com/dwave-examples/sudoku' style={{ color: '#1599bf' }}>gallery of examples</Link>.\n        The Sudoku puzzle is modeled as a <i>constraint satisfaction problem</i>,\n        or <Link href='https://en.wikipedia.org/wiki/Constraint_satisfaction#Constraint_satisfaction_problem' style={{ color: '#1599bf' }}>CSP</Link>.\n        These are problems\n        in mathematics where the solution is the state of a set of objects such that they satisfy certain\n        constraints or limitations. For instance, in Sudoku, there are a number of requirements or constraints\n        for a solution to be correct.\n      </Typography>\n      <Typography align='left' paragraph>\n        CSPs allow for finding useful general-purpose algorithms that help tackle many everyday problems.\n        The applications of CSPs range from solving logic puzzles and scheduling nurses on shifts to\n        applications in artifical intelligence and building neural networks.\n      </Typography>\n      <Typography align='left' paragraph>\n        D-Wave's sudoku-solving script uses a hybrid\n        solver, <Link href='https://docs.dwavesys.com/docs/latest/doc_leap_hybrid.html' style={{ color: '#1599bf' }}>Kerberos</Link>.\n        Kerberos breaks problems down into smaller pieces and solves each on a quantum computer, before combining them to\n        provide one final solution.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function LatticeBriefDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        This is a two-colouring problem on a hexagonal lattice.\n        With only two colours, make the fewest possible neighbours share the same colour.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        To play, you design your own grid or use a randomly generated one.\n        After \"locking in\" your grid, try to minimize neighbouring nodes\n        with the same colour!\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        After trying to optimize your own grid, you can then give the layout\n        to D-wave's quantum computer, which will run this optimization problem\n        50 times on its quantum computer and return the best result.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n// import { List, ListItemText } from '@material-ui/core'\n\nexport default function LatticeReadMoreDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph>\n        <b>Objective</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        The objective of the game is to minimize the number of conflicts between neighbouring\n        cells. Two cells are in conflict if their colour is the same. You can tell if\n        a conflict arises, because a thick line will appear to connect the two\n        centers of the cells.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Instructions</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        <ol>\n          <li>\n            Design your grid: Click on the hexagons to turn them on or off\n            <br />\n            You can also use the \"Random Grid\" button\n          </li>\n          <li>Lock your grid: Click the \"Lock Grid\" button</li>\n          <li>Click the hexagons to change the colour of the nodes.</li>\n          <li>Try to get the lowest score you can!</li>\n          <li>Click \"Get Quantum Solution\" to send the problem to a quantum computer</li>\n        </ol>\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Quantum Randomness</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        Make a full grid, and try getting the quantum solution a couple of times.\n        The solution was probably different each time!\n      </Typography>\n      <Typography align='left' paragraph>\n        This is one of the cool things about quantum computing, it's random!\n        Whenever there are many optimal solutions, the quantum computer will\n        find one of them at random.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Problem Background</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        In condensed matter physics, this problem occurs in the context of finding\n        the ground state of the antiferromagnetic Ising model on a triangular lattice.\n      </Typography>\n      <Typography align='left' paragraph>\n        This problem is an easier version of the general problem of graph two-colouring,\n        which is equivalent to\n        the <Link href='https://en.wikipedia.org/wiki/Maximum_cut' style={{ color: '#1599bf' }}>Maximum Cut</Link> problem,\n        a problem\n        in <Link href='https://en.wikipedia.org/wiki/Graph_theory' style={{ color: '#1599bf' }}>Graph Theory</Link>.\n        This problem is what is\n        called <Link href='https://en.wikipedia.org/wiki/NP-hardness' style={{ color: '#1599bf ' }}>NP-Hard</Link>,\n        which basically means that computers take a very long time to solve large\n        versions of it.\n      </Typography>\n      <Typography align='left' paragraph>\n        This two colouring problem is a special case of the optimization problem\n        implemented by D-Wave's quantum annealer. The annealer\n        uses <Link href='https://en.wikipedia.org/wiki/Quantum_tunnelling' style={{ color: '#1599bf' }}>Quantum Tunnelling</Link> to\n        speed up finding the optimum solution. It's not known exactly when\n        this strategy offers an advantage compared to non-quantum methods,\n        but we're continuing to explore!\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function TSPbriefDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            Imagine you are a salesperson, and you are planning to visit a list of cities\n            and return to the city where you started.\n            You care only about taking the shortest possible path.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            The Travelling Salesperson Problem is to find the shortest path,\n            having already determined the list of locations and the shortest path between any\n            pair of cities.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            Select the cities you want to visit, click \"Solve\", and then admire the graph in Full Screen.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nexport default function TSPreadMoreDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph>\n        <b>Objective</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        This is an app to help visualize and solve the TSP for a preset list of locations\n        throughout North America and Vancouver.\n        This app runs the TSP on Dwave's Quantum Annealer.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Instructions</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        <ol>\n          <li>Start off by choosing the locations you would like to visit by clicking on them to select them</li>\n          <li>Then click \"Solve\" to send the problem to the quantum annealer</li>\n          <li>After solving, click \"Full Screen\" to look more closely, or \"Reset\" to solve a different problem.</li>\n        </ol>\n      </Typography>\n      <Typography align='left' paragraph>\n        When you submit a problem to one of D-Wave's solvers, you are put in a queue.\n        The time it takes to solve your TSP will depend on where you are in that queue.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Quantum Randomness</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        D-Wave's solvers are probabilistic, meaning that each run <i>might</i> result in a different\n        solution. That is why problems are <i>sampled</i> many times, to make sure that the correct\n        solution is identified. The TSP usually has <i>one</i> unique optimal solution,\n        but many close-to-optimal solutions. D-Wave's computer usually finds one of these\n        close-to-optimal solutions.\n      </Typography>\n      <Typography align='left' paragraph>\n        For instance, try solving for all the cities a couple times. It may differ slightly,\n        because there are several paths with similar total distance.\n      </Typography>\n      <Typography align='left' paragraph>\n        <b>Problem Background</b>\n      </Typography>\n      <Typography align='left' paragraph>\n        This application uses a script from\n        D-Wave's Ocean tools.\n        The code for the tool can be found <Link href='https://docs.ocean.dwavesys.com/projects/dwave-networkx/en/latest/_modules/dwave_networkx/algorithms/tsp.html#traveling_salesperson_qubo' style={{ color: '#1599bf' }}>in Dwave's documentation</Link>.\n      </Typography>\n      <Typography align='left' paragraph>\n        Using classical computing we cannot always find the best solution\n        to this problem in a reasonable time, especially when the number of cities increases.\n        This is because the solution requires an exponential amount of resources.\n      </Typography>\n      <Typography align='left' paragraph>\n        On the other hand, using quantum annealing, we can solve this problem faster\n        for a larger list of cities. The solution offered for this problem can be used\n        for solving any other form of TSP, such as finding the shortest path a bee can take\n        to visit all the flowers in an area.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function TSPbriefDescriptionText () {\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            This is a graphical representation of the Ising Model of a qubit and the annealing\n            process as used in Dwave's quantum annealer.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            The qubit is initially in an equal superposition of states <b>1</b> and <b>0</b>.\n            Then, a \"hamiltonian\" is slowly applied, changing the energy of the states.\n            This is annealing.\n            Finally, the system resolves. As in nature, it prefers low-energy states.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n            A smaller H-Value means a lower energy for the <b>1</b> state, and the opposite is true\n            for a higher H-Value.\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport 'katex/dist/katex.min.css'\nimport './typo.css'\nimport { InlineMath, BlockMath } from 'react-katex'\n\nexport default function TSPreadMoreDescriptionText () {\n  // var BlockMath = ReactKatex.BlockMath\n  return (\n    <>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        This model is a graphical representation of the Ising Model of a <b>single</b> qubit\n        and the annealing process as used in Dwave's quantum annealer.\n        This tool is best used alongside a session teaching about the quantum annealer.\n        For a more in-depth explanation, visit D-wave's page:\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        <Link href='https://docs.dwavesys.com/docs/latest/c_gs_2.html' style={{ color: '#1599bf' }}>What is Quantum Annealing?</Link>\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        <b>Controls</b>\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        The weight slider and H-value setter are connected. The lower the H-value,\n        the more bias the system has towards the state <b>1</b>.\n        If the H-value is positive, the system has negative bias towards the <b>1</b> state,\n        so it has bias towards the <b>0</b> state.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        The annealing time describes the amount of time that the annealing process might take.\n        Of course, it's not the exact time the visual animation will take!\n        The longer the annealing process, the more likely that you will get the right answer.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        Choose a weight and annealing time, then click <b>\"Simulate\"</b>.\n        You'll get an animation and a result of the process.\n        According to the settings used, you're more or less likely to get a <b>0</b> or <b>1</b>.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        Afterwards, you can manually slide the time slider around to check out the intermediate\n        states.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        <b>Quantum Annealing</b>\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        The annealing process is done by applying two Hamiltonians\n        (mathematical description of problem weights)\n        with changing strengths over time.\n        The Hamiltonian <b>A</b> puts all the qubits in superposition of <b>0</b> and <b>1</b>.\n        The Hamiltonian <b>B</b> encodes the problem we want to solve. Check out the Math\n        section below for more info on how this is done.\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        First, <b>A</b> is applied at full strength, and is slowly eased out as <b>B</b> is\n        applied.\n        Due to a quantum mechanical concept,\n        the <Link href='https://en.wikipedia.org/wiki/Adiabatic_theorem' style={{ color: '#1599bf' }}>Adiabatic Theorem</Link>,\n        when this process is done slowly enough, the system will stay in the lowest energy state.\n      </Typography>\n      <div>\n        <img className='readmore-img' src={require('../../images/anneal_schedule.png')} />\n      </div>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        <b>Math</b>\n      </Typography>\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        The Ising model is actually a mathematical model describing an energy landscape.\n        The energy is determined by a state <b>s</b>, and each qubit is represented by a variable.\n        In a state <b>s</b>, there are N variables, <InlineMath math='s_1, s_2, \\dots, s_N' />.\n        Each variable has a weight (H-val) <InlineMath math='h_i' />.\n        Each pair of variables has a coupling weight <InlineMath math='J_{i,j}' />.\n      </Typography>\n      <BlockMath math='E_{ising}(\\textbf{s}) = \\sum_{i=1}^N h_i s_i + \\sum_{i=1}^N \\sum_{j=i+1}^N J_{i,j} s_i s_j' />\n      <Typography align='left' paragraph variant='body2' color='textSecondary' component='p'>\n        <b>QUBO vs Ising</b>\n      </Typography>\n      <Typography align='left' paragraph variant='body2'>\n        There are two functionally equivalent models based on this equation:\n        <ul>\n          <li><b>QUBO:</b> Quadratic Unconstrained Binary Optimization\n            <ul>\n              <li>Each variable is either <b>0</b> or <b>1</b>.</li>\n            </ul>\n          </li>\n          <li><b>Ising:</b>\n            <ul>\n              <li>Each variable is either <b>-1</b> or <b>1</b>.</li>\n            </ul>\n          </li>\n        </ul>\n      </Typography>\n    </>\n  )\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\nimport SudokuGame from './Sudoku/Sudoku'\nimport NurseScheduler from './Nurse/NurseScheduler'\nimport LatticeColourer from './Lattice/LatticeColourer'\nimport IsingModel from './Ising/IsingModel'\nimport TSP from './TSP/TravellingSalesperson'\nimport Widget from './EmptyWidget/EmptyWidget'\n\nimport NurseBriefDescriptionText from '../Typography/NurseBriefDescriptionText'\nimport NurseReadMoreDescriptionText from '../Typography/NurseReadMoreDescriptionText'\n\nimport SudokuBriefDescriptionText from '../Typography/SudokuBriefDescriptionText'\nimport SudokuReadMoreDescriptionText from '../Typography/SudokuReadMoreDescriptionText'\n\nimport LatticeBriefDescriptionText from '../Typography/LatticeBriefDescriptionText'\nimport LatticeReadMoreDescriptionText from '../Typography/LatticeReadMoreDescriptionText'\n\nimport TSPbriefDescriptionText from '../Typography/TSPbriefDescriptionText'\nimport TSPreadMoreDescriptionText from '../Typography/TSPreadMoreDescriptionText'\n\nimport IsingBriefDescriptionText from '../Typography/IsingBriefDescriptionText'\nimport IsingReadMoreDescriptionText from '../Typography/IsingReadMoreDescriptionText'\n\nconst widgetList = {\n  nurse: {\n    enabler: 'isNurseScheduler',\n    route: '/app/nurse',\n    name: 'nurse-scheduler',\n    title: 'The Nurse Scheduling Problem',\n    briefDescriptionText: <NurseBriefDescriptionText />,\n    readMoreDescriptionText: <NurseReadMoreDescriptionText />,\n    brand: 'Nurse Scheduler',\n    visible: true,\n    component: NurseScheduler\n  },\n  sudoku: {\n    enabler: 'isSudokuSolver',\n    route: '/app/sudoku',\n    name: 'sudoku-solver',\n    title: 'The Sudoku Problem',\n    briefDescriptionText: <SudokuBriefDescriptionText />,\n    readMoreDescriptionText: <SudokuReadMoreDescriptionText />,\n    brand: 'Sudoku Solver',\n    visible: true,\n    component: SudokuGame\n  },\n  lattice: {\n    enabler: 'isLatticeColourer',\n    route: '/app/lattice',\n    name: 'lattice-colourer',\n    title: 'Lattice Two-Colouring',\n    briefDescriptionText: <LatticeBriefDescriptionText />,\n    readMoreDescriptionText: <LatticeReadMoreDescriptionText />,\n    brand: 'Lattice Two-Colouring',\n    visible: true,\n    component: LatticeColourer\n  },\n  ising: {\n    enabler: 'isIsingModel',\n    route: '/app/ising',\n    name: 'ising-model',\n    title: 'Ising Model Visualiser',\n    briefDescriptionText: <IsingBriefDescriptionText />,\n    readMoreDescriptionText: <IsingReadMoreDescriptionText />,\n    brand: 'Ising Model Visualiser',\n    visible: true,\n    component: IsingModel\n  },\n  tsp: {\n    enabler: 'isTSP',\n    route: '/app/tsp',\n    name: 'tsp',\n    title: 'Travelling Salesperson',\n    briefDescriptionText: <TSPbriefDescriptionText />,\n    readMoreDescriptionText: <TSPreadMoreDescriptionText />,\n    brand: 'Travelling Salesperson',\n    visible: true,\n    component: TSP\n  },\n  default: {\n    enabler: 'isNothing',\n    route: '/app/default',\n    name: 'no-app',\n    title: 'No Title Found',\n    briefDescriptionText: 'No Brief Description Found',\n    readMoreDescriptionText: 'No Read More Description Text Found',\n    brand: 'No game found',\n    visible: false,\n    component: Widget\n  }\n}\n\nexport default widgetList\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nconst buttonGroupStyle = theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(3),\n    },\n  },\n  menuItem: {\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    color: '#43413E',\n    fontWeight: '400',\n    fontSize: '16px',\n    padding: '0.5rem 1.5rem',\n  },\n});\n\nexport default buttonGroupStyle","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// core components\nimport widgetList from '../Widget/widgetList'\nimport styles from '../../assets/jss/material-kit-react/components/buttonGroupStyle.js'\n// styling\nimport './component_css/gameMenu.css'\n\nconst useStyles = makeStyles(styles)\n\nexport default function GameMenu (props) {\n  const classes = useStyles()\n  const { setWidget } = props\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup\n        orientation=\"vertical\"\n        color=\"#E0E0E0\"\n        aria-label=\"vertical outlined primary button group\"\n      >\n        <Typography variant=\"h6\" className='menu_title'>\n          <Box letterSpacing={3}>\n            GAMES\n          </Box>\n        </Typography>\n        {Object.keys(widgetList).map((widget) => {\n          if (widgetList[widget].visible === false) return ''\n          return (\n            <Button\n              key={widget}\n              onClick={() => {\n                setWidget(widget)\n              }}\n              className={classes.menuItem}\n            >\n              {widgetList[widget].brand}\n            </Button>\n          )\n        })}\n      </ButtonGroup>\n    </div>\n  );\n}","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nconst consoleStyle = theme => ({\n  console: {\n    margin: theme.spacing(3)\n    // '& > *': {\n    //   // width: 'calc(314.9765px - (2 * 15px))',\n    //   margin: 'auto'\n    // }\n  },\n  toolbar: {\n    minHeight: 30,\n    padding: 0,\n  },\n  consoleButton: {\n    padding: 0,\n    paddingLeft: 20,\n  },\n  consoleTitle: {\n    paddingRight: 20,\n    flexGrow: 1,\n  }\n})\n\nexport default consoleStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useRef, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport PropTypes from 'prop-types'\nimport XMLHttpRequest from 'xhr2'\n\n// styling\nimport './component_css/console.css'\nimport styles from '../../assets/jss/material-kit-react/components/consoleStyle.js'\n// import CardBody from '../Card/CardBody'\nconst useStyles = makeStyles(styles)\n\n/**\n * Console is a React component that displays lines of\n * text, and when updated, scrolls to the bottom of its output\n *\n * Note: to change size, shape, and most non-scroll\n * properties, modify the called css\n *\n *\n * Example Use::\n *\n *  <Console textLines={['line1', 'line2']} />\n *\n * @param {Array(String)} textLines - A textLines property is required\n *  Modify this variable in a parent's state to reload and update\n *  the console.\n * @param {String} title - A title for the console\n * @param {Bool} getIP - Whether or not to try to get IP\n */\nfunction Console (props) {\n  const classes = useStyles()\n\n  // This is a React Reference object, used for statically\n  // referencing a particular element.\n  const divBotRef = useRef(null)\n  const scrollRef = useRef(null)\n\n  var [xhr, setXHR] = useState(null)\n  var [IP, setIP] = useState('')\n\n  if (!xhr && props.getIP) {\n    xhr = new XMLHttpRequest()\n    const url = '/get_ip'\n    const async = true\n    xhr.open('GET', url, async)\n    xhr.responseType = 'json'\n    xhr.onload = () => {\n      if (xhr.response) {\n        setIP(xhr.response.ip)\n      }\n    }\n    xhr.setRequestHeader('Content-type', 'application/json')\n    xhr.send()\n    setXHR(xhr)\n  }\n\n  const lines = props.textLines\n\n  // The Reference object comes in handy here, where\n  // we scroll it into view. This happens every time\n  // the console is updated by React.\n  useEffect(() => {\n    // divBotRef.current.scrollIntoView(\n    //   {\n    //     block: 'nearest',\n    //     inline: 'start'\n    //   }\n    // )\n    scrollRef.current.scrollTop = scrollRef.current.scrollHeight\n  })\n\n  // Note, the empty list element at the bottom has the\n  // Reference attached. This means that scrolling to it\n  // has the effect of scrolling to the bottom of the console.\n  return (\n    <div className={classes.console}>\n      <div id='console_head' className='scroll_head'>\n        <Toolbar className={classes.toolbar}>\n          <IconButton className={classes.consoleButton} edge=\"start\" color=\"inherit\">\n            <RemoveIcon />\n          </IconButton>\n          <div className={classes.consoleTitle}>\n            {props.title ? props.title : 'Console'}{IP ? `@${IP}` : ''}\n          </div>\n        </Toolbar>\n      </div>\n      <div id='console' className='scroll_console' ref={scrollRef}>\n        <ul>\n          <li>> Quantum Application Console</li>\n          {lines.map((line, index) => {\n            return <li key={index}>> {line}</li>\n          })}\n          <li ref={divBotRef} />\n        </ul>\n      </div>\n    </div>\n  )\n}\n\n// Require the correct property to be passed\nConsole.propTypes = {\n  textLines: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string\n}\n\nexport default Console\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nconst cardStyle = {\n  card: {\n    border: '0',\n    marginBottom: '9px',\n    marginTop: '39px',\n    borderRadius: '6px',\n    color: 'rgba(0, 0, 0, 0.87)',\n    background: '#fff',\n    width: '100%',\n    boxShadow:\n        '0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '0',\n    wordWrap: 'break-word',\n    fontSize: '.875rem',\n    transition: 'all 300ms linear'\n  },\n  cardPlain: {\n    background: 'transparent',\n    boxShadow: 'none'\n  },\n  cardCarousel: {\n    overflow: 'hidden'\n  }\n}\n\nexport default cardStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\n// @material-ui/icons\n\n// core components\nimport styles from '../../assets/jss/material-kit-react/components/cardStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function Card (props) {\n  const classes = useStyles()\n  const { className, children, plain, carousel, ...rest } = props\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardCarousel]: carousel,\n    [className]: className !== undefined\n  })\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  )\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  carousel: PropTypes.bool,\n  children: PropTypes.node\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nconst cardBodyStyle = {\n  cardBody: {\n    padding: '0.9375rem 1.875rem',\n    flex: '1 1 auto'\n  }\n}\n\nexport default cardBodyStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\n// @material-ui/icons\n\n// core components\nimport styles from '../../assets/jss/material-kit-react/components/cardBodyStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function CardBody (props) {\n  const classes = useStyles()\n  const { className, children, ...rest } = props\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [className]: className !== undefined\n  })\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  )\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport { cardTitle } from '../../material-kit-react.js'\n\nconst descriptionCardStyle = theme => ({\n  container: {\n    // width: 'calc(((1140px - (462.047px + 2 * 8px)) / 2) - 2 * 8px)',\n    margin: theme.spacing(3)\n  },\n  descriptionCard: {\n    margin: '0',\n    boxShadow: 'none',\n    border: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  form: {\n    margin: '0'\n  },\n  cardTitle\n})\n\nexport default descriptionCardStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Card from './Card.js'\nimport CardBody from './CardBody'\n\n// import GridContainer from '../Grid/GridContainer.js'\n// import GridItem from '../Grid/GridItem'\n\nimport widgetList from '../Widget/widgetList.js'\nimport Button from '../CustomButtons/Button.js'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport styles from '../../assets/jss/material-kit-react/components/descriptionCardStyle.js'\nconst useStyles = makeStyles(styles)\n\nexport default function DescriptionCard (props) {\n  const classes = useStyles()\n\n  const [open, setOpen] = React.useState(false)\n  const [scroll, setScroll] = React.useState('paper')\n  const descriptionElementRef = React.useRef(null)\n\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef\n      if (descriptionElement !== null) {\n        descriptionElement.focus()\n      }\n    }\n  }, [open])\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true)\n    setScroll(scrollType)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const widgetInfo = props.widget ? widgetList[props.widget] : widgetList.default\n\n  return (\n    <div className={classes.container} justify='center'>\n      <div>\n        <Card className={classes.descriptionCard}>\n          <form className={classes.form}>\n            <CardBody>\n              <h4 className={classes.cardTitle}>{widgetInfo.title}</h4>\n              {widgetInfo.briefDescriptionText}\n              <Button color='geeringupSecondary' onClick={handleClickOpen('paper')}>Read More</Button>\n            </CardBody>\n          </form>\n        </Card>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n      >\n        <DialogTitle id='scroll-dialog-title'>Instructions</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id='scroll-dialog-description'\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {widgetInfo.readMoreDescriptionText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='geeringupSecondary'>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport {\n  container,\n  defaultFont,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  transition,\n  boxShadow,\n  drawerWidth\n} from '../../material-kit-react.js'\n\nconst headerStyle = {\n  appBar: {\n    display: 'flex',\n    border: '0',\n    borderRadius: '0',\n    padding: '6px 0',\n    marginBottom: '12px',\n    color: '#555',\n    width: '100%',\n    backgroundColor: '#fff',\n    boxShadow:\n      '0 4px 18px 0px rgba(0, 0, 0, 0.12), 0 7px 10px -5px rgba(0, 0, 0, 0.15)',\n    transition: 'all 150ms ease 0s',\n    alignItems: 'center',\n    flexFlow: 'row nowrap',\n    justifyContent: 'flex-start',\n    position: 'relative',\n    zIndex: 'unset'\n  },\n  absolute: {\n    position: 'absolute',\n    zIndex: '1100'\n  },\n  fixed: {\n    position: 'fixed',\n    zIndex: '1100'\n  },\n  container: {\n    ...container,\n    minHeight: '50px',\n    flex: '1 0 0',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    display: 'flex',\n    flexWrap: 'nowrap'\n  },\n  flex: {\n    flex: '1',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  title: {\n    ...defaultFont,\n    lineHeight: '30px',\n    fontSize: '24px',\n    borderRadius: '3px',\n    textTransform: 'none',\n    color: 'inherit',\n    padding: '8px 16px',\n    letterSpacing: 'unset',\n    '&:hover,&:focus': {\n      color: 'inherit',\n      background: 'transparent'\n    }\n  },\n  appResponsive: {\n    margin: '20px 10px'\n  },\n  primary: {\n    backgroundColor: primaryColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(156, 39, 176, 0.46)'\n  },\n  info: {\n    backgroundColor: infoColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(0, 188, 212, 0.46)'\n  },\n  success: {\n    backgroundColor: successColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(76, 175, 80, 0.46)'\n  },\n  warning: {\n    backgroundColor: warningColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(255, 152, 0, 0.46)'\n  },\n  danger: {\n    backgroundColor: dangerColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(244, 67, 54, 0.46)'\n  },\n  rose: {\n    backgroundColor: roseColor,\n    color: '#FFFFFF',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(233, 30, 99, 0.46)'\n  },\n  transparent: {\n    backgroundColor: 'transparent !important',\n    boxShadow: 'none',\n    paddingTop: '25px',\n    color: '#FFFFFF'\n  },\n  dark: {\n    color: '#FFFFFF',\n    backgroundColor: '#212121 !important',\n    boxShadow:\n      '0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(33, 33, 33, 0.46)'\n  },\n  white: {\n    border: '0',\n    padding: '0.625rem 0',\n    marginBottom: '20px',\n    color: '#555',\n    backgroundColor: '#fff !important',\n    boxShadow:\n      '0 4px 18px 0px rgba(0, 0, 0, 0.12), 0 7px 10px -5px rgba(0, 0, 0, 0.15)'\n  },\n  geeringupPrimary: {\n    color: '#fff',\n    backgroundColor: '#87D3E4'\n  },\n  drawerPaper: {\n    border: 'none',\n    bottom: '0',\n    transitionProperty: 'top, bottom, width',\n    transitionDuration: '.2s, .2s, .35s',\n    transitionTimingFunction: 'linear, linear, ease',\n    width: drawerWidth,\n    ...boxShadow,\n    position: 'fixed',\n    display: 'block',\n    top: '0',\n    height: '100vh',\n    right: '0',\n    left: 'auto',\n    visibility: 'visible',\n    overflowY: 'visible',\n    borderTop: 'none',\n    textAlign: 'left',\n    paddingRight: '0px',\n    paddingLeft: '0',\n    ...transition\n  },\n  leftLinks: {\n    marginLeft: '24px',\n    display: 'flex',\n    width: '200px'\n  },\n  rightLinks: {\n    marginRight: '24px',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    width: '200px'\n  },\n  menu: {\n    width: '400px'\n  },\n  lPad: {\n    paddingLeft: '8px'\n  }\n}\n\nexport default headerStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport Hidden from '@material-ui/core/Hidden'\nimport Drawer from '@material-ui/core/Drawer'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n// @material-ui/icons\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n// core components\nimport widgetList from '../Widget/widgetList'\nimport styles from '../../assets/jss/material-kit-react/components/headerStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function Header (props) {\n  const classes = useStyles()\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [appMenuAnchor, setAppMenuAnchor] = React.useState(null)\n\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener('scroll', headerColorChange)\n    }\n    return function cleanup () {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener('scroll', headerColorChange)\n      }\n    }\n  })\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n  const handleAppMenuClick = (event) => {\n    setAppMenuAnchor(event.currentTarget)\n  }\n  const handleAppMenuClose = () => {\n    setAppMenuAnchor(null)\n  }\n\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props\n    const windowsScrollTop = window.pageYOffset\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName('header')[0]\n        .classList.remove(classes[color])\n      document.body\n        .getElementsByTagName('header')[0]\n        .classList.add(classes[changeColorOnScroll.color])\n    } else {\n      document.body\n        .getElementsByTagName('header')[0]\n        .classList.add(classes[color])\n      document.body\n        .getElementsByTagName('header')[0]\n        .classList.remove(classes[changeColorOnScroll.color])\n    }\n  }\n  const { color, rightLinks, leftLinks, brand, fixed, absolute, setWidget, loading } = props\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  })\n  const brandComponent =\n    <>\n      <Button\n        className={classes.title}\n        onClick={handleAppMenuClick}\n\n      >\n        {loading ? '' : (\n          <>\n            <ExpandMoreIcon />\n            <div className={classes.lPad} />\n          </>\n        )}\n        {brand}\n      </Button>\n      <Menu\n        disabled={loading}\n        id='AppMenu'\n        // variant='temporary'\n        anchorEl={appMenuAnchor}\n        open={Boolean(appMenuAnchor)}\n        onClose={handleAppMenuClose}\n        className={classes.menu}\n        keepMounted\n      >\n        {Object.keys(widgetList).map((widget) => {\n          if (widgetList[widget].visible === false) return ''\n          return (\n            <MenuItem\n              key={widget}\n              onClick={() => {\n                setWidget(widget)\n                handleAppMenuClose()\n              }}\n            >\n              {widgetList[widget].brand}\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </>\n\n  const leftLinksComponent = <Hidden smDown implementation='css'>{leftLinks}</Hidden>\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.leftLinks}>\n          {leftLinks !== undefined ? leftLinksComponent : null}\n        </div>\n        <div className={classes.flex}>\n          {brandComponent}\n        </div>\n        <div className={classes.rightLinks}>\n          <Hidden smDown implementation='css'>\n            {rightLinks}\n          </Hidden>\n        </div>\n        <Hidden mdUp>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation='js'>\n        <Drawer\n          variant='temporary'\n          anchor='right'\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <div className={classes.appResponsive}>\n            {leftLinks}\n            {rightLinks}\n          </div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  )\n}\n\nHeader.defaultProp = {\n  color: 'white'\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger',\n    'transparent',\n    'white',\n    'rose',\n    'dark',\n    'geeringupPrimary'\n  ]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      'primary',\n      'info',\n      'success',\n      'warning',\n      'danger',\n      'transparent',\n      'white',\n      'rose',\n      'dark'\n    ]).isRequired\n  })\n}\n","const tooltipsStyle = {\n  tooltip: {\n    padding: '10px 15px',\n    minWidth: '130px',\n    color: '#555555',\n    lineHeight: '1.7em',\n    background: '#FFFFFF',\n    border: 'none',\n    borderRadius: '3px',\n    boxShadow:\n        '0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2)',\n    maxWidth: '200px',\n    textAlign: 'center',\n    fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n    fontSize: '0.875em',\n    fontStyle: 'normal',\n    fontWeight: '400',\n    textShadow: 'none',\n    textTransform: 'none',\n    letterSpacing: 'normal',\n    wordBreak: 'normal',\n    wordSpacing: 'normal',\n    wordWrap: 'normal',\n    whiteSpace: 'normal',\n    lineBreak: 'auto'\n  }\n}\n\nexport default tooltipsStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport { defaultFont } from '../../material-kit-react.js'\n\nimport tooltip from '../tooltipsStyle.js'\n\nconst headerLinksStyle = theme => ({\n  list: {\n    ...defaultFont,\n    fontSize: '14px',\n    margin: 0,\n    paddingLeft: '0',\n    listStyle: 'none',\n    paddingTop: '0',\n    paddingBottom: '0',\n    color: 'inherit'\n  },\n  listItem: {\n    float: 'left',\n    color: 'inherit',\n    position: 'relative',\n    display: 'block',\n    width: 'auto',\n    margin: '0',\n    padding: '0',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      '&:after': {\n        width: 'calc(100% - 30px)',\n        content: '\"\"',\n        display: 'block',\n        height: '1px',\n        marginLeft: '15px',\n        backgroundColor: '#e5e5e5'\n      }\n    }\n  },\n  listItemText: {\n    padding: '0 !important'\n  },\n  navLink: {\n    color: 'inherit',\n    position: 'relative',\n    padding: '0.9375rem',\n    fontWeight: '400',\n    fontSize: '12px',\n    textTransform: 'uppercase',\n    borderRadius: '3px',\n    lineHeight: '20px',\n    textDecoration: 'none',\n    margin: '0px',\n    display: 'inline-flex',\n    '&:hover,&:focus': {\n      color: 'inherit',\n      background: 'rgba(200, 200, 200, 0.2)'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 30px)',\n      marginLeft: '15px',\n      marginBottom: '8px',\n      marginTop: '8px',\n      textAlign: 'left',\n      '& > span:first-child': {\n        justifyContent: 'flex-start'\n      }\n    }\n  },\n  leftNavLink: {\n    color: 'inherit',\n    position: 'relative',\n    padding: '0 10px',\n    fontWeight: '400',\n    fontSize: '12px',\n    textTransform: 'uppercase',\n    borderRadius: '3px',\n    lineHeight: '20px',\n    textDecoration: 'none',\n    margin: '0px',\n    display: 'inline-flex',\n    '&:focus': {\n      color: 'inherit',\n      background: 'rgba(200, 200, 200, 0.2)'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 30px)',\n      marginLeft: '15px',\n      marginBottom: '8px',\n      marginTop: '8px',\n      textAlign: 'left',\n      '& > span:first-child': {\n        justifyContent: 'flex-start'\n      }\n    }\n  },\n  notificationNavLink: {\n    color: 'inherit',\n    padding: '0.9375rem',\n    fontWeight: '400',\n    fontSize: '12px',\n    textTransform: 'uppercase',\n    lineHeight: '20px',\n    textDecoration: 'none',\n    margin: '0px',\n    display: 'inline-flex',\n    top: '4px'\n  },\n  registerNavLink: {\n    top: '3px',\n    position: 'relative',\n    fontWeight: '400',\n    fontSize: '12px',\n    textTransform: 'uppercase',\n    lineHeight: '20px',\n    textDecoration: 'none',\n    margin: '0px',\n    display: 'inline-flex'\n  },\n  navLinkActive: {\n    color: 'inherit',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)'\n  },\n  icons: {\n    width: '20px',\n    height: '20px',\n    marginRight: '3px'\n  },\n  socialIcons: {\n    position: 'relative',\n    fontSize: '20px !important',\n    marginRight: '4px'\n  },\n  dropdownLink: {\n    '&,&:hover,&:focus': {\n      color: 'inherit',\n      textDecoration: 'none',\n      display: 'block',\n      padding: '10px 20px'\n    }\n  },\n  ...tooltip,\n  marginRight5: {\n    marginRight: '5px'\n  }\n})\n\nexport default headerLinksStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n/*eslint-disable*/\nimport React from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// @material-ui/icons\nimport { Apps, CloudDownload } from \"@material-ui/icons\";\n// core components\nimport Button from \"../CustomButtons/Button.js\";\n\nimport styles from \"../../assets/jss/material-kit-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RightHeaderLinks() {\n  const classes = useStyles();\n\n  const githubTitle = \"Check out our github\"\n  const githubLink = \"https://github.com/dtquantumc/sw\"\n\n  const youtubeTitle = \"Subscribe on youtube\"\n  const youtubeLink = \"https://www.youtube.com/user/GEERingUp\"\n\n  const instagramTitle = \"Follow us on instagram\"\n  const instagramLink = \"https://www.instagram.com/geeringup/?hl=en\"\n\n  return (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id=\"github-tooltip\"\n          title={githubTitle}\n          placement={window.innerWidth > 959 ? \"top\" : \"left\"}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            href={githubLink}\n            target=\"_blank\"\n            color=\"transparent\"\n            className={classes.navLink}\n          >\n            <i className={classes.socialIcons + \" fab fa-github\"} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id=\"youtube-tooltip\"\n          title={youtubeTitle}\n          placement={window.innerWidth > 959 ? \"top\" : \"left\"}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color=\"transparent\"\n            href={youtubeLink}\n            target=\"_blank\"\n            className={classes.navLink}\n          >\n            <i className={classes.socialIcons + \" fab fa-youtube\"} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id=\"instagram-tooltip\"\n          title={instagramTitle}\n          placement={window.innerWidth > 959 ? \"top\" : \"left\"}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color=\"transparent\"\n            href={instagramLink}\n            target=\"_blank\"\n            className={classes.navLink}\n          >\n            <i className={classes.socialIcons + \" fab fa-instagram\"} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n    </List>\n  );\n}\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\n/*eslint-disable*/\nimport React from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// core components\nimport Button from \"../../components/CustomButtons/Button.js\";\n\nimport styles from \"../../assets/jss/material-kit-react/components/headerLinksStyle.js\";\n\nimport dtqcLogo from \"../../images/DTQC_Logo0.svg\"\n\nconst useStyles = makeStyles(styles);\n\nexport default function LeftHeaderLinks() {\n  const classes = useStyles();\n\n  const dtqcTitle = \"More about DTQC\"\n  const dtqcLink = \"https://quantumcomputing.ubc.ca/education/k-12-education\"\n\n  return (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id=\"dtqc-tooltip\"\n          title={dtqcTitle}\n          placement={window.innerWidth > 959 ? \"top\" : \"left\"}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color=\"transparent\"\n            href={dtqcLink}\n            target='_blank'\n            className={classes.leftNavLink}\n          >\n            <img src={dtqcLogo} style={{ height: '38px', borderRadius: '3px'}}/>\n          </Button>\n        </Tooltip>\n      </ListItem>\n    </List>\n  );\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport React from 'react'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = {\n  grid: {\n    marginRight: '-15px',\n    marginLeft: '-15px',\n    width: 'auto'\n  }\n}\n\nconst useStyles = makeStyles(styles)\n\nexport default function GridContainer (props) {\n  const classes = useStyles()\n  const { children, className, ...rest } = props\n  return (\n    <Grid container {...rest} className={classes.grid + ' ' + className}>\n      {children}\n    </Grid>\n  )\n}\n\nGridContainer.defaultProps = {\n  className: ''\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport { container } from '../../material-kit-react.js'\n\nconst footerStyle = {\n  block: {\n    color: 'inherit',\n    padding: '0.9375rem',\n    fontWeight: '500',\n    fontSize: '12px',\n    textTransform: 'uppercase',\n    borderRadius: '3px',\n    textDecoration: 'none',\n    position: 'relative',\n    display: 'block'\n  },\n  left: {\n    float: 'left!important',\n    display: 'block'\n  },\n  right: {\n    padding: '15px 0',\n    margin: 'auto 0 auto auto'\n  },\n  footer: {\n    padding: '0.9375rem 0',\n    textAlign: 'center',\n    display: 'flex',\n    zIndex: '2',\n    position: 'absolute',\n    width: '100%'\n  },\n  a: {\n    color: '#D96262',\n    textDecoration: 'none',\n    backgroundColor: 'transparent'\n  },\n  footerWhiteFont: {\n    '&,&:hover,&:focus': {\n      color: '#FFFFFF'\n    }\n  },\n  container: {\n    display: 'flex',\n    ...container\n  },\n  list: {\n    marginBottom: '0',\n    padding: '0',\n    marginTop: '0'\n  },\n  inlineBlock: {\n    display: 'inline-block',\n    padding: '0px',\n    width: 'auto'\n  },\n  icon: {\n    width: '18px',\n    height: '18px',\n    position: 'relative',\n    top: '3px'\n  }\n}\nexport default footerStyle\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n/*eslint-disable*/\nimport React from 'react'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// material-ui core components\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport styles from '../../assets/jss/material-kit-react/components/footerStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function Footer (props) {\n  const classes = useStyles()\n  const { whiteFont, leftLinks } = props\n  const footerClasses = classNames({\n    [classes.footer]: true,\n    [classes.footerWhiteFont]: whiteFont\n  })\n\n  return (\n    <footer className={footerClasses}>\n      <div className={classes.container}>\n        <div className={classes.left}>\n          {leftLinks}\n        </div>\n        <div className={classes.right}>\n          &copy; DTQC, Geering Up, UBC\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  whiteFont: PropTypes.bool\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport { defaultFont } from '../../material-kit-react.js'\n\n// TODO: Copied from headerLinksStyle.js, should instead re-use\nconst footerLinksStyle = theme => ({\n  list: {\n    ...defaultFont,\n    fontSize: '14px',\n    margin: 0,\n    paddingLeft: '0',\n    listStyle: 'none',\n    paddingTop: '0',\n    paddingBottom: '0',\n    color: 'inherit'\n  },\n  listItem: {\n    float: 'left',\n    color: 'inherit',\n    position: 'relative',\n    display: 'block',\n    width: 'auto',\n    margin: '0',\n    padding: '0',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      '&:after': {\n        width: 'calc(100% - 30px)',\n        content: '\"\"',\n        display: 'block',\n        height: '1px',\n        marginLeft: '15px',\n        backgroundColor: '#e5e5e5'\n      }\n    }\n  }\n})\n\nexport default footerLinksStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React from 'react'\n\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport UBC from '../../images/ubc-logo-2018-crest-blue-rgb72.svg'\nimport supercluster from '../../images/DTS_Dark_00.svg'\nimport geeringupLogo from '../../images/GU_Icon_Blue.svg'\nimport microsoftLogo from '../../images/msft.svg'\nimport dwaveLogo from '../../images/dwave.svg'\n\n// core components\nimport Button from '../../components/CustomButtons/Button.js'\n\nimport styles from '../../assets/jss/material-kit-react/components/footerLinksStyle.js'\n\nconst useStyles = makeStyles(styles)\n\nexport default function FooterLinks () {\n  const classes = useStyles()\n\n  const ubcTitle = 'UBC'\n  const ubcLink = 'https://www.ubc.ca/'\n  const ubcDescription = 'Image of the UBC crest'\n\n  const superclusterTitle = 'Digital Supercluster'\n  const superclusterLink =\n    'https://www.digitalsupercluster.ca/programs/capacity-building-program/diversifying-talent-in-quantum-computing/'\n  const superclusterDescription = 'Image of Digital Technology Supercluster\\'s logo'\n\n  const geeringupTitle = 'UBC Geering Up'\n  const geeringupLink = 'https://geeringup.apsc.ubc.ca/'\n  const geeringupDescription = 'Image of Geering Up\\'s logo'\n\n  const microsoftTitle = 'Microsoft'\n  const microsoftLink = 'https://www.microsoft.com/en-ca/'\n  const microsoftDescription = 'Image of Microsoft\\'s logo'\n\n  const dwaveTitle = 'D-Wave'\n  const dwaveLink = 'https://www.dwavesys.com/'\n  const dwaveDescription = 'Image of D-Wave\\'s logo'\n\n  return (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id='ubc-tooltip'\n          title={ubcTitle}\n          placement={window.innerWidth > 959 ? 'top' : 'left'}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color='transparent'\n            href={ubcLink}\n            target='_blank'\n            className={classes.navLink}\n          >\n            <img src={UBC} alt={ubcDescription} style={{ height: '42px' }} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id='supercluster-tooltip'\n          title={superclusterTitle}\n          placement={window.innerWidth > 959 ? 'top' : 'left'}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color='transparent'\n            href={superclusterLink}\n            target='_blank'\n            className={classes.navLink}\n          >\n            <img src={supercluster} alt={superclusterDescription} style={{ height: '42px' }} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id='geeringup-tooltip'\n          title={geeringupTitle}\n          placement={window.innerWidth > 959 ? 'top' : 'left'}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color='transparent'\n            href={geeringupLink}\n            target='_blank'\n            className={classes.navLink}\n          >\n            <img src={geeringupLogo} alt={geeringupDescription} style={{ height: '42px' }} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id='dwave-tooltip'\n          title={dwaveTitle}\n          placement={window.innerWidth > 959 ? 'top' : 'left'}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color='transparent'\n            href={dwaveLink}\n            target='_blank'\n            className={classes.navLink}\n          >\n            <img src={dwaveLogo} alt={dwaveDescription} style={{ height: '34px', paddingTop: '5px' }} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n\n      <ListItem className={classes.listItem}>\n        <Tooltip\n          id='microsoft-tooltip'\n          title={microsoftTitle}\n          placement={window.innerWidth > 959 ? 'top' : 'left'}\n          classes={{ tooltip: classes.tooltip }}\n        >\n          <Button\n            color='transparent'\n            href={microsoftLink}\n            target='_blank'\n            className={classes.navLink}\n          >\n            <img src={microsoftLogo} alt={microsoftDescription} style={{ height: '34px' }} />\n          </Button>\n        </Tooltip>\n      </ListItem>\n    </List>\n  )\n}\n","/*!\n\n =========================================================\n * Material Kit React - v1.8.0 based on Material Kit - v2.0.2\n =========================================================\n\n * Product Page: https://www.creative-tim.com/product/material-kit-react\n * Copyright 2019 Creative Tim (https://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-kit-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\nimport { container, title } from '../../material-kit-react.js'\n\nconst appStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: '74px',\n    ...container\n  },\n  title: {\n    ...title,\n    display: 'inline-block',\n    position: 'relative',\n    marginTop: '30px',\n    minHeight: '32px',\n    color: '#FFFFFF',\n    textDecoration: 'none'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    maxWidth: '500px',\n    margin: '10px auto 0'\n  },\n  main: {\n    background: '#FFFFFF',\n    position: 'relative',\n    zIndex: '3'\n  },\n  mainRaised: {\n    margin: '-60px 30px 0px',\n    borderRadius: '6px',\n    boxShadow:\n      '0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)'\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    '& > :not(.game)': {\n      marginTop: '8px'\n    }\n  },\n  rightColumn: {\n    [theme.breakpoints.up('md')]: {\n      width: '340px',\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '440px',\n    },\n  },\n  nurseSchedulingInput: {\n    justifyContent: 'center'\n  },\n  nurseSwitchButton: {\n    margin: '8px',\n    backgroundColor: '#D96262',\n    '&:hover,&:focus': {\n      backgroundColor: '#D96262'\n    }\n  },\n  sudokuSwitchButton: {\n    margin: '8px',\n    backgroundColor: '#D96262',\n    '&:hover,&:focus': {\n      backgroundColor: '#D96262'\n    }\n  },\n  latticeSwitchButton: {\n    margin: '8px',\n    backgroundColor: '#D96262',\n    '&:hover,&:focus': {\n      backgroundColor: '#D96262'\n    }\n  }\n})\n\nexport default appStyle\n","// SPDX-License-Identifier: MIT\n/*\n * (C) Copyright 2020\n * Diversifying Talent in Quantum Computing, Geering Up, UBC\n */\n\nimport React, { useState } from 'react'\n\n// core components\n// import QPUswitch from './components/Switch/QPUswitch.js'\nimport ButtonGroup from './components/ButtonGroup/ButtonGroup.js'\nimport Console from './components/CustomOutput/console.js'\nimport DescriptionCard from './components/Card/DescriptionCard.js'\n\nimport Header from './components/Header/Header.js'\nimport RightHeaderLinks from './components/Header/RightHeaderLinks.js'\nimport LeftHeaderLinks from './components/Header/LeftHeaderLinks.js'\n\nimport GridContainer from './components/Grid/GridContainer.js'\n\nimport Footer from './components/Footer/Footer.js'\nimport FooterLinks from './components/Footer/FooterLinks.js'\n\n// import Button from './components/CustomButtons/Button.js'\n// import GridItem from './components/Grid/GridItem.js'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport styles from './assets/jss/material-kit-react/views/app.js'\n\nimport widgetList from './components/Widget/widgetList'\n\n/**\n *\n * @param {object} props properties for the App\n * @returns {object} React Component\n */\nfunction App (props) {\n  const useStyles = makeStyles(styles)\n  const classes = useStyles()\n  // const [APIKey, setAPIKey] = useState('')\n  const [widgetOverride, overrideWidget] = useState('')\n  var [textLines, setTextLines] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  // widget is a string, a key to the widgetList object describing the widget\n  let widget\n\n  const setWidget = (wid) => {\n    if (!widgetList[wid]) {\n      widget = 'default'\n    }\n    window.history.replaceState({ app: wid }, widgetList[wid].brand, widgetList[wid].route)\n    overrideWidget(wid)\n  }\n\n  if (widgetOverride && widgetList[widgetOverride]) {\n    widget = widgetOverride\n  } else if (widgetList[props.widget]) {\n    widget = props.widget\n  } else {\n    setWidget('lattice')\n    widget = 'lattice'\n  }\n\n  const appBrand = widgetList[widget].brand\n  // const WidgetTag = widgetList[widget].component\n\n  const outputToConsole = (line) => {\n    setTextLines(textLines.concat(line))\n    textLines = textLines.concat(line)\n  }\n\n  const appendToConsole = function (word) {\n    textLines[textLines.length - 1] += word\n    setTextLines([...textLines])\n  }\n\n  const gameMenu =\n    <ButtonGroup\n      key='gameMenu'\n      setWidget={setWidget}\n    />\n\n  const widgetComponent =\n    Object.keys(widgetList).map((wid) => {\n      const WidC = widgetList[wid].component\n      return (\n        <div\n          style={{ display: (wid === widget ? null : 'none') }}\n          key={wid + 'Div'}\n        >\n          <WidC\n            id='myWidget'\n            getAPIKey={() => ''}\n            outputToConsole={outputToConsole}\n            appendToConsole={appendToConsole}\n            loading={loading}\n            setLoading={setLoading}\n            key={wid + 'Widget'}\n          />\n        </div>\n      )\n    })\n\n  const terminalWindowAndGameInfo =\n    <div className={classes.rightColumn}>\n      <Console\n      textLines={textLines}\n      title={widgetList[widget].name}\n      key='terminalWindow'\n      getIP={props.live}\n    />\n      <DescriptionCard\n        widget={widget}\n        key='howItWorksCard'\n      />\n    </div>\n\n  const gridContainerChildren = [gameMenu, widgetComponent, terminalWindowAndGameInfo]\n\n  return (\n    <div>\n      <Header\n        color='geeringupPrimary'\n        brand={appBrand}\n        rightLinks={<RightHeaderLinks />}\n        leftLinks={<LeftHeaderLinks />}\n        fixed\n        key='myHeader'\n        setWidget={setWidget}\n        // loading={loading}\n        loading={false}\n      />\n      <div className={classes.container}>\n        <GridContainer\n          className={classes.gridContainer}\n          children={gridContainerChildren}\n          key='myGridContainer'\n        />\n      </div>\n      <Footer\n        leftLinks={<FooterLinks />}\n        key='myFooter'\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GenericApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n/**\n * Routes to different components based on window pathname\n */\nfunction GenericApp () {\n  const route = window.location.pathname\n  if (route.startsWith('/app/')) {\n    return (<App widget={route.substr(5, route.length)} live />)\n  } else {\n    return (<App live />)\n  }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}